; Generated by restunts-export.py (Ghidra)
.8086
.model medium

include seg032.inc

seg032 segment byte public use16 'STUNTSC'
    assume cs:seg032, es:nothing, ss:nothing, ds:dseg

    db 0x90

; word __cdecl16far read_line(byte param_1, size_t * param_2, word param_3, int param_4, word param_5, word param_6, word param_7, undefined * param_8, undefined2 param_9, uint param_10, int param_11)
read_line_asm_ proc far
    var_A      = word ptr  -10
    var_8      = word ptr   -8
    var_6      = word ptr   -6
    var_4      = word ptr   -4
    var_2      = word ptr   -2
    param_1    = byte ptr    6
    param_2    = word ptr    8
    param_3    = word ptr   10
    param_4    = word ptr   12
    param_5    = word ptr   14
    param_6    = word ptr   16
    param_7    = word ptr   18
    param_8    = word ptr   20
    param_9    = word ptr   22
    param_10   = word ptr   24
    param_11   = word ptr   26

    push    bp
    mov     bp, sp
    sub     sp, 0xa
    push    si
    call    far ptr sprite_copy_2_to_1
    mov     ax, word ptr [bp+param_6]
    mov     word ptr [word_42A18], ax
    mov     ax, word ptr [bp+param_7]
    mov     word ptr [word_42A1A], ax
    mov     ax, word ptr [bp+param_2]
    mov     word ptr [off_42A1E], ax
    mov     ax, word ptr [bp+param_5]
    mov     word ptr [word_42A20], ax
    mov     bx, word ptr [bp+param_4]
    mov     si, word ptr [bp+param_2]
    mov     byte ptr [bx+si], 0x0
    test    byte ptr [bp+param_1], 0x1
    jz      LAB_3a4b_003e
    mov     bx, si
    mov     byte ptr [bx], 0x0
LAB_3a4b_003e:
    test    byte ptr [bp+param_1], 0x2
    jz      LAB_3a4b_004c
    mov     word ptr [word_42A22], 0x0
    jmp     LAB_3a4b_005a
LAB_3a4b_004c:
    push    word ptr [bp+param_2]              ; char *
    call    far ptr _strlen
    add     sp, 0x2
    mov     word ptr [word_42A22], ax
LAB_3a4b_005a:
    push    word ptr [bp+param_2]              ; char *
    call    far ptr _strlen
    add     sp, 0x2
    mov     word ptr [bp+var_6], ax
    jmp     LAB_3a4b_0076
LAB_3a4b_006a:
    mov     bx, word ptr [bp+var_6]
    inc     word ptr [bp+var_6]
    mov     si, word ptr [bp+param_2]
    mov     byte ptr [bx+si], 0x20
LAB_3a4b_0076:
    mov     ax, word ptr [bp+param_4]
    cmp     word ptr [bp+var_6], ax
    jl      LAB_3a4b_006a
    push    cs
    call    near ptr read_line_helper2
    mov     word ptr [word_42A16], 0x1
    mov     word ptr [word_42A1C], 0x1
    mov     word ptr [bp+var_A], 0x0
    push    cs
    call    near ptr read_line_helper
    push    word ptr [bp+param_11]
    push    word ptr [bp+param_10]
    call    far ptr timer_copy_counter
    add     sp, 0x4
    mov     ax, 0x4
    cwd
    push    dx
    push    ax
    call    far ptr set_add_value
    add     sp, 0x4
    mov     word ptr [bp+var_2], 0x1
LAB_3a4b_00b8:
    cmp     word ptr [bp+param_3], 0x0
    jz      LAB_3a4b_00cf
    mov     ax, word ptr [bp+param_3]
    mov     word ptr [bp+var_8], ax
    mov     word ptr [bp+param_3], 0x0
    jmp     LAB_3a4b_00e9
    db 0x90
LAB_3a4b_00cc:
    call    dword ptr [bp+param_8]
LAB_3a4b_00cf:
    call    far ptr kb_call_readchar_callback
    mov     word ptr [bp+var_8], ax
    or      ax, ax
    jnz     LAB_3a4b_00e9
    call    far ptr sub_2EB07
    or      ax, ax
    jz      LAB_3a4b_00cc
    mov     word ptr [bp+var_8], 0x0
LAB_3a4b_00e9:
    cmp     word ptr [bp+var_8], 0x0
    jnz     LAB_3a4b_0140
    mov     ax, 0x4
    cwd
    push    dx
    push    ax
    call    far ptr set_add_value
    add     sp, 0x4
    mov     ax, word ptr [word_42A1C]
    mov     word ptr [bp+var_4], ax
    mov     word ptr [word_42A1C], 0x1
    push    cs
    call    near ptr read_line_helper
    cmp     word ptr [bp+var_4], 0x0
    jz      LAB_3a4b_011c
    mov     word ptr [word_42A1C], 0x0
    jmp     LAB_3a4b_0122
    db 0x90
LAB_3a4b_011c:
    mov     word ptr [word_42A1C], 0x1
LAB_3a4b_0122:
    mov     ax, word ptr [bp+param_10]
    or      ax, word ptr [bp+param_11]
    jz      LAB_3a4b_00b8
    call    far ptr timer_compare_dx
    or      ax, ax
    jz      LAB_3a4b_00b8
LAB_3a4b_0133:
    push    cs
    call    near ptr read_line_helper
    mov     ax, word ptr [bp+var_8]
    pop     si
    mov     sp, bp
    pop     bp
    retf
    db 0x90
LAB_3a4b_0140:
    push    word ptr [bp+param_11]
    push    word ptr [bp+param_10]
    call    far ptr timer_copy_counter
    add     sp, 0x4
    cmp     word ptr [bp+var_8], 0xd
    jz      LAB_3a4b_0133
    cmp     word ptr [bp+var_8], 0x1b
    jz      LAB_3a4b_0133
    cmp     word ptr [bp+var_8], 0x4800
    jz      LAB_3a4b_0133
    cmp     word ptr [bp+var_8], 0x5000
    jnz     LAB_3a4b_016e
    test    byte ptr [bp+param_1], 0x8
    jz      LAB_3a4b_0133
LAB_3a4b_016e:
    cmp     word ptr [bp+var_8], 0x9
    jnz     LAB_3a4b_017a
    test    byte ptr [bp+param_1], 0x10
    jz      LAB_3a4b_0133
LAB_3a4b_017a:
    cmp     word ptr [bp+var_8], 0x4d00
    jnz     LAB_3a4b_0198
    push    cs
    call    near ptr read_line_helper
    mov     ax, word ptr [word_42A22]
    cmp     word ptr [bp+param_4], ax
    jg      LAB_3a4b_0190
    jmp     near ptr LAB_3a4b_0339
LAB_3a4b_0190:
    inc     word ptr [word_42A22]
    jmp     near ptr LAB_3a4b_0339
    db 0x90
LAB_3a4b_0198:
    cmp     word ptr [bp+var_8], 0x4b00
    jnz     LAB_3a4b_01b4
    push    cs
    call    near ptr read_line_helper
    cmp     word ptr [word_42A22], 0x0
    jnz     LAB_3a4b_01ad
    jmp     near ptr LAB_3a4b_0339
LAB_3a4b_01ad:
    dec     word ptr [word_42A22]
    jmp     near ptr LAB_3a4b_0339
LAB_3a4b_01b4:
    cmp     word ptr [bp+var_8], 0x4700
    jnz     LAB_3a4b_01c8
    push    cs
    call    near ptr read_line_helper
    mov     word ptr [word_42A22], 0x0
    jmp     near ptr LAB_3a4b_0339
LAB_3a4b_01c8:
    cmp     word ptr [bp+var_8], 0x4f00
    jnz     LAB_3a4b_01e4
    push    cs
    call    near ptr read_line_helper
    push    word ptr [bp+param_2]              ; char *
    call    far ptr _strlen
    add     sp, 0x2
    mov     word ptr [word_42A22], ax
    jmp     near ptr LAB_3a4b_0339
LAB_3a4b_01e4:
    cmp     word ptr [bp+var_8], 0x5200
    jnz     LAB_3a4b_0212
    push    cs
    call    near ptr read_line_helper
    cmp     word ptr [bp+var_A], 0x0
    jnz     LAB_3a4b_0204
    mov     word ptr [bp+var_A], 0x1
    mov     word ptr [word_42A16], 0x8
    jmp     near ptr LAB_3a4b_0339
    db 0x90
LAB_3a4b_0204:
    mov     word ptr [bp+var_A], 0x0
    mov     word ptr [word_42A16], 0x1
    jmp     near ptr LAB_3a4b_0339
LAB_3a4b_0212:
    cmp     word ptr [bp+var_8], 0x5300
    jnz     LAB_3a4b_0260
    mov     ax, word ptr [word_42A22]
    cmp     word ptr [bp+param_4], ax
    jg      LAB_3a4b_0224
    jmp     near ptr LAB_3a4b_033d
LAB_3a4b_0224:
    mov     bx, word ptr [bp+param_2]
    mov     si, ax
    cmp     byte ptr [bx+si], 0x0
    jnz     LAB_3a4b_0231
    jmp     near ptr LAB_3a4b_033d
LAB_3a4b_0231:
    push    cs
    call    near ptr read_line_helper
    mov     ax, word ptr [word_42A22]
    mov     word ptr [bp+var_6], ax
    jmp     LAB_3a4b_024c
    db 0x90
LAB_3a4b_023e:
    mov     si, word ptr [bp+var_6]
    add     si, word ptr [bp+param_2]
    mov     al, byte ptr [si+0x1]
    mov     byte ptr [si], al
    inc     word ptr [bp+var_6]
LAB_3a4b_024c:
    mov     ax, word ptr [bp+param_4]
    cmp     word ptr [bp+var_6], ax
    jl      LAB_3a4b_023e
LAB_3a4b_0254:
    mov     si, ax
    mov     bx, word ptr [bp+param_2]
    mov     byte ptr [bx+si-0x1], 0x20
    jmp     near ptr LAB_3a4b_0335
LAB_3a4b_0260:
    cmp     word ptr [bp+var_8], 0x8
    jnz     LAB_3a4b_0298
    cmp     word ptr [word_42A22], 0x0
    jnz     LAB_3a4b_0270
    jmp     near ptr LAB_3a4b_033d
LAB_3a4b_0270:
    push    cs
    call    near ptr read_line_helper
    dec     word ptr [word_42A22]
    mov     ax, word ptr [word_42A22]
    mov     word ptr [bp+var_6], ax
    jmp     LAB_3a4b_028e
LAB_3a4b_0280:
    mov     si, word ptr [bp+var_6]
    add     si, word ptr [bp+param_2]
    mov     al, byte ptr [si+0x1]
    mov     byte ptr [si], al
    inc     word ptr [bp+var_6]
LAB_3a4b_028e:
    mov     ax, word ptr [bp+param_4]
    cmp     word ptr [bp+var_6], ax
    jl      LAB_3a4b_0280
    jmp     LAB_3a4b_0254
LAB_3a4b_0298:
    cmp     word ptr [bp+var_8], 0x20
    jge     LAB_3a4b_02a1
    jmp     near ptr LAB_3a4b_033d
LAB_3a4b_02a1:
    cmp     word ptr [bp+var_8], 0x7a
    jle     LAB_3a4b_02aa
    jmp     near ptr LAB_3a4b_033d
LAB_3a4b_02aa:
    mov     ax, word ptr [word_42A22]
    cmp     word ptr [bp+param_4], ax
    jg      LAB_3a4b_02b5
    jmp     near ptr LAB_3a4b_033d
LAB_3a4b_02b5:
    push    cs
    call    near ptr read_line_helper
    cmp     word ptr [bp+var_2], 0x0
    jz      LAB_3a4b_02e6
    test    byte ptr [bp+param_1], 0x4
    jnz     LAB_3a4b_02e6
    mov     word ptr [word_42A22], 0x0
    mov     word ptr [bp+var_6], 0x0
    jmp     LAB_3a4b_02de
LAB_3a4b_02d2:
    mov     bx, word ptr [bp+var_6]
    mov     si, word ptr [bp+param_2]
    mov     byte ptr [bx+si], 0x20
    inc     word ptr [bp+var_6]
LAB_3a4b_02de:
    mov     ax, word ptr [bp+param_4]
    cmp     word ptr [bp+var_6], ax
    jl      LAB_3a4b_02d2
LAB_3a4b_02e6:
    mov     si, word ptr [bp+param_2]
    add     si, word ptr [word_42A22]
    cmp     byte ptr [si], 0x0
    jnz     LAB_3a4b_02f6
    mov     byte ptr [si+0x1], 0x0
LAB_3a4b_02f6:
    cmp     word ptr [bp+var_A], 0x0
    jz      LAB_3a4b_031e
    mov     ax, word ptr [bp+param_4]
    sub     ax, 0x2
    mov     word ptr [bp+var_6], ax
    jmp     LAB_3a4b_0316
    db 0x90
LAB_3a4b_0308:
    mov     si, word ptr [bp+var_6]
    add     si, word ptr [bp+param_2]
    mov     al, byte ptr [si]
    mov     byte ptr [si+0x1], al
    dec     word ptr [bp+var_6]
LAB_3a4b_0316:
    mov     ax, word ptr [word_42A22]
    cmp     word ptr [bp+var_6], ax
    jge     LAB_3a4b_0308
LAB_3a4b_031e:
    mov     bx, word ptr [bp+param_2]
    mov     si, word ptr [word_42A22]
    mov     al, byte ptr [bp+var_8]
    mov     byte ptr [bx+si], al
    mov     ax, si
    cmp     word ptr [bp+param_4], ax
    jle     LAB_3a4b_0335
    inc     word ptr [word_42A22]
LAB_3a4b_0335:
    push    cs
    call    near ptr read_line_helper2
LAB_3a4b_0339:
    push    cs
    call    near ptr read_line_helper
LAB_3a4b_033d:
    mov     word ptr [bp+var_2], 0x0
    jmp     near ptr LAB_3a4b_00b8
read_line_asm_ endp
    db 0x90

; undefined __cdecl16far read_line_helper(void)
read_line_helper_asm_ proc far
    var_6      = word ptr   -6
    var_4      = word ptr   -4
    var_2      = word ptr   -2

    push    bp
    mov     bp, sp
    sub     sp, 0x6
    cmp     word ptr [word_42A1C], 0x0
    jnz     LAB_3a4b_0356
    jmp     near ptr LAB_3a4b_03e1
LAB_3a4b_0356:
    push    word ptr [off_42A1E]               ; char *
    call    far ptr _strlen
    add     sp, 0x2
    cmp     ax, word ptr [word_42A22]
    jge     LAB_3a4b_0377
    push    word ptr [off_42A1E]               ; char *
    call    far ptr _strlen
    add     sp, 0x2
    mov     word ptr [word_42A22], ax
LAB_3a4b_0377:
    mov     ax, 0x1
    push    ax
    mov     ax, word ptr [word_42A22]
    add     ax, word ptr [off_42A1E]
    push    ax
    call    far ptr font_op
    add     sp, 0x4
    mov     word ptr [bp+var_2], ax
    or      ax, ax
    jnz     LAB_3a4b_03a1
    mov     ax, 0x53ca
    push    ax
    call    far ptr font_op2
    add     sp, 0x2
    mov     word ptr [bp+var_2], ax
LAB_3a4b_03a1:
    push    word ptr [word_42A22]
    push    word ptr [off_42A1E]
    call    far ptr font_op
    add     sp, 0x4
    add     ax, word ptr [word_42A18]
    mov     word ptr [bp+var_4], ax
    les     bx, [fontdefptr2]
    mov     ax, word ptr es:[bx+0x12]
    add     ax, word ptr [word_42A1A]
    sub     ax, word ptr [word_42A16]
    mov     word ptr [bp+var_6], ax
    push    word ptr es:[bx]
    push    word ptr [word_42A16]
    push    word ptr [bp+var_2]
    push    ax
    push    word ptr [bp+var_4]
    call    far ptr sub_35B76
    add     sp, 0xa
LAB_3a4b_03e1:
    mov     sp, bp
    pop     bp
    retf
read_line_helper_asm_ endp
    db 0x90

; undefined __cdecl16far read_line_helper2(void)
read_line_helper2_asm_ proc far
    var_6      = word ptr   -6
    var_4      = word ptr   -4
    var_2      = word ptr   -2

    push    bp
    mov     bp, sp
    sub     sp, 0x6
    push    si
    cmp     word ptr [word_42A20], 0x0
    jz      LAB_3a4b_042e
    jmp     LAB_3a4b_041c
LAB_3a4b_03f6:
    push    word ptr [off_42A1E]               ; char *
    call    far ptr _strlen
    add     sp, 0x2
    or      ax, ax
    jz      LAB_3a4b_042e
    push    word ptr [off_42A1E]               ; char *
    call    far ptr _strlen
    add     sp, 0x2
    mov     si, ax
    mov     bx, word ptr [off_42A1E]
    mov     byte ptr [bx+si-0x1], 0x0
LAB_3a4b_041c:
    push    word ptr [off_42A1E]
    call    far ptr font_op2
    add     sp, 0x2
    cmp     ax, word ptr [word_42A20]
    jg      LAB_3a4b_03f6
LAB_3a4b_042e:
    push    word ptr [off_42A1E]               ; char *
    call    far ptr _strlen
    add     sp, 0x2
    mov     word ptr [bp+var_2], ax
    mov     ax, word ptr [word_42A22]
    cmp     word ptr [bp+var_2], ax
    jge     LAB_3a4b_044b
    mov     ax, word ptr [bp+var_2]
    mov     word ptr [word_42A22], ax
LAB_3a4b_044b:
    push    word ptr [word_42A1A]
    push    word ptr [word_42A18]
    push    word ptr [off_42A1E]
    call    far ptr sub_345BC
    add     sp, 0x6
    cmp     word ptr [word_42A20], 0x0
    jz      LAB_3a4b_04a3
    push    word ptr [off_42A1E]
    call    far ptr font_op2
    add     sp, 0x2
    mov     word ptr [bp+var_6], ax
    mov     ax, word ptr [word_42A20]
    sub     ax, word ptr [bp+var_6]
    mov     word ptr [bp+var_4], ax
    or      ax, ax
    jle     LAB_3a4b_04a3
    les     bx, [fontdefptr2]
    push    word ptr es:[bx+0x2]
; WASM produces a disp16 operand when disp8, like the original
; code, is sufficient. To prevent the instruction and segment
; to expand by an extra byte, just output the raw original
; instruction for now.
; <REPLACE>
    db      0x26, 0xFF, 0x77, 0x12
; </REPLACE>
;    push    word ptr es:[bx+word_405FE]
    push    ax
    push    word ptr [word_42A1A]
    mov     ax, word ptr [bp+var_6]
    add     ax, word ptr [word_42A18]
    push    ax
    call    far ptr sprite_1_unk2
    add     sp, 0xa
LAB_3a4b_04a3:
    pop     si
    mov     sp, bp
    pop     bp
    retf
read_line_helper2_asm_ endp

seg032 ends
end

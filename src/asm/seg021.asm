; Generated by restunts-export.py (Ghidra)
.8086
.model medium

include custom.inc
include structs.inc
include seg000.inc
include seg001.inc
include seg002.inc
include seg003.inc
include seg004.inc
include seg005.inc
include seg006.inc
include seg007.inc
include seg008.inc
include seg009.inc
include seg010.inc
include seg011.inc
include seg012.inc
include seg013.inc
include seg014.inc
include seg015.inc
include seg016.inc
include seg017.inc
include seg018.inc
include seg019.inc
include seg020.inc
include seg022.inc
include seg023.inc
include seg024.inc
include seg025.inc
include seg026.inc
include seg027.inc
include seg028.inc
include seg029.inc
include seg030.inc
include seg031.inc
include seg032.inc
include seg033.inc
include seg034.inc
include seg035.inc
include seg036.inc
include seg037.inc
include seg038.inc
include seg039.inc
include dseg.inc
include dsegu.inc

seg021 segment byte public use16 'STUNTSC'
    assume cs:seg021, es:nothing, ss:nothing, ds:dseg

    public heapsort_by_order

; void __cdecl16far heapsort_by_order(int n, int * heap, int * data)
heapsort_by_order proc far
    var_index  = word ptr   -8
    var_counter = word ptr   -6
    var_halfindex = word ptr   -4
    var_value  = word ptr   -2
    n          = word ptr    6
    heap       = word ptr    8
    data       = word ptr   10

    push    bp
    mov     bp, sp
    sub     sp, 0x8
    push    di
    push    si
    mov     ax, word ptr [bp+n]
    cwd
    sub     ax, dx
    sar     ax, 0x1
    jmp     LAB_36be_008b
LAB_36be_001a:
    mov     si, word ptr [bp+var_index]
    shl     si, 0x1
    mov     bx, word ptr [bp+heap]
    mov     ax, word ptr [bx+si]
    mov     word ptr [bp+var_value], ax
    mov     di, word ptr [bp+var_index]
    add     di, word ptr [bp+var_halfindex]
    shl     di, 0x1
    mov     ax, word ptr [bx+di]
    mov     word ptr [bx+si], ax
    mov     ax, word ptr [bp+var_value]
    mov     word ptr [bx+di], ax
    mov     bx, word ptr [bp+data]
    mov     ax, word ptr [bx+si]
    mov     word ptr [bp+var_value], ax
    mov     ax, word ptr [bx+di]
    mov     word ptr [bx+si], ax
    mov     ax, word ptr [bp+var_value]
    mov     word ptr [bx+di], ax
    mov     ax, word ptr [bp+var_halfindex]
    sub     word ptr [bp+var_index], ax
LAB_36be_004f:
    cmp     word ptr [bp+var_index], 0x0
    jl      LAB_36be_006b
    mov     bx, word ptr [bp+var_index]
    shl     bx, 0x1
    mov     si, word ptr [bp+heap]
    mov     ax, word ptr [bx+si]
    mov     bx, word ptr [bp+var_index]
    add     bx, word ptr [bp+var_halfindex]
    shl     bx, 0x1
    cmp     word ptr [bx+si], ax
    jg      LAB_36be_001a
LAB_36be_006b:
    inc     word ptr [bp+var_counter]
LAB_36be_006e:
    mov     ax, word ptr [bp+n]
    cmp     word ptr [bp+var_counter], ax
    jge     LAB_36be_0082
    mov     ax, word ptr [bp+var_counter]
    sub     ax, word ptr [bp+var_halfindex]
    mov     word ptr [bp+var_index], ax
    jmp     LAB_36be_004f
    db 0x90
LAB_36be_0082:
    mov     cx, 0x2
    mov     ax, word ptr [bp+var_halfindex]
    cwd
    idiv    cx
LAB_36be_008b:
    mov     word ptr [bp+var_halfindex], ax
    or      ax, ax
    jle     LAB_36be_0098
    mov     word ptr [bp+var_counter], ax
    jmp     LAB_36be_006e
    db 0x90
LAB_36be_0098:
    pop     si
    pop     di
    mov     sp, bp
    pop     bp
    retf
heapsort_by_order endp

seg021 ends
end

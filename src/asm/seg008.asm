; Generated by restunts-export.py (Ghidra)
.8086
.model medium

include seg008.inc

seg008 segment byte public use16 'STUNTSC'
    assume cs:seg008, es:nothing, ss:nothing, ds:dseg

; int __cdecl16far sub_27400(word param_1, int param_2, word param_3, int param_4)
sub_27400_asm_ proc far
    var_40     = byte ptr  -64
    var_22     = byte ptr  -34
    var_4      = word ptr   -4
    var_2      = word ptr   -2
    param_1    = word ptr    6
    param_2    = word ptr    8
    param_3    = word ptr   10
    param_4    = word ptr   12

    push    bp
    mov     bp, sp
    sub     sp, 0x40
    push    di
    push    si
    mov     ax, word ptr [video_flag1_is1]
    imul    word ptr [video_flag4_is1]
    cwd
    push    dx
    push    ax
    mov     ax, word ptr [bp+param_4]
    sub     ax, word ptr [bp+param_3]
    cwd
    push    dx
    push    ax
    mov     ax, word ptr [bp+param_2]
    sub     ax, word ptr [bp+param_1]
    cwd
    push    dx
    push    ax
    call    far ptr __aFlmul
    push    dx
    push    ax
    call    far ptr __aFldiv
    add     ax, 0x12
    adc     dx, 0x0
    mov     word ptr [bp+var_4], ax
    mov     word ptr [bp+var_2], dx
    call    far ptr mmgr_get_res_ofs_diff_scaled
    cmp     dx, word ptr [bp+var_2]
    jg      LAB_274b_0056
    jl      LAB_274b_004d
    cmp     ax, word ptr [bp+var_4]
    ja      LAB_274b_0056
LAB_274b_004d:
    sub     ax, ax
    pop     si
    pop     di
    mov     sp, bp
    pop     bp
    retf
    db 0x90
LAB_274b_0056:
    push    cs
    call    near ptr mouse_draw_opaque_check
    mov     ax, 0xf
    push    ax
    mov     ax, word ptr [bp+param_4]
    sub     ax, word ptr [bp+param_3]
    push    ax
    mov     ax, word ptr [bp+param_2]
    sub     ax, word ptr [bp+param_1]
    push    ax
    call    far ptr sprite_make_wnd
    add     sp, 0x6
    mov     bl, byte ptr [byte_3B8FC]
    sub     bh, bh
    shl     bx, 0x1
    shl     bx, 0x1
    mov     word ptr [bx+sprite_ptrs], ax
    mov     word ptr [bx+sprite_ptrs+2], dx
    mov     al, byte ptr [byte_3B8FC]
    sub     ah, ah
    mov     si, ax
    shl     si, 0x1
    mov     ax, word ptr [bp+param_1]
    mov     word ptr [si+word_4646A], ax
    mov     ax, word ptr [bp+param_3]
    mov     word ptr [si+word_46486], ax
    lea     ax, [bp+var_40]
    push    ax
    call    far ptr sprite_copy_both_to_arg
    add     sp, 0x2
    mov     al, 0x3c
    mul     byte ptr [byte_3B8FC]
    mov     bx, ax
    les     di, [trackdata12]
    push    si
    lea     di, [bx+di]
    lea     si, [bp+var_40]
    mov     cx, 0xf
    rep movsw
    pop     si
    mov     al, byte ptr [byte_3B8FC]
    sub     ah, ah
    shl     ax, 0x1
    mov     cx, 0x1e
    mul     cx
    mov     di, ax
    les     bx, [trackdata12]
    push    si
    lea     di, [bx+di+0x1e]
    lea     si, [bp+var_22]
    mov     cx, 0xf
    rep movsw
    pop     si
    call    far ptr sprite_copy_2_to_1
    push    word ptr [bp+param_3]
    push    word ptr [bp+param_1]
    mov     bl, byte ptr [byte_3B8FC]
    sub     bh, bh
    shl     bx, 0x1
    shl     bx, 0x1
    les     bx, [bx+sprite_ptrs]
    push    word ptr es:[bx+0x2]
    push    word ptr es:[bx]
    call    far ptr sprite_clear_shape_alt
    add     sp, 0x8
    inc     byte ptr [byte_3B8FC]
    mov     ax, 0x1
    pop     si
    pop     di
    mov     sp, bp
    pop     bp
    retf
sub_27400_asm_ endp
    db 0x90

; void __cdecl16far sub_275C6(void)
sub_275C6_asm_ proc far
    var_3C     = byte ptr  -60
    var_1E     = byte ptr  -30

    push    bp
    mov     bp, sp
    sub     sp, 0x3c
    push    di
    push    si
    cmp     byte ptr [byte_3B8FC], 0x0
    jnz     LAB_274b_0128
    jmp     near ptr LAB_274b_01d0
LAB_274b_0128:
    dec     byte ptr [byte_3B8FC]
    push    cs
    call    near ptr mouse_draw_opaque_check
    mov     al, byte ptr [byte_3B8FC]
    sub     ah, ah
    mov     si, ax
    mov     di, si
    shl     di, 0x1
    push    word ptr [di+word_46486]
    push    word ptr [di+word_4646A]
    mov     bx, si
    shl     bx, 0x1
    shl     bx, 0x1
    les     bx, [bx+sprite_ptrs]
    push    word ptr es:[bx+0x2]
    push    word ptr es:[bx]
    call    far ptr sprite_shape_to_1
    add     sp, 0x8
    mov     al, 0x3c
    mul     byte ptr [byte_3B8FC]
    add     ax, word ptr [trackdata12]
    mov     dx, word ptr [trackdata12+2]
    push    si
    push    di
    lea     di, [bp+var_3C]
    mov     si, ax
    push    ss
    pop     es
    push    ds
    mov     ds, dx
    mov     cx, 0xf
    rep movsw
    pop     ds
    pop     di
    pop     si
    mov     al, byte ptr [byte_3B8FC]
    sub     ah, ah
    shl     ax, 0x1
    mov     cx, 0x1e
    mul     cx
    add     ax, word ptr [trackdata12]
    mov     dx, word ptr [trackdata12+2]
    add     ax, cx
    push    si
    push    di
    lea     di, [bp+var_1E]
    mov     si, ax
    push    ds
    mov     ds, dx
    mov     cx, 0xf
    rep movsw
    pop     ds
    pop     di
    pop     si
    lea     ax, [bp+var_3C]
    push    ax
    call    far ptr sprite_copy_arg_to_both
    add     sp, 0x2
    mov     bl, byte ptr [byte_3B8FC]
    sub     bh, bh
    shl     bx, 0x1
    shl     bx, 0x1
    push    word ptr [bx+sprite_ptrs+2]
    push    word ptr [bx+sprite_ptrs]
    call    far ptr sprite_free_wnd
    add     sp, 0x4
    push    cs
    call    near ptr mouse_draw_transparent_check
LAB_274b_01d0:
    pop     si
    pop     di
    mov     sp, bp
    pop     bp
    retf
sub_275C6_asm_ endp

; uint __cdecl16far show_dialog(int unk1, int unk2, void * textres, uint x_, uint y_, uint colour, void * unk5, int unk6)
show_dialog_asm_ proc far
    var_1D8    = byte ptr  -472
    var_1D6    = word ptr  -470
    var_1D4    = byte ptr  -468
    var_1D2    = word ptr  -466
    var_1D0    = dword ptr -464
    var_1CC    = word ptr  -460
    var_1CA    = byte ptr  -458
    var_1C8    = word ptr  -456
    var_1C6    = word ptr  -454
    var_1C4    = byte ptr  -452
    var_1C2    = word ptr  -450
    var_1C0    = byte ptr  -448
    var_1BE    = byte ptr  -446
    var_196    = word ptr  -406
    var_194    = word ptr  -404
    var_192    = byte ptr  -402
    var_142    = word ptr  -322
    var_140    = byte ptr  -320
    var_13E    = dword ptr -318
    var_13A    = dword ptr -314
    var_EE     = byte ptr  -238
    var_C6     = byte ptr  -198
    var_9E     = byte ptr  -158
    var_9C     = word ptr  -156
    var_9A     = word ptr  -154
    var_98     = byte ptr  -152
    var_84     = byte ptr  -132
    var_82     = word ptr  -130
    var_80     = byte ptr  -128
    var_30     = word ptr  -48
    var_2E     = word ptr  -46
    var_2C     = word ptr  -44
    var_2A     = word ptr  -42
    var_28     = word ptr  -40
    var_26     = word ptr  -38
    var_24     = word ptr  -36
    unk1       = word ptr    6
    unk2       = word ptr    8
    textres    = dword ptr  10
    x_         = word ptr   14
    y_         = word ptr   16
    colour     = word ptr   18
    unk5       = word ptr   20
    unk6       = word ptr   22

    push    bp
    mov     bp, sp
    sub     sp, 0x1d8
    push    di
    push    si
    mov     ax, word ptr [fontdef_unk_0E]
    add     ax, 0x2
    mov     word ptr [bp+var_1D6], ax
    mov     word ptr [bp+var_1C6], 0x0
    mov     word ptr [bp+var_194], 0x20
    push    cs
    call    near ptr mouse_draw_opaque_check
    mov     ax, word ptr [bp+textres]
    mov     dx, word ptr [bp+textres+2]
    mov     word ptr [bp+var_1D0], ax
    mov     word ptr [bp+var_1D0+2], dx
    mov     word ptr [bp+var_82], 0x0
    jmp     near ptr LAB_274b_02aa
LAB_274b_0210:
    cmp     byte ptr [bp+var_1D8], 0x5d
    jnz     LAB_274b_0252
    mov     si, word ptr [bp+var_82]
    mov     byte ptr [bp+si-0x80], 0x0
    lea     ax, [bp+var_80]
    push    ax
    call    far ptr font_op2
    add     sp, 0x2
    mov     word ptr [bp+var_1C2], ax
    mov     ax, word ptr [bp+var_194]
    cmp     word ptr [bp+var_1C2], ax
    jle     LAB_274b_0241
    mov     ax, word ptr [bp+var_1C2]
    mov     word ptr [bp+var_194], ax
LAB_274b_0241:
    mov     word ptr [bp+var_82], 0x0
    mov     ax, word ptr [bp+var_1D6]
    add     word ptr [bp+var_1C6], ax
    jmp     LAB_274b_02a6
    db 0x90
LAB_274b_0252:
    les     bx, [bp+var_1D0]
    cmp     byte ptr es:[bx], 0x7d
    jnz     LAB_274b_0294
    mov     si, word ptr [bp+var_82]
    mov     byte ptr [bp+si-0x80], 0x0
    lea     ax, [bp+var_80]
    push    ax
    call    far ptr font_op2
    add     sp, 0x2
    mov     word ptr [bp+var_1C2], ax
    mov     ax, word ptr [bp+var_194]
    cmp     word ptr [bp+var_1C2], ax
    jle     LAB_274b_0286
    mov     ax, word ptr [bp+var_1C2]
    mov     word ptr [bp+var_194], ax
LAB_274b_0286:
    mov     word ptr [bp+var_82], 0x0
    add     word ptr [bp+var_1C6], 0x4
    jmp     LAB_274b_02a6
    db 0x90
LAB_274b_0294:
    les     bx, [bp+var_1D0]
    mov     al, byte ptr es:[bx]
    mov     si, word ptr [bp+var_82]
    inc     word ptr [bp+var_82]
    mov     byte ptr [bp+si-0x80], al
LAB_274b_02a6:
    inc     word ptr [bp+var_1D0]
LAB_274b_02aa:
    les     bx, [bp+var_1D0]
    mov     al, byte ptr es:[bx]
    mov     byte ptr [bp+var_1D8], al
    or      al, al
    jz      LAB_274b_02bc
    jmp     near ptr LAB_274b_0210
LAB_274b_02bc:
    mov     ax, word ptr [bp+var_194]
    add     ax, 0x18
    and     al, 0xf8
    mov     word ptr [bp+var_194], ax
    cmp     word ptr [bp+x_], -0x1
    jnz     LAB_274b_02e0
    mov     ax, 0x140
    sub     ax, word ptr [bp+var_194]
    cwd
    sub     ax, dx
    sar     ax, 0x1
    and     al, 0xf8
    mov     word ptr [bp+x_], ax
LAB_274b_02e0:
    cmp     word ptr [bp+y_], -0x1
    jnz     LAB_274b_02f5
    mov     ax, 0xc8
    sub     ax, word ptr [bp+var_1C6]
    cwd
    sub     ax, dx
    sar     ax, 0x1
    mov     word ptr [bp+y_], ax
LAB_274b_02f5:
    mov     ax, word ptr [bp+x_]
    mov     word ptr [bp+var_30], ax
    add     ax, word ptr [bp+var_194]
    mov     word ptr [bp+var_2E], ax
    mov     ax, word ptr [bp+y_]
    sub     ax, 0x8
    mov     word ptr [bp+var_2C], ax
    mov     ax, word ptr [bp+y_]
    add     ax, word ptr [bp+var_1C6]
    add     ax, 0x8
    mov     word ptr [bp+var_2A], ax
    add     word ptr [bp+x_], 0x8
    sub     word ptr [bp+var_194], 0x10
    cmp     word ptr [bp+unk2], 0x0
    jz      LAB_274b_0346
    push    ax
    push    word ptr [bp+var_2C]
    push    word ptr [bp+var_2E]
    push    word ptr [bp+var_30]
    push    cs
    call    near ptr sub_27400
    add     sp, 0x8
    or      al, al
    jnz     LAB_274b_0346
    mov     ax, 0xffff
    pop     si
    pop     di
    mov     sp, bp
    pop     bp
    retf
    db 0x90
LAB_274b_0346:
    call    far ptr sprite_copy_2_to_1
    push    word ptr [bp+var_2A]
    push    word ptr [bp+var_2C]
    push    word ptr [bp+var_2E]
    push    word ptr [bp+var_30]
    call    far ptr sprite_set_1_size
    add     sp, 0x8
    sub     ax, ax
    push    ax
    call    far ptr sprite_clear_1_color
    add     sp, 0x2
    push    word ptr [bp+colour]
    mov     ax, word ptr [bp+y_]
    add     ax, word ptr [bp+var_1C6]
    add     ax, 0x4
    push    ax
    mov     ax, word ptr [bp+x_]
    add     ax, word ptr [bp+var_194]
    add     ax, 0x4
    push    ax
    mov     ax, word ptr [bp+y_]
    sub     ax, 0x4
    push    ax
    mov     ax, word ptr [bp+x_]
    sub     ax, 0x4
    push    ax
    call    far ptr sprite_1_unk4
    add     sp, 0xa
    sub     ax, ax
    push    ax
    push    word ptr [dialog_fnt_colour]
    call    far ptr font_set_colour
    add     sp, 0x4
    mov     word ptr [word_3EB90], 0x0
    sub     ax, ax
    push    ax
    push    word ptr [dialog_fnt_colour]
    call    far ptr font_set_colour
    add     sp, 0x4
    mov     word ptr [bp+var_82], 0x0
    mov     byte ptr [bp+var_9E], 0x0
    mov     ax, word ptr [bp+textres]
    mov     dx, word ptr [bp+textres+2]
    mov     word ptr [bp+var_1D0], ax
    mov     word ptr [bp+var_1D0+2], dx
    mov     word ptr [bp+var_1C6], 0x1
    jmp     near ptr LAB_274b_04de
    db 0x90
LAB_274b_03e0:
    cmp     byte ptr [bp+var_1D8], 0x5b
    jnz     LAB_274b_03ea
    jmp     near ptr LAB_274b_04f0
LAB_274b_03ea:
    cmp     byte ptr [bp+var_1D8], 0x5d
    jnz     LAB_274b_0432
    mov     si, word ptr [bp+var_82]
    mov     byte ptr [bp+si-0x80], 0x0
    mov     ax, word ptr [bp+y_]
    add     ax, word ptr [bp+var_1C6]
    push    ax
    push    word ptr [bp+x_]
    lea     ax, [bp+var_80]
    push    ax
    call    far ptr sub_345BC
    add     sp, 0x6
    mov     word ptr [bp+var_82], 0x0
    mov     ax, word ptr [bp+var_1D6]
    add     word ptr [bp+var_1C6], ax
LAB_274b_041e:
    mov     ax, word ptr [bp+var_1D0]
    mov     dx, word ptr [bp+var_1D0+2]
    mov     word ptr [bp+var_9C], ax
    mov     word ptr [bp+var_9A], dx
    jmp     near ptr LAB_274b_04da
    db 0x90
LAB_274b_0432:
    les     bx, [bp+var_1D0]
    cmp     byte ptr es:[bx], 0x7d
    jnz     LAB_274b_0468
    mov     si, word ptr [bp+var_82]
    mov     byte ptr [bp+si-0x80], 0x0
    mov     ax, word ptr [bp+y_]
    add     ax, word ptr [bp+var_1C6]
    push    ax
    push    word ptr [bp+x_]
    lea     ax, [bp+var_80]
    push    ax
    call    far ptr sub_345BC
    add     sp, 0x6
    mov     word ptr [bp+var_82], 0x0
    add     word ptr [bp+var_1C6], 0x4
    jmp     LAB_274b_041e
LAB_274b_0468:
    les     bx, [bp+var_1D0]
    cmp     byte ptr es:[bx], 0x40
    jnz     LAB_274b_04c8
    cmp     word ptr [bp+unk1], 0x3
    jnz     LAB_274b_04ba
    mov     si, word ptr [bp+var_82]
    mov     byte ptr [bp+si-0x80], 0x0
    lea     ax, [bp+var_80]
    push    ax
    call    far ptr font_op2
    add     sp, 0x2
    add     ax, word ptr [bp+x_]
    mov     cx, ax
    mov     al, byte ptr [bp+var_9E]
    cbw
    mov     bx, ax
    shl     bx, 0x1
    mov     si, word ptr [bp+unk5]
    mov     word ptr [bx+si], cx
    mov     al, byte ptr [bp+var_9E]
    cbw
    mov     si, ax
    shl     si, 0x1
    mov     bx, word ptr [bp+unk5]
    mov     ax, word ptr [bp+y_]
    add     ax, word ptr [bp+var_1C6]
    mov     word ptr [bx+si+0x2], ax
    add     byte ptr [bp+var_9E], 0x2
LAB_274b_04ba:
    mov     si, word ptr [bp+var_82]
    inc     word ptr [bp+var_82]
    mov     byte ptr [bp+si-0x80], 0x20
    jmp     LAB_274b_04da
LAB_274b_04c8:
    les     bx, [bp+var_1D0]
    mov     al, byte ptr es:[bx]
    mov     si, word ptr [bp+var_82]
    inc     word ptr [bp+var_82]
    mov     byte ptr [bp+si-0x80], al
LAB_274b_04da:
    inc     word ptr [bp+var_1D0]
LAB_274b_04de:
    les     bx, [bp+var_1D0]
    mov     al, byte ptr es:[bx]
    mov     byte ptr [bp+var_1D8], al
    or      al, al
    jz      LAB_274b_04f0
    jmp     near ptr LAB_274b_03e0
LAB_274b_04f0:
    mov     byte ptr [bp+var_140], 0x0
    jmp     near ptr LAB_274b_0658
LAB_274b_04f8:
    inc     word ptr [bp+var_1D0]
    mov     al, byte ptr [bp+var_140]
    cbw
    mov     si, ax
    mov     bx, si
    shl     bx, 0x1
    shl     bx, 0x1
    add     bx, bp
    mov     ax, word ptr [bp+var_1D0]
    mov     dx, word ptr [bp+var_1D0+2]
    mov     word ptr [bx+0xfec2], ax
    mov     word ptr [bx+0xfec4], dx
    mov     bx, word ptr [bp+var_82]
    add     bx, bp
    mov     byte ptr [bx-0x80], 0x0
    lea     ax, [bp+var_80]
    push    ax
    call    far ptr font_op2
    add     sp, 0x2
    add     ax, word ptr [bp+x_]
    mov     bx, si
    shl     bx, 0x1
    add     bx, bp
    mov     word ptr [bx-0x28], ax
    mov     si, word ptr [bp+y_]
    add     si, word ptr [bp+var_1C6]
    mov     al, byte ptr [bp+var_140]
    cbw
    mov     di, ax
    shl     di, 0x1
    add     di, bp
    mov     word ptr [di+0xfe42], si
    mov     ax, word ptr [bp+var_1D6]
    add     ax, si
    mov     word ptr [di+0xff12], ax
    mov     byte ptr [bp+var_1CA], 0x0
    mov     bx, word ptr [bp+var_82]
    inc     word ptr [bp+var_82]
    add     bx, bp
    mov     byte ptr [bx-0x80], 0x20
    mov     word ptr [bp+var_1C2], 0x0
    jmp     near ptr LAB_274b_05fe
    db 0x90
LAB_274b_057a:
    cmp     byte ptr [bp+var_1D8], 0x5b
    jnz     LAB_274b_0584
    jmp     near ptr LAB_274b_0610
LAB_274b_0584:
    cmp     byte ptr [bp+var_1D8], 0x5d
    jnz     LAB_274b_05b4
    mov     si, word ptr [bp+var_82]
    mov     byte ptr [bp+si-0x80], 0x0
    lea     ax, [bp+var_80]
    push    ax
    call    far ptr font_op2
    add     sp, 0x2
    mov     word ptr [bp+var_1C2], ax
    mov     word ptr [bp+var_82], 0x0
    mov     ax, word ptr [bp+var_1D6]
    add     word ptr [bp+var_1C6], ax
    jmp     LAB_274b_05fa
    db 0x90
LAB_274b_05b4:
    les     bx, [bp+var_1D0]
    cmp     byte ptr es:[bx], 0x7d
    jnz     LAB_274b_05e4
    mov     si, word ptr [bp+var_82]
    mov     byte ptr [bp+si-0x80], 0x0
    lea     ax, [bp+var_80]
    push    ax
    call    far ptr font_op2
    add     sp, 0x2
    mov     word ptr [bp+var_1C2], ax
    mov     word ptr [bp+var_82], 0x0
    add     word ptr [bp+var_1C6], 0x3
    jmp     LAB_274b_05fa
    db 0x90
LAB_274b_05e4:
    les     bx, [bp+var_1D0]
    mov     al, byte ptr es:[bx]
    mov     si, word ptr [bp+var_82]
    inc     word ptr [bp+var_82]
    mov     byte ptr [bp+si-0x80], al
    inc     byte ptr [bp+var_1CA]
LAB_274b_05fa:
    inc     word ptr [bp+var_1D0]
LAB_274b_05fe:
    les     bx, [bp+var_1D0]
    mov     al, byte ptr es:[bx]
    mov     byte ptr [bp+var_1D8], al
    or      al, al
    jz      LAB_274b_0610
    jmp     near ptr LAB_274b_057a
LAB_274b_0610:
    mov     al, byte ptr [bp+var_140]
    cbw
    mov     si, ax
    mov     al, byte ptr [bp+var_1CA]
    mov     byte ptr [bp+si+0xff68], al
    mov     si, word ptr [bp+var_82]
    mov     byte ptr [bp+si-0x80], 0x0
    cmp     word ptr [bp+var_1C2], 0x0
    jnz     LAB_274b_063e
    lea     ax, [bp+var_80]
    push    ax
    call    far ptr font_op2
    add     sp, 0x2
    mov     word ptr [bp+var_1C2], ax
LAB_274b_063e:
    mov     al, byte ptr [bp+var_140]
    cbw
    mov     si, ax
    shl     si, 0x1
    add     si, bp
    mov     ax, word ptr [si-0x28]
    add     ax, word ptr [bp+var_1C2]
    mov     word ptr [si+0xff3a], ax
    inc     byte ptr [bp+var_140]
LAB_274b_0658:
    les     bx, [bp+var_1D0]
    cmp     byte ptr es:[bx], 0x5b
    jnz     LAB_274b_0665
    jmp     near ptr LAB_274b_04f8
LAB_274b_0665:
    cmp     byte ptr [bp+var_140], 0x2
    jle     LAB_274b_06a6
    mov     ax, word ptr [bp+var_26]
    cmp     word ptr [bp+var_28], ax
    jnz     LAB_274b_06a6
    mov     ax, word ptr [bp+var_24]
    cmp     word ptr [bp+var_26], ax
    jnz     LAB_274b_06a6
    mov     word ptr [bp+var_196], 0x0
    jmp     LAB_274b_069b
LAB_274b_0684:
    mov     si, word ptr [bp+var_196]
    shl     si, 0x1
    add     si, bp
    mov     ax, word ptr [si-0x28]
    add     ax, word ptr [bp+var_194]
    mov     word ptr [si+0xff3a], ax
    inc     word ptr [bp+var_196]
LAB_274b_069b:
    mov     al, byte ptr [bp+var_140]
    cbw
    cmp     ax, word ptr [bp+var_196]
    jg      LAB_274b_0684
LAB_274b_06a6:
    push    cs
    call    near ptr mouse_draw_transparent_check
    mov     byte ptr [bp+var_1D4], 0x1
    mov     ax, word ptr [bp+unk1]
    or      ax, ax
    jz      LAB_274b_070c
    cmp     ax, 0x1
    jz      LAB_274b_06e8
    cmp     ax, 0x2
    jz      LAB_274b_0724
    cmp     ax, 0x3
    jz      LAB_274b_0714
    cmp     ax, 0x4
    jnz     LAB_274b_06d8
    mov     ax, 0x8
    cwd
    push    dx
    push    ax
    call    far ptr sub_2EB1E
    add     sp, 0x4
LAB_274b_06d8:
    cmp     word ptr [bp+unk2], 0x0
    jz      LAB_274b_06e2
    push    cs
    call    near ptr sub_275C6
LAB_274b_06e2:
    mov     al, byte ptr [bp+var_1D4]
    jmp     LAB_274b_071d
LAB_274b_06e8:
    push    cs
    call    near ptr timer_get_delta_alt
    push    ax
    push    cs
    call    near ptr input_checking
    add     sp, 0x2
    mov     word ptr [bp+var_142], ax
    or      ax, ax
    jz      LAB_274b_06e8
    cmp     ax, 0x1b
    jnz     LAB_274b_0706
    mov     byte ptr [bp+var_1D4], 0x0
LAB_274b_0706:
    push    cs
    call    near ptr check_input
    jmp     LAB_274b_06d8
LAB_274b_070c:
    sub     ax, ax
    pop     si
    pop     di
    mov     sp, bp
    pop     bp
    retf
LAB_274b_0714:
    mov     al, byte ptr [bp+var_9E]
    cbw
    mov     cl, 0x2
    idiv    cl
LAB_274b_071d:
    cbw
    pop     si
    pop     di
    mov     sp, bp
    pop     bp
    retf
LAB_274b_0724:
    mov     al, byte ptr [bp+unk6]
    mov     byte ptr [bp+var_1D4], al
    mov     byte ptr [bp+var_1C0], 0xff
    push    cs
    call    near ptr timer_get_delta_alt
    push    cs
    call    near ptr mouse_draw_opaque_check
    cmp     byte ptr [bp+var_140], 0x2
    jnz     LAB_274b_07b8
    mov     word ptr [bp+var_196], 0x0
LAB_274b_0745:
    mov     bx, word ptr [bp+var_196]
    les     si, [bp+var_13E]
    mov     al, byte ptr es:[bx+si]
    sub     ah, ah
    mov     word ptr [bp+var_1C8], ax
    inc     word ptr [bp+var_196]
    cmp     ax, 0x20
    jz      LAB_274b_0745
    mov     bx, ax
    test    byte ptr [bx+g_ascii_props], 0x1
    jz      LAB_274b_077c
    test    byte ptr [bx+g_ascii_props], 0x1
    jz      LAB_274b_0776
    add     ax, 0x20
    jmp     LAB_274b_0778
    db 2 dup (0x90)
LAB_274b_0776:
    mov     ax, bx
LAB_274b_0778:
    mov     word ptr [bp+var_1C8], ax
LAB_274b_077c:
    mov     word ptr [bp+var_196], 0x0
LAB_274b_0782:
    mov     bx, word ptr [bp+var_196]
    les     si, [bp+var_13A]
    mov     al, byte ptr es:[bx+si]
    sub     ah, ah
    mov     word ptr [bp+var_1CC], ax
    inc     word ptr [bp+var_196]
    cmp     ax, 0x20
    jz      LAB_274b_0782
    mov     bx, ax
    test    byte ptr [bx+g_ascii_props], 0x1
    jz      LAB_274b_07b8
    test    byte ptr [bx+g_ascii_props], 0x1
    jz      LAB_274b_07b2
    add     ax, 0x20
    jmp     LAB_274b_07b4
    db 0x90
LAB_274b_07b2:
    mov     ax, bx
LAB_274b_07b4:
    mov     word ptr [bp+var_1CC], ax
LAB_274b_07b8:
    mov     byte ptr [bp+var_84], 0x1
LAB_274b_07bd:
    cmp     byte ptr [bp+var_84], 0x0
    jnz     LAB_274b_07c7
    jmp     near ptr LAB_274b_06d8
LAB_274b_07c7:
    mov     al, byte ptr [bp+var_1C0]
    cmp     byte ptr [bp+var_1D4], al
    jnz     LAB_274b_07d4
    jmp     near ptr LAB_274b_08bd
LAB_274b_07d4:
    push    cs
    call    near ptr mouse_draw_opaque_check
    mov     word ptr [bp+var_196], 0x0
    jmp     near ptr LAB_274b_0875
    db 0x90
LAB_274b_07e2:
    mov     al, byte ptr [bp+var_1D4]
    cbw
    cmp     ax, word ptr [bp+var_196]
    jnz     LAB_274b_07f8
    push    word ptr [dialog_fnt_colour]
    push    word ptr [word_3EB90]
    jmp     LAB_274b_0800
    db 0x90
LAB_274b_07f8:
    push    word ptr [word_3EB90]
    push    word ptr [dialog_fnt_colour]
LAB_274b_0800:
    call    far ptr font_set_colour
    add     sp, 0x4
    mov     si, word ptr [bp+var_196]
    shl     si, 0x1
    shl     si, 0x1
    mov     ax, word ptr [bp+si+0xfec2]
    mov     dx, word ptr [bp+si+0xfec4]
    mov     word ptr [bp+var_1D0], ax
    mov     word ptr [bp+var_1D0+2], dx
    mov     word ptr [bp+var_82], 0x0
    jmp     LAB_274b_083d
LAB_274b_0828:
    mov     bx, word ptr [bp+var_82]
    les     si, [bp+var_1D0]
    mov     al, byte ptr es:[bx+si]
    mov     si, bx
    mov     byte ptr [bp+si+0xfe6e], al
    inc     word ptr [bp+var_82]
LAB_274b_083d:
    mov     si, word ptr [bp+var_196]
    mov     al, byte ptr [bp+si+0xff68]
    cbw
    cmp     ax, word ptr [bp+var_82]
    jg      LAB_274b_0828
    mov     di, word ptr [bp+var_82]
    mov     byte ptr [bp+di+0xfe6e], 0x0
    mov     si, word ptr [bp+var_196]
    shl     si, 0x1
    add     si, bp
    push    word ptr [si+0xfe42]
    push    word ptr [si-0x28]
    lea     ax, [bp+var_192]
    push    ax
    call    far ptr sub_345BC
    add     sp, 0x6
    inc     word ptr [bp+var_196]
LAB_274b_0875:
    mov     al, byte ptr [bp+var_140]
    cbw
    cmp     ax, word ptr [bp+var_196]
    jle     LAB_274b_08a6
    cmp     word ptr [bp+unk5], 0x0
    jnz     LAB_274b_0889
    jmp     near ptr LAB_274b_07e2
LAB_274b_0889:
    mov     bx, word ptr [bp+var_196]
    shl     bx, 0x1
    mov     si, word ptr [bp+unk5]
    cmp     word ptr [bx+si], 0x0
    jnz     LAB_274b_089a
    jmp     near ptr LAB_274b_07e2
LAB_274b_089a:
    push    word ptr [word_3EB90]
    push    word ptr [performGraphColor]
    jmp     near ptr LAB_274b_0800
    db 0x90
LAB_274b_08a6:
    push    cs
    call    near ptr mouse_draw_transparent_check
    cmp     byte ptr [bp+var_1C0], 0xff
    jnz     LAB_274b_08b5
    push    cs
    call    near ptr check_input
LAB_274b_08b5:
    mov     al, byte ptr [bp+var_1D4]
    mov     byte ptr [bp+var_1C0], al
LAB_274b_08bd:
    push    cs
    call    near ptr timer_get_delta_alt
    push    ax
    push    cs
    call    near ptr input_checking
    add     sp, 0x2
    mov     word ptr [bp+var_142], ax
    lea     ax, [bp+var_EE]
    push    ax
    lea     ax, [bp+var_1BE]
    push    ax
    lea     ax, [bp+var_C6]
    push    ax
    lea     ax, [bp+var_28]
    push    ax
    mov     al, byte ptr [bp+var_140]
    cbw
    push    ax
    push    cs
    call    near ptr mouse_multi_hittest
    add     sp, 0xa
    mov     byte ptr [bp+var_1C4], al
    cmp     al, 0xff
    jz      LAB_274b_090c
    cmp     word ptr [bp+unk5], 0x0
    jz      LAB_274b_0908
    cbw
    mov     bx, ax
    shl     bx, 0x1
    mov     si, word ptr [bp+unk5]
    cmp     word ptr [bx+si], 0x0
    jnz     LAB_274b_090c
LAB_274b_0908:
    mov     byte ptr [bp+var_1D4], al
LAB_274b_090c:
    cmp     byte ptr [bp+var_140], 0x2
    jnz     LAB_274b_0965
    cmp     word ptr [bp+var_142], 0x0
    jz      LAB_274b_0965
    mov     ax, word ptr [bp+var_142]
    mov     word ptr [bp+var_1D2], ax
    mov     bx, ax
    test    byte ptr [bx+g_ascii_props], 0x1
    jz      LAB_274b_093e
    test    byte ptr [bx+g_ascii_props], 0x1
    jz      LAB_274b_0938
    add     ax, 0x20
    jmp     LAB_274b_093a
    db 0x90
LAB_274b_0938:
    mov     ax, bx
LAB_274b_093a:
    mov     word ptr [bp+var_1D2], ax
LAB_274b_093e:
    mov     ax, word ptr [bp+var_1D2]
    cmp     word ptr [bp+var_1C8], ax
    jnz     LAB_274b_0950
    mov     byte ptr [bp+var_1D4], 0x0
    jmp     LAB_274b_095f
    db 0x90
LAB_274b_0950:
    mov     ax, word ptr [bp+var_1D2]
    cmp     word ptr [bp+var_1CC], ax
    jnz     LAB_274b_0965
    mov     byte ptr [bp+var_1D4], 0x1
LAB_274b_095f:
    mov     word ptr [bp+var_142], 0xd
LAB_274b_0965:
    mov     ax, word ptr [bp+var_142]
    cmp     ax, 0x20
    jnz     LAB_274b_0971
    jmp     near ptr LAB_274b_09f9
LAB_274b_0971:
    jbe     LAB_274b_0976
    jmp     near ptr LAB_274b_0a06
LAB_274b_0976:
    cmp     ax, 0xd
    jz      LAB_274b_09f9
    cmp     ax, 0x1b
    jz      LAB_274b_09f4
    jmp     near ptr LAB_274b_07bd
    db 0x90
LAB_274b_0984:
    cmp     byte ptr [bp+var_1D4], 0x0
    jz      LAB_274b_0992
    dec     byte ptr [bp+var_1D4]
    jmp     LAB_274b_099c
    db 0x90
LAB_274b_0992:
    mov     al, byte ptr [bp+var_140]
    dec     al
    mov     byte ptr [bp+var_1D4], al
LAB_274b_099c:
    cmp     word ptr [bp+unk5], 0x0
    jnz     LAB_274b_09a5
    jmp     near ptr LAB_274b_07bd
LAB_274b_09a5:
    mov     al, byte ptr [bp+var_1D4]
    cbw
    mov     bx, ax
    shl     bx, 0x1
    mov     si, word ptr [bp+unk5]
    cmp     word ptr [bx+si], 0x0
    jnz     LAB_274b_0984
    jmp     near ptr LAB_274b_07bd
    db 0x90
LAB_274b_09ba:
    mov     al, byte ptr [bp+var_1D4]
    cbw
    inc     ax
    mov     cx, ax
    mov     al, byte ptr [bp+var_140]
    cbw
    cmp     cx, ax
    jge     LAB_274b_09d2
    inc     byte ptr [bp+var_1D4]
    jmp     LAB_274b_09d7
    db 0x90
LAB_274b_09d2:
    mov     byte ptr [bp+var_1D4], 0x0
LAB_274b_09d7:
    cmp     word ptr [bp+unk5], 0x0
    jnz     LAB_274b_09e0
    jmp     near ptr LAB_274b_07bd
LAB_274b_09e0:
    mov     al, byte ptr [bp+var_1D4]
    cbw
    mov     bx, ax
    shl     bx, 0x1
    mov     si, word ptr [bp+unk5]
    cmp     word ptr [bx+si], 0x0
    jnz     LAB_274b_09ba
    jmp     near ptr LAB_274b_07bd
LAB_274b_09f4:
    mov     byte ptr [bp+var_1D4], 0xff
LAB_274b_09f9:
    mov     byte ptr [bp+var_84], 0x0
    push    cs
    call    near ptr check_input
    jmp     near ptr LAB_274b_07bd
    db 0x90
LAB_274b_0a06:
    cmp     ax, 0x4800
    jnz     LAB_274b_0a0e
    jmp     near ptr LAB_274b_0984
LAB_274b_0a0e:
    cmp     ax, 0x4b00
    jnz     LAB_274b_0a16
    jmp     near ptr LAB_274b_0984
LAB_274b_0a16:
    cmp     ax, 0x4d00
    jz      LAB_274b_09ba
    cmp     ax, 0x5000
    jz      LAB_274b_09ba
    jmp     near ptr LAB_274b_07bd
show_dialog_asm_ endp
    db 0x90

; int __cdecl16far do_fileselect_dialog(size_t * param_1, char * param_2, char * param_3, undefined2 param_4, undefined2 param_5)
do_fileselect_dialog_asm_ proc far
    var_71C    = word ptr  -1820
    var_71A    = word ptr  -1818
    var_718    = byte ptr  -1816
    var_716    = byte ptr  -1814
    var_714    = byte ptr  -1812
    var_712    = word ptr  -1810
    var_710    = word ptr  -1808
    var_70E    = word ptr  -1806
    var_70C    = word ptr  -1804
    var_70A    = word ptr  -1802
    var_708    = word ptr  -1800
    var_6EA    = byte ptr  -1770
    var_6E8    = dword ptr -1768
    var_6E4    = byte ptr  -1764
    var_6E2    = byte ptr  -1762
    var_6E0    = word ptr  -1760
    local_6e0  = word ptr  -1758
    var_6D0    = word ptr  -1744
    var_6CC    = word ptr  -1740
    var_6CA    = word ptr  -1738
    var_6C8    = byte ptr  -1736
    var_6B4    = byte ptr  -1716
    var_6A0    = byte ptr  -1696
    var_69C    = byte ptr  -1692
    var_69A    = byte ptr  -1690
    var_698    = word ptr  -1688
    var_18     = byte ptr  -24
    var_16     = byte ptr  -22
    var_2      = byte ptr   -2
    param_1    = word ptr    6
    param_2    = word ptr    8
    param_3    = word ptr   10
    param_4    = word ptr   12
    param_5    = word ptr   14

    push    bp
    mov     bp, sp
    sub     sp, 0x71c
    push    di
    push    si
    sub     ax, ax
    push    ax
    lea     ax, [bp+var_712]
    push    ax
    push    word ptr [dialogarg2]
    mov     ax, 0xffff
    push    ax
    push    ax
    mov     ax, offset aLoa
    push    ax
    push    word ptr [mainresptr+2]
    push    word ptr [mainresptr]
    push    cs
    call    near ptr locate_text_res
    add     sp, 0x6
    push    dx
    push    ax
    mov     ax, 0x1
    push    ax
    mov     ax, 0x3
    push    ax
    push    cs
    call    near ptr show_dialog
    add     sp, 0x12
    or      ax, ax
    jge     LAB_274b_0a6e
    sub     ax, ax
    pop     si
    pop     di
    mov     sp, bp
    pop     bp
    retf
LAB_274b_0a6e:
    mov     al, byte ptr [g_is_busy]
    mov     byte ptr [bp+var_18], al
    mov     byte ptr [g_is_busy], 0x1
    mov     ax, word ptr [bp+var_708]
    add     ax, 0x4
    mov     word ptr [bp+var_71C], ax
    push    word ptr [dialogarg2]
    push    ax
    mov     ax, word ptr [bp+var_70A]
    add     ax, 0xab
    push    ax
    push    word ptr [bp+var_71C]
    mov     ax, word ptr [bp+var_70A]
    sub     ax, 0x4
    push    ax
    call    far ptr preRender_line
    add     sp, 0xa
    push    word ptr [word_3EB90]
    push    word ptr [dialog_fnt_colour]
    call    far ptr font_set_colour
    add     sp, 0x4
    push    word ptr [bp+param_5]
    push    word ptr [bp+param_4]
    mov     ax, offset g_res_id
    push    ax
    push    cs
    call    near ptr copy_string
    add     sp, 0x6
    push    word ptr [bp+var_710]
    push    word ptr [bp+var_712]
    mov     ax, offset g_res_id
    push    ax
    call    far ptr sub_345BC
    add     sp, 0x6
    mov     di, word ptr [bp+var_70E]
    lea     ax, [di+0xa2]
    mov     word ptr [bp+var_6E8+2], ax
    mov     byte ptr [bp+var_6EA], 0x0
    jmp     LAB_274b_0b2d
    db 0x90
LAB_274b_0aee:
    mov     al, byte ptr [bp+var_6EA]
    cbw
    mov     word ptr [bp+var_71C], ax
    mov     bx, ax
    shl     bx, 0x1
    shl     bx, 0x1
    add     bx, bp
    mov     ax, word ptr [bx+0xf8f4]
    mov     bx, word ptr [bp+var_71C]
    shl     bx, 0x1
    add     bx, bp
LAB_274b_0b0b:
    mov     word ptr [bx+0xf91e], ax
    mov     al, byte ptr [bp+var_6EA]
    cbw
    shl     ax, 0x1
    add     ax, bp
    mov     word ptr [bp+var_71C], ax
    mov     bx, ax
    mov     ax, word ptr [bx+0xf91e]
    add     ax, 0xa
    mov     word ptr [bx+0xf938], ax
    inc     byte ptr [bp+var_6EA]
LAB_274b_0b2d:
    cmp     byte ptr [bp+var_6EA], 0xa
    jge     LAB_274b_0b66
    mov     al, byte ptr [bp+var_6EA]
    cbw
    shl     ax, 0x1
    add     ax, bp
    mov     word ptr [bp+var_71C], ax
    mov     bx, ax
    mov     word ptr [bx-0x16], di
    mov     bx, word ptr [bp+var_71C]
    mov     ax, word ptr [bp+var_6E8+2]
    mov     word ptr [bx+0xf94c], ax
    cmp     byte ptr [bp+var_6EA], 0x9
    jnz     LAB_274b_0aee
    mov     bx, word ptr [bp+var_71C]
    mov     ax, word ptr [bx+0xf91c]
    add     ax, 0xa
    jmp     LAB_274b_0b0b
LAB_274b_0b66:
    push    word ptr [word_3EB90]
    push    word ptr [dialog_fnt_colour]
    call    far ptr font_set_colour
    add     sp, 0x4
    push    word ptr [bp+var_70C]
    push    di
    push    word ptr [bp+param_1]
    call    far ptr sub_345BC
    add     sp, 0x6
LAB_274b_0b86:
    push    cs
    call    near ptr mouse_draw_transparent_check
    mov     byte ptr [bp+var_714], 0x0
    push    word ptr [bp+param_3]              ; int
    mov     ax, offset aWildcard
    push    ax
    push    word ptr [bp+param_1]              ; char *
    call    far ptr file_combine_and_find
    add     sp, 0x6
    mov     word ptr [bp+var_6E8], ax
    or      ax, ax
    jnz     LAB_274b_0be4
    call    far ptr nullsub_1
LAB_274b_0bae:
    push    word ptr [word_3EB90]
    push    word ptr [dialog_fnt_colour]
    call    far ptr font_set_colour
    add     sp, 0x4
    mov     ax, offset (terraincenterpos+17*2)
    cwd
    push    dx                                 ; int
    push    ax                                 ; int
    push    word ptr [bp+var_70C]              ; int
    push    di                                 ; int
    mov     ax, 0x12
    push    ax
    push    word ptr [bp+param_1]              ; char *
    push    cs
    call    near ptr call_read_line
    add     sp, 0xc
    cmp     ax, 0x1b
    jnz     LAB_274b_0b86
LAB_274b_0bdc:
    mov     byte ptr [bp+var_6A0], 0x0
    jmp     near ptr LAB_274b_10fc
LAB_274b_0be4:
    push    word ptr [bp+var_6E8]              ; char *
    lea     ax, [bp+var_698]
    push    ax                                 ; int
    push    cs
    call    near ptr parse_filepath_separators
    add     sp, 0x4
    inc     byte ptr [bp+var_714]
LAB_274b_0bf8:
    call    far ptr file_find_next_alt
    mov     word ptr [bp+var_6E8], ax
    or      ax, ax
    jz      LAB_274b_0c32
    push    ax                                 ; char *
    mov     al, byte ptr [bp+var_714]
    cbw
    mov     cx, ax
    shl     ax, 0x1
    add     ax, cx
    shl     ax, 0x1
    shl     ax, 0x1
    add     ax, cx
    add     ax, bp
    sub     ax, 0x698
    push    ax                                 ; int
    push    cs
    call    near ptr parse_filepath_separators
    add     sp, 0x4
    inc     byte ptr [bp+var_714]
    mov     al, byte ptr [bp+var_714]
    cbw
    cmp     ax, 0x80
    jnz     LAB_274b_0bf8
LAB_274b_0c32:
    call    far ptr nullsub_1
    cmp     byte ptr [bp+var_714], 0x1
    jg      LAB_274b_0c41
    jmp     near ptr LAB_274b_0d1c
LAB_274b_0c41:
    sub     si, si
    jmp     near ptr LAB_274b_0d07
LAB_274b_0c46:
    inc     word ptr [bp+var_6CA]
LAB_274b_0c4a:
    mov     al, byte ptr [bp+var_714]
    cbw
    cmp     ax, word ptr [bp+var_6CA]
    ja      LAB_274b_0c58
    jmp     near ptr LAB_274b_0d06
LAB_274b_0c58:
    mov     ax, word ptr [bp+var_6CA]
    mov     cx, ax
    shl     ax, 0x1
    add     ax, cx
    shl     ax, 0x1
    shl     ax, 0x1
    add     ax, cx
    add     ax, bp
    sub     ax, 0x698
    push    ax
    mov     ax, si
    mov     cx, ax
    shl     ax, 0x1
    add     ax, cx
    shl     ax, 0x1
    shl     ax, 0x1
    add     ax, cx
    add     ax, bp
    sub     ax, 0x698
    push    ax                                 ; char *
    call    far ptr _strcmp
    add     sp, 0x4
    or      ax, ax
    jle     LAB_274b_0c46
    mov     ax, si
    mov     cx, ax
    shl     ax, 0x1
    add     ax, cx
    shl     ax, 0x1
    shl     ax, 0x1
    add     ax, cx
    add     ax, bp
    sub     ax, 0x698
    push    ax
    mov     ax, offset g_res_id
    push    ax                                 ; char *
    call    far ptr _strcpy
    add     sp, 0x4
    mov     ax, word ptr [bp+var_6CA]
    mov     cx, ax
    shl     ax, 0x1
    add     ax, cx
    shl     ax, 0x1
    shl     ax, 0x1
    add     ax, cx
    add     ax, bp
    sub     ax, 0x698
    push    ax
    mov     ax, si
    mov     cx, ax
    shl     ax, 0x1
    add     ax, cx
caseD_3:
    shl     ax, 0x1
    shl     ax, 0x1
    add     ax, cx
    add     ax, bp
    sub     ax, 0x698
    push    ax                                 ; char *
    call    far ptr _strcpy
    add     sp, 0x4
    mov     ax, offset g_res_id
    push    ax
    mov     ax, word ptr [bp+var_6CA]
    mov     cx, ax
    shl     ax, 0x1
    add     ax, cx
    shl     ax, 0x1
    shl     ax, 0x1
    add     ax, cx
    add     ax, bp
    sub     ax, 0x698
    push    ax                                 ; char *
    call    far ptr _strcpy
    add     sp, 0x4
    jmp     near ptr LAB_274b_0c46
    db 0x90
LAB_274b_0d06:
    inc     si
LAB_274b_0d07:
    mov     al, byte ptr [bp+var_714]
    cbw
    dec     ax
    cmp     ax, si
    jbe     LAB_274b_0d1c
    lea     ax, [si+0x1]
    mov     word ptr [bp+var_6CA], ax
    jmp     near ptr LAB_274b_0c4a
    db 0x90
LAB_274b_0d1c:
    cmp     byte ptr [bp+var_714], 0x7
    jle     LAB_274b_0d9d
    mov     ax, offset aLsu
    push    ax
    push    word ptr [mainresptr+2]
    push    word ptr [mainresptr]
    push    cs
    call    near ptr locate_text_res
    add     sp, 0x6
    push    dx
    push    ax
    mov     ax, offset g_res_id
    push    ax
    push    cs
    call    near ptr copy_string
    add     sp, 0x6
    push    word ptr [bp+var_6E0]
    mov     ax, offset g_res_id
    push    ax
    push    cs
    call    near ptr font_op2_alt
    add     sp, 0x2
    push    ax
    mov     ax, offset g_res_id
    push    ax
    call    far ptr sub_345BC
    add     sp, 0x6
    mov     ax, offset aLsd
    push    ax
    push    word ptr [mainresptr+2]
    push    word ptr [mainresptr]
    push    cs
    call    near ptr locate_text_res
    add     sp, 0x6
    push    dx
    push    ax
    mov     ax, offset g_res_id
    push    ax
    push    cs
    call    near ptr copy_string
    add     sp, 0x6
    mov     ax, word ptr [bp+var_6D0]
    dec     ax
    push    ax
    mov     ax, offset g_res_id
    push    ax
    push    cs
    call    near ptr font_op2_alt
    add     sp, 0x2
    push    ax
    mov     ax, offset g_res_id
    push    ax
    call    far ptr sub_345BC
    add     sp, 0x6
LAB_274b_0d9d:
    mov     byte ptr [bp+var_716], 0x0
    mov     byte ptr [bp+var_69A], 0x0
    mov     byte ptr [bp+var_6E4], 0xff
    mov     byte ptr [bp+var_718], 0xff
    push    cs
    call    near ptr timer_get_delta_alt
    mov     byte ptr [bp+var_2], 0x0
LAB_274b_0db9:
    mov     al, byte ptr [bp+var_6E4]
    cmp     byte ptr [bp+var_716], al
    jnz     LAB_274b_0dd0
    mov     al, byte ptr [bp+var_718]
    cmp     byte ptr [bp+var_69A], al
    jnz     LAB_274b_0dd0
    jmp     near ptr LAB_274b_0ec0
LAB_274b_0dd0:
    mov     al, byte ptr [bp+var_716]
    mov     byte ptr [bp+var_6E4], al
    mov     al, byte ptr [bp+var_69A]
    mov     byte ptr [bp+var_718], al
    push    cs
    call    near ptr mouse_draw_opaque_check
    sub     si, si
    jmp     near ptr LAB_274b_0e96
    db 0x90
LAB_274b_0dea:
    push    word ptr [word_3EB90]
    push    word ptr [dialog_fnt_colour]
LAB_274b_0df2:
    call    far ptr font_set_colour
    add     sp, 0x4
    mov     al, byte ptr [bp+var_69A]
    cbw
    add     ax, si
    mov     word ptr [bp+var_71C], ax
    mov     al, byte ptr [bp+var_714]
    cbw
    cmp     ax, word ptr [bp+var_71C]
    jbe     LAB_274b_0e42
    mov     ax, word ptr [bp+var_71C]
    mov     cx, ax
    shl     ax, 0x1
    add     ax, cx
    shl     ax, 0x1
    shl     ax, 0x1
    add     ax, cx
    add     ax, bp
    sub     ax, 0x698
    push    ax
    mov     ax, offset g_res_id
    push    ax                                 ; char *
    call    far ptr _strcpy
    add     sp, 0x4
    mov     bx, si
    shl     bx, 0x1
    add     bx, bp
    push    word ptr [bx+local_6e0]
    push    di
    mov     ax, offset g_res_id
    jmp     LAB_274b_0e50
LAB_274b_0e42:
    mov     bx, si
    shl     bx, 0x1
    add     bx, bp
    push    word ptr [bx+local_6e0]
    push    di
    mov     ax, offset aEmptyFilename
LAB_274b_0e50:
    push    ax
    call    far ptr sub_345BC
    add     sp, 0x6
    mov     ax, offset g_res_id
    push    ax
    call    far ptr font_op2
    add     sp, 0x2
    mov     word ptr [bp+var_71A], ax
    push    word ptr [word_3EB90]
    mov     ax, 0x8
    push    ax
    mov     ax, word ptr [bp+var_6E8+2]
    sub     ax, word ptr [bp+var_71A]
    sub     ax, di
    push    ax
    mov     bx, si
    shl     bx, 0x1
    add     bx, bp
    push    word ptr [bx+local_6e0]
    mov     ax, word ptr [bp+var_71A]
    add     ax, di
    push    ax
    call    far ptr sprite_1_fill_rect
    add     sp, 0xa
    inc     si
LAB_274b_0e96:
    cmp     si, 0x7
    jnc     LAB_274b_0ebc
    mov     al, byte ptr [bp+var_69A]
    cbw
    add     ax, si
    mov     cx, ax
    mov     al, byte ptr [bp+var_716]
    cbw
    cmp     cx, ax
    jz      LAB_274b_0eb0
    jmp     near ptr LAB_274b_0dea
LAB_274b_0eb0:
    push    word ptr [dialog_fnt_colour]
    push    word ptr [word_3EB90]
    jmp     near ptr LAB_274b_0df2
    db 0x90
LAB_274b_0ebc:
    push    cs
    call    near ptr mouse_draw_transparent_check
LAB_274b_0ec0:
    push    cs
    call    near ptr timer_get_delta_alt
    push    ax
    push    cs
    call    near ptr input_checking
    add     sp, 0x2
    mov     word ptr [bp+var_6CC], ax
    lea     ax, [bp+var_6C8]
    push    ax
    lea     ax, [bp+var_6E2]
    push    ax
    lea     ax, [bp+var_6B4]
    push    ax
    lea     ax, [bp+var_16]
    push    ax
    mov     ax, 0xa
    push    ax
    push    cs
    call    near ptr mouse_multi_hittest
    add     sp, 0xa
    mov     byte ptr [bp+var_6EA], al
    cmp     al, 0xff
    jnz     LAB_274b_0ef9
    jmp     near ptr LAB_274b_0fa2
LAB_274b_0ef9:
    or      al, al
    jnz     LAB_274b_0f1a
    test    byte ptr [mouse_butstate], 0x3
    jnz     LAB_274b_0f07
    jmp     near ptr LAB_274b_0fa2
LAB_274b_0f07:
    mov     byte ptr [bp+var_716], 0x0
    mov     byte ptr [bp+var_69A], 0xff
LAB_274b_0f11:
    mov     word ptr [bp+var_6CC], 0x0
    jmp     near ptr LAB_274b_0fa2
LAB_274b_0f1a:
    cmp     byte ptr [bp+var_6EA], 0x1
    jnz     LAB_274b_0f52
    test    byte ptr [mouse_butstate], 0x3
    jz      LAB_274b_0fa2
    mov     al, byte ptr [bp+var_69A]
    cbw
    mov     cx, ax
    mov     al, byte ptr [bp+var_716]
    cbw
    add     ax, cx
    jz      LAB_274b_0f3c
    dec     byte ptr [bp+var_716]
LAB_274b_0f3c:
    mov     al, byte ptr [bp+var_69A]
    cmp     byte ptr [bp+var_716], al
    jge     LAB_274b_0f11
    mov     al, byte ptr [bp+var_716]
    mov     byte ptr [bp+var_69A], al
    jmp     LAB_274b_0f11
    db 2 dup (0x90)
LAB_274b_0f52:
    cmp     byte ptr [bp+var_6EA], 0x9
    jnz     LAB_274b_0f78
    test    byte ptr [mouse_butstate], 0x3
    jz      LAB_274b_0fa2
    mov     al, byte ptr [bp+var_714]
    cbw
    dec     ax
    mov     cx, ax
    mov     al, byte ptr [bp+var_716]
    cbw
    cmp     cx, ax
    jz      LAB_274b_0f11
    inc     byte ptr [bp+var_716]
    jmp     LAB_274b_0f11
    db 0x90
LAB_274b_0f78:
    mov     al, byte ptr [bp+var_6EA]
    cbw
    mov     cx, ax
    mov     al, byte ptr [bp+var_69A]
    cbw
    add     ax, cx
    sub     ax, 0x2
    mov     cx, ax
    mov     al, byte ptr [bp+var_714]
    cbw
    cmp     cx, ax
    jge     LAB_274b_0fa2
    mov     al, byte ptr [bp+var_69A]
    add     al, byte ptr [bp+var_6EA]
    sub     al, 0x2
    mov     byte ptr [bp+var_716], al
LAB_274b_0fa2:
    mov     ax, word ptr [bp+var_6CC]
    cmp     ax, 0xd
    jz      LAB_274b_101e
    cmp     ax, 0x1b
    jz      LAB_274b_1024
    cmp     ax, 0x20
    jz      LAB_274b_101e
    cmp     ax, 0x4800
    jz      LAB_274b_0fe2
    cmp     ax, 0x5000
    jz      LAB_274b_1006
    mov     bx, ax
    test    byte ptr [bx+g_ascii_props], 0x1
    jnz     LAB_274b_0fcf
    test    byte ptr [bx+g_ascii_props], 0x2
    jz      LAB_274b_0fe6
LAB_274b_0fcf:
    mov     bx, word ptr [bp+var_6CC]
    test    byte ptr [bx+g_ascii_props], 0x1
    jz      LAB_274b_102a
    mov     al, byte ptr [bp+var_6CC]
    add     al, 0x20
    jmp     LAB_274b_102e
LAB_274b_0fe2:
    dec     byte ptr [bp+var_716]
LAB_274b_0fe6:
    mov     al, byte ptr [bp+var_69A]
    cmp     byte ptr [bp+var_716], al
    jge     LAB_274b_0ff8
    mov     al, byte ptr [bp+var_716]
    mov     byte ptr [bp+var_69A], al
LAB_274b_0ff8:
    cmp     byte ptr [bp+var_69A], 0x0
    jl      LAB_274b_1002
    jmp     near ptr LAB_274b_10b4
LAB_274b_1002:
    jmp     near ptr LAB_274b_0bae
    db 0x90
LAB_274b_1006:
    mov     al, byte ptr [bp+var_714]
    cbw
    dec     ax
    mov     cx, ax
    mov     al, byte ptr [bp+var_716]
    cbw
    cmp     cx, ax
    jz      LAB_274b_0fe6
    inc     byte ptr [bp+var_716]
    jmp     LAB_274b_0fe6
    db 0x90
LAB_274b_101e:
    mov     byte ptr [bp+var_2], 0x1
    jmp     LAB_274b_0fe6
LAB_274b_1024:
    mov     byte ptr [bp+var_2], 0xff
    jmp     LAB_274b_0fe6
LAB_274b_102a:
    mov     al, byte ptr [bp+var_6CC]
LAB_274b_102e:
    mov     byte ptr [bp+var_69C], al
    mov     byte ptr [bp+var_6EA], 0x0
    jmp     LAB_274b_1066
    db 0x90
LAB_274b_103a:
    mov     al, byte ptr [bp+var_6EA]
    cbw
    mov     bx, ax
    shl     bx, 0x1
    add     bx, ax
    shl     bx, 0x1
    shl     bx, 0x1
    add     bx, ax
    add     bx, bp
    mov     al, byte ptr [bx+0xf968]
LAB_274b_1051:
    cmp     al, byte ptr [bp+var_69C]
    jnz     LAB_274b_1062
    mov     al, byte ptr [bp+var_6EA]
    mov     byte ptr [bp+var_716], al
    jmp     LAB_274b_0fe6
    db 0x90
LAB_274b_1062:
    inc     byte ptr [bp+var_6EA]
LAB_274b_1066:
    mov     al, byte ptr [bp+var_714]
    cmp     byte ptr [bp+var_6EA], al
    jl      LAB_274b_1073
    jmp     near ptr LAB_274b_0fe6
LAB_274b_1073:
    mov     al, byte ptr [bp+var_6EA]
    cbw
    mov     bx, ax
    shl     bx, 0x1
    add     bx, ax
    shl     bx, 0x1
    shl     bx, 0x1
    add     bx, ax
    add     bx, bp
    mov     al, byte ptr [bx+0xf968]
    cbw
    mov     bx, ax
    test    byte ptr [bx+g_ascii_props], 0x1
    jz      LAB_274b_103a
    mov     al, byte ptr [bp+var_6EA]
    cbw
    mov     bx, ax
    shl     bx, 0x1
    add     bx, ax
    shl     bx, 0x1
    shl     bx, 0x1
    add     bx, ax
    add     bx, bp
    mov     al, byte ptr [bx+0xf968]
    add     al, 0x20
    jmp     LAB_274b_1051
    db 0x90
LAB_274b_10b0:
    inc     byte ptr [bp+var_69A]
LAB_274b_10b4:
    mov     al, byte ptr [bp+var_69A]
    cbw
    add     ax, 0x6
    mov     cx, ax
    mov     al, byte ptr [bp+var_716]
    cbw
    cmp     cx, ax
    jl      LAB_274b_10b0
    cmp     byte ptr [bp+var_2], 0x0
    jnz     LAB_274b_10d0
    jmp     near ptr LAB_274b_0db9
LAB_274b_10d0:
    cmp     byte ptr [bp+var_2], 0xff
    jnz     LAB_274b_10d9
    jmp     near ptr LAB_274b_0bdc
LAB_274b_10d9:
    cbw
    mov     cx, ax
    shl     ax, 0x1
    add     ax, cx
    shl     ax, 0x1
    shl     ax, 0x1
    add     ax, cx
    add     ax, bp
    sub     ax, 0x698
    push    ax
    push    word ptr [bp+param_2]              ; char *
    call    far ptr _strcpy
    add     sp, 0x4
    mov     byte ptr [bp+var_6A0], 0x1
LAB_274b_10fc:
    push    cs
    call    near ptr sub_275C6
    mov     al, byte ptr [bp+var_18]
    mov     byte ptr [g_is_busy], al
    mov     al, byte ptr [bp+var_6A0]
    cbw
    pop     si
    pop     di
    mov     sp, bp
    pop     bp
    retf
do_fileselect_dialog_asm_ endp
    db 0x90

; void __cdecl16far file_build_path(char * dir, char * name_, char * ext, char * dst)
file_build_path_asm_ proc far
    var_2      = byte ptr   -2
    dir        = word ptr    6
    name_      = word ptr    8
    ext        = word ptr   10
    dst        = word ptr   12

    push    bp
    mov     bp, sp
    sub     sp, 0x4
    push    si
    cmp     word ptr [bp+dir], 0x0
    jz      LAB_274b_113c
    push    word ptr [bp+dir]
    push    word ptr [bp+dst]                  ; char *
    call    far ptr _strcpy
    add     sp, 0x4
    push    word ptr [bp+dir]                  ; char *
    call    far ptr _strlen
    add     sp, 0x2
    mov     si, ax
    jmp     LAB_274b_1144
LAB_274b_113c:
    mov     bx, word ptr [bp+dst]
    mov     byte ptr [bx], 0x0
    sub     si, si
LAB_274b_1144:
    or      si, si
    jz      LAB_274b_1168
    mov     bx, word ptr [bp+dir]
    mov     al, byte ptr [bx+si-0x1]
    mov     byte ptr [bp+var_2], al
    cmp     al, 0x3a
caseD_4:
    jz      LAB_274b_1168
    cmp     al, 0x5c
    jz      LAB_274b_1168
    mov     ax, offset aPathSeparator
    push    ax
    push    word ptr [bp+dst]                  ; char *
    call    far ptr _strcat
    add     sp, 0x4
LAB_274b_1168:
    push    word ptr [bp+name_]
    push    word ptr [bp+dst]                  ; char *
    call    far ptr _strcat
    add     sp, 0x4
    push    word ptr [bp+ext]
    push    word ptr [bp+dst]                  ; char *
    call    far ptr _strcat
    add     sp, 0x4
    pop     si
    mov     sp, bp
    pop     bp
    retf
file_build_path_asm_ endp
    db 0x90

; int __cdecl16far do_savefile_dialog(size_t * param_1, size_t * param_2, undefined2 param_3, undefined2 param_4)
do_savefile_dialog_asm_ proc far
    var_12     = word ptr  -18
    var_10     = word ptr  -16
    var_E      = word ptr  -14
    var_C      = word ptr  -12
    var_A      = word ptr  -10
    var_8      = word ptr   -8
    var_4      = byte ptr   -4
    param_1    = word ptr    6
    param_2    = word ptr    8
    param_3    = word ptr   10
    param_4    = word ptr   12

    push    bp
    mov     bp, sp
    sub     sp, 0x12
    push    di
    push    si
    sub     ax, ax
    push    ax
    lea     ax, [bp+var_12]
    push    ax
    push    word ptr [dialogarg2]
    mov     ax, 0xffff
    push    ax
    push    ax
    mov     ax, offset aSav
    push    ax
    push    word ptr [mainresptr+2]
    push    word ptr [mainresptr]
    push    cs
    call    near ptr locate_text_res
    add     sp, 0x6
    push    dx
    push    ax
    mov     ax, 0x1
    push    ax
    mov     ax, 0x3
    push    ax
    push    cs
    call    near ptr show_dialog
    add     sp, 0x12
    or      ax, ax
    jge     LAB_274b_11d2
    sub     ax, ax
    pop     si
    pop     di
    mov     sp, bp
    pop     bp
    retf
LAB_274b_11d2:
    mov     byte ptr [bp+var_4], 0x0
    push    word ptr [word_3EB90]
    push    word ptr [dialog_fnt_colour]
    call    far ptr font_set_colour
    add     sp, 0x4
    push    word ptr [bp+param_4]
    push    word ptr [bp+param_3]
    mov     ax, offset g_res_id
    push    ax
    push    cs
    call    near ptr copy_string
    add     sp, 0x6
    push    word ptr [bp+var_10]
    push    word ptr [bp+var_12]
    mov     ax, offset g_res_id
    push    ax
    call    far ptr sub_345BC
    add     sp, 0x6
    push    word ptr [word_3EB90]
    push    word ptr [dialog_fnt_colour]
    call    far ptr font_set_colour
    add     sp, 0x4
    push    word ptr [bp+var_C]
    push    word ptr [bp+var_E]
    push    word ptr [bp+param_1]
    call    far ptr sub_345BC
    add     sp, 0x6
    push    word ptr [bp+var_8]
    push    word ptr [bp+var_A]
    push    word ptr [bp+param_2]
    call    far ptr sub_345BC
    add     sp, 0x6
    push    cs
    call    near ptr mouse_draw_transparent_check
    jmp     LAB_274b_127f
    db 0x90
LAB_274b_1242:
    mov     bx, word ptr [bp+param_2]
    cmp     byte ptr [bx+di], 0x20
    jnz     LAB_274b_124d
    mov     byte ptr [bx+di], 0x5f
LAB_274b_124d:
    inc     di
LAB_274b_124e:
    mov     bx, word ptr [bp+param_2]
    cmp     byte ptr [bx+di], 0x0
    jnz     LAB_274b_1242
    cmp     si, 0x1b
    jz      LAB_274b_12a4
    cmp     si, 0xd
    jz      LAB_274b_12a0
    mov     ax, 0x7530
    cwd
    push    dx                                 ; int
    push    ax                                 ; int
    push    word ptr [bp+var_C]                ; int
    push    word ptr [bp+var_E]                ; int
    mov     ax, 0x12
    push    ax
    push    word ptr [bp+param_1]              ; char *
    push    cs
    call    near ptr call_read_line
    add     sp, 0xc
    cmp     ax, 0x1b
    jz      LAB_274b_12a4
LAB_274b_127f:
    mov     ax, 0x7530
    cwd
    push    dx                                 ; int
    push    ax                                 ; int
    push    word ptr [bp+var_8]                ; int
    push    word ptr [bp+var_A]                ; int
    mov     ax, 0x8
    push    ax
    push    word ptr [bp+param_2]              ; char *
    push    cs
    call    near ptr call_read_line
    add     sp, 0xc
    mov     si, ax
    sub     di, di
    jmp     LAB_274b_124e
    db 0x90
LAB_274b_12a0:
    mov     byte ptr [bp+var_4], 0x1
LAB_274b_12a4:
    push    cs
    call    near ptr sub_275C6
    mov     al, byte ptr [bp+var_4]
    cbw
    pop     si
    pop     di
    mov     sp, bp
    pop     bp
    retf
do_savefile_dialog_asm_ endp

; void __cdecl16far parse_filepath_separators(char * outpath, char * inpath)
parse_filepath_separators_asm_ proc far
    var_6      = word ptr   -6
    var_4      = word ptr   -4
    var_2      = byte ptr   -2
    outpath    = word ptr    6
    inpath     = word ptr    8

    push    bp
    mov     bp, sp
    sub     sp, 0x6
    push    si
    push    word ptr [bp+inpath]               ; char *
    call    far ptr _strlen
    add     sp, 0x2
    mov     word ptr [bp+var_4], ax
LAB_274b_12c7:
    mov     si, word ptr [bp+var_4]
    mov     bx, word ptr [bp+inpath]
    mov     al, byte ptr [bx+si-0x1]
    mov     byte ptr [bp+var_2], al
    cmp     al, 0x5c
    jz      LAB_274b_12e0
    cmp     al, 0x3a
    jz      LAB_274b_12e0
caseD_2:
    dec     word ptr [bp+var_4]
    jnz     LAB_274b_12c7
LAB_274b_12e0:
    mov     word ptr [bp+var_6], 0x0
LAB_274b_12e5:
    mov     bx, word ptr [bp+var_4]
    inc     word ptr [bp+var_4]
    mov     si, word ptr [bp+inpath]
    mov     al, byte ptr [bx+si]
    mov     bx, word ptr [bp+var_6]
    mov     si, word ptr [bp+outpath]
    mov     byte ptr [bx+si], al
    mov     bx, word ptr [bp+var_6]
    inc     word ptr [bp+var_6]
    mov     si, word ptr [bp+outpath]
    cmp     byte ptr [bx+si], 0x2e
    jnz     LAB_274b_12e5
    dec     word ptr [bp+var_6]
    mov     bx, word ptr [bp+var_6]
    mov     byte ptr [bx+si], 0x0
    pop     si
    mov     sp, bp
    pop     bp
    retf
parse_filepath_separators_asm_ endp

; ******************************************************************************
; * dbg: mykey
; ******************************************************************************

; int __cdecl16far input_checking(int unk)
input_checking_asm_ proc far
    unk        = word ptr    6

    push    bp
    mov     bp, sp
    sub     sp, 0x4
    push    di
    push    si
    mov     ax, word ptr [bp+unk]
    add     word ptr [input_framecount], ax
    cmp     word ptr [input_framecount], 0x4e20 ; 20000
    jle     LAB_274b_133d
    sub     word ptr [input_framecount], 0x2710 ; 10000
    sub     word ptr [input_framecount2], 0x2710
    sub     word ptr [input_framecount3], 0x2710
LAB_274b_133d:
    call    far ptr kb_get_char
    mov     si, ax
    or      si, si
    jz      LAB_274b_134d
    mov     byte ptr [kbormouse], 0x0
LAB_274b_134d:
    call    far ptr get_joy_flags
    mov     di, ax
    call    far ptr get_kb_or_joy_flags
    mov     word ptr [kbjoyflags], ax
    cmp     word ptr [joyflags], di
    jnz     LAB_274b_1365
    jmp     near ptr LAB_274b_13e6
LAB_274b_1365:
    mov     ax, word ptr [joyflags]
    xor     ax, di
    and     ax, di                             ; find changed flags from last?
    mov     word ptr [newjoyflags], ax
    mov     word ptr [joyflags], di
LAB_274b_1373:
    test    byte ptr [newjoyflags], 0x20
    jz      LAB_274b_1384
    mov     word ptr [joyinputcode], 0xd
    jmp     LAB_274b_13d1
    db 0x90
    db 0x90
LAB_274b_1384:
    test    byte ptr [newjoyflags], 0x10
    jz      LAB_274b_1394
    mov     word ptr [joyinputcode], 0x20
    jmp     LAB_274b_13d1
    db 0x90
LAB_274b_1394:
    test    byte ptr [newjoyflags], 0x1
    jz      LAB_274b_13a4
    mov     word ptr [joyinputcode], 0x4800
    jmp     LAB_274b_13d1
    db 0x90
LAB_274b_13a4:
    test    byte ptr [newjoyflags], 0x2
    jz      LAB_274b_13b4
    mov     word ptr [joyinputcode], 0x5000
    jmp     LAB_274b_13d1
    db 0x90
LAB_274b_13b4:
    test    byte ptr [newjoyflags], 0x8
    jz      LAB_274b_13c4
    mov     word ptr [joyinputcode], 0x4b00
    jmp     LAB_274b_13d1
    db 0x90
LAB_274b_13c4:
    test    byte ptr [newjoyflags], 0x4
    jz      LAB_274b_13d1
    mov     word ptr [joyinputcode], 0x4d00
LAB_274b_13d1:
    cmp     word ptr [joyinputcode], 0x0
    jz      LAB_274b_13f9
    mov     ax, word ptr [input_framecount]
    mov     word ptr [input_framecount3], ax
    mov     byte ptr [kbormouse], 0x0
    jmp     LAB_274b_13f9
    db 0x90
LAB_274b_13e6:
    or      di, di
    jz      LAB_274b_13f9
    mov     ax, word ptr [input_framecount3]
    add     ax, 0x14
    cmp     ax, word ptr [input_framecount]
    jge     LAB_274b_13f9
    jmp     near ptr LAB_274b_1373
LAB_274b_13f9:
    mov     ax, offset mouse_ypos
    push    ax
    mov     ax, offset mouse_xpos
    push    ax
    mov     ax, offset mouse_butstate
    push    ax
    call    far ptr mouse_get_state
    add     sp, 0x6
    mov     ax, word ptr [mouse_xpos]
    cmp     word ptr [mouse_oldx], ax
    jnz     LAB_274b_1428
    mov     ax, word ptr [mouse_ypos]
    cmp     word ptr [mouse_oldy], ax
    jnz     LAB_274b_1428
    mov     ax, word ptr [mouse_butstate]
    cmp     word ptr [mouse_oldbut], ax
    jz      LAB_274b_1458
LAB_274b_1428:
    mov     ax, word ptr [mouse_xpos]
    mov     word ptr [mouse_oldx], ax
    mov     ax, word ptr [mouse_ypos]
    mov     word ptr [mouse_oldy], ax
    mov     byte ptr [kbormouse], 0x1
    mov     word ptr [input_framecounter], 0x0
    cmp     byte ptr [byte_3B8F7], 0x0
    jz      LAB_274b_1484
    cmp     byte ptr [mouse_isdirty], 0x0
    jz      LAB_274b_1451
    push    cs
    call    near ptr mouse_draw_opaque
LAB_274b_1451:
    push    cs
    call    near ptr mouse_draw_transparent
    jmp     LAB_274b_1484
    db 0x90
LAB_274b_1458:
    cmp     byte ptr [kbormouse], 0x0
    jz      LAB_274b_1484
    mov     ax, word ptr [bp+unk]
    add     word ptr [input_framecounter], ax
    cmp     word ptr [input_framecounter], 0x1f4
    jle     LAB_274b_1484
    mov     word ptr [input_framecounter], 0x0
    mov     byte ptr [kbormouse], 0x0
    cmp     byte ptr [mouse_isdirty], 0x0
    jz      LAB_274b_1484
    push    cs
    call    near ptr mouse_draw_opaque
LAB_274b_1484:
    cmp     byte ptr [kbormouse], 0x0
    jz      _try_ret_joyinput
    mov     ax, word ptr [mouse_oldbut]
    cmp     word ptr [mouse_butstate], ax
    jz      LAB_274b_14cc
    mov     ax, word ptr [mouse_butstate]
    mov     word ptr [mouse_oldbut], ax
LAB_274b_149a:
    test    byte ptr [mouse_butstate], 0x1
    jz      LAB_274b_14aa
    mov     word ptr [mousebutinputcode], 0x20
    jmp     LAB_274b_14b7
    db 0x90
LAB_274b_14aa:
    test    byte ptr [mouse_butstate], 0x2
    jz      LAB_274b_14b7
    mov     word ptr [mousebutinputcode], 0xd
LAB_274b_14b7:
    cmp     word ptr [mousebutinputcode], 0x0
    jz      LAB_274b_14c4
    mov     ax, word ptr [input_framecount]
    mov     word ptr [input_framecount2], ax
LAB_274b_14c4:
    mov     word ptr [input_framecounter], 0x0
    jmp     _try_ret_mousebut01
LAB_274b_14cc:
    cmp     word ptr [mouse_butstate], 0x0
    jz      _try_ret_mousebut01
    mov     ax, word ptr [input_framecount2]
    add     ax, 0x14
    cmp     ax, word ptr [input_framecount]
    jl      LAB_274b_149a
_try_ret_mousebut01:
    cmp     word ptr [mouse_butstate], 0x0
    jz      _try_ret_joyinput
    test    byte ptr [mouse_butstate], 0x1
    jz      _try_ret_mousebut2
    or      byte ptr [kbjoyflags], 0x20
    jmp     _try_ret_joyinput
_try_ret_mousebut2:
    test    byte ptr [mouse_butstate], 0x2
    jz      _try_ret_joyinput
    or      byte ptr [kbjoyflags], 0x10
_try_ret_joyinput:
    or      si, si
    jnz     LAB_274b_1529
    cmp     word ptr [joyinputcode], 0x0
    jz      _try_ret_mousebutinput
    mov     si, word ptr [joyinputcode]
    mov     word ptr [joyinputcode], 0x0
    jmp     LAB_274b_1529
    db 0x90
_try_ret_mousebutinput:
    cmp     word ptr [mousebutinputcode], 0x0
    jz      LAB_274b_1529
    mov     si, word ptr [mousebutinputcode]
    mov     word ptr [mousebutinputcode], 0x0
LAB_274b_1529:
    mov     ax, si
    pop     si
    pop     di
    mov     sp, bp
    pop     bp
    retf
input_checking_asm_ endp
    db 0x90

; ******************************************************************************
; * dbg: hurrykey
; ******************************************************************************

; int __cdecl16far input_do_checking(int unk)
input_do_checking_asm_ proc far
    unk        = word ptr    6

    push    bp
    mov     bp, sp
    push    word ptr [bp+unk]
    push    cs
    call    near ptr input_checking
    add     sp, 0x2
    pop     bp
    retf
input_do_checking_asm_ endp
    db 0x90

; ******************************************************************************
; * dbg: openresource
; ******************************************************************************

; void * __cdecl16far file_load_resfile(char * filename)
file_load_resfile_asm_ proc far
    var_54     = byte ptr  -84
    var_4      = word ptr   -4
    var_2      = word ptr   -2
    filename   = word ptr    6

    push    bp
    mov     bp, sp
    sub     sp, 0x54
LAB_274b_1548:
    push    word ptr [bp+filename]
    lea     ax, [bp+var_54]
    push    ax                                 ; char *
    call    far ptr _strcpy
    add     sp, 0x4
    mov     ax, offset a_res
    push    ax
    lea     ax, [bp+var_54]
    push    ax                                 ; char *
    call    far ptr _strcat
    add     sp, 0x4
    lea     ax, [bp+var_54]
    push    ax                                 ; char *
    mov     ax, 0x1
    push    ax                                 ; int
    push    cs
    call    near ptr file_load_resource
    add     sp, 0x4
    mov     word ptr [bp+var_4], ax
    mov     word ptr [bp+var_2], dx
    or      ax, dx
    jnz     LAB_274b_15be
    push    word ptr [bp+filename]
    lea     ax, [bp+var_54]
    push    ax                                 ; char *
    call    far ptr _strcpy
    add     sp, 0x4
    mov     ax, offset a_pre
    push    ax
    lea     ax, [bp+var_54]
    push    ax                                 ; char *
    call    far ptr _strcat
    add     sp, 0x4
    lea     ax, [bp+var_54]
    push    ax                                 ; char *
    mov     ax, 0x7
    push    ax                                 ; int
    push    cs
    call    near ptr file_load_resource
    add     sp, 0x4
    mov     word ptr [bp+var_4], ax
    mov     word ptr [bp+var_2], dx
    or      ax, dx
    jnz     LAB_274b_15be
    push    cs
    call    near ptr do_dea_textres
    jmp     LAB_274b_1548
LAB_274b_15be:
    mov     ax, word ptr [bp+var_4]
    mov     dx, word ptr [bp+var_2]
    mov     sp, bp
    pop     bp
    retf
file_load_resfile_asm_ endp

; ******************************************************************************
; * dbg: closeresource
; ******************************************************************************

; void __cdecl16far unload_resource(void * res)
unload_resource_asm_ proc far
    res        = dword ptr   6

    push    bp
    mov     bp, sp
    push    word ptr [bp+res+2]
    push    word ptr [bp+res]
    call    far ptr mmgr_free
    add     sp, 0x4
    pop     bp
    retf
unload_resource_asm_ endp
    db 0x90

; void * __cdecl16far locate_shape_alt(void * data, char * name_)
locate_shape_alt_asm_ proc far
    data       = dword ptr   6
    name_      = word ptr   10

    push    bp
    mov     bp, sp
    push    word ptr [bp+name_]
    push    word ptr [bp+data+2]
    push    word ptr [bp+data]
    call    far ptr locate_shape_fatal
    add     sp, 0x6
    pop     bp
    retf
locate_shape_alt_asm_ endp

; ******************************************************************************
; * Get a localized resource. The configured language code
; * is used as the resource name prefix.
; * dbg: getresl
; ******************************************************************************

; void * __cdecl16far locate_text_res(char * data, char * name_)
locate_text_res_asm_ proc far
    var_4      = byte ptr   -4
    var_3      = byte ptr   -3
    var_2      = byte ptr   -2
    var_1      = byte ptr   -1
    data       = dword ptr   6
    name_      = word ptr   10

    push    bp
    mov     bp, sp
    sub     sp, 0x4
    mov     al, byte ptr [g_language]
    mov     byte ptr [bp+var_4], al
    mov     bx, word ptr [bp+name_]
    mov     al, byte ptr [bx]
    mov     byte ptr [bp+var_3], al
    mov     al, byte ptr [bx+0x1]
    mov     byte ptr [bp+var_2], al
    mov     al, byte ptr [bx+0x2]
    mov     byte ptr [bp+var_1], al
    lea     ax, [bp+var_4]
    push    ax
    push    word ptr [bp+data+2]
    push    word ptr [bp+data]
    call    far ptr locate_shape_fatal
    mov     sp, bp
    pop     bp
    retf
locate_text_res_asm_ endp
    db 0x90

; void __cdecl16far copy_string(char * dst, char * src)
copy_string_asm_ proc far
    var_4      = dword ptr  -4
    dst        = word ptr    6
    src        = dword ptr  10

    push    bp
    mov     bp, sp
    sub     sp, 0x4
    push    si
    mov     ax, word ptr [bp+0x8]
    mov     dx, word ptr [bp+src]
    mov     word ptr [bp+var_4], ax
    mov     word ptr [bp+var_4+2], dx
LAB_274b_1639:
    mov     bx, word ptr [bp+dst]
    les     si, [bp+var_4]
    mov     al, byte ptr es:[si]
    mov     byte ptr [bx], al
    inc     word ptr [bp+dst]
    inc     word ptr [bp+var_4]
    les     bx, [bp+var_4]
    cmp     byte ptr es:[bx], 0x0
    jnz     LAB_274b_1639
    mov     bx, word ptr [bp+dst]
    mov     byte ptr [bx], 0x0
    pop     si
    mov     sp, bp
    pop     bp
    retf
copy_string_asm_ endp

; int __cdecl16far mouse_track_op(int param_1, int param_2, uint param_3, int param_4, uint param_5, int param_6, int param_7, int param_8)
mouse_track_op_asm_ proc far
    var_16     = word ptr  -22
    var_14     = word ptr  -20
    var_12     = word ptr  -18
    var_E      = word ptr  -14
    var_C      = word ptr  -12
    var_A      = word ptr  -10
    var_6      = word ptr   -6
    var_4      = word ptr   -4
    var_2      = word ptr   -2
    param_1    = word ptr    6
    param_2    = word ptr    8
    param_3    = word ptr   10
    param_4    = word ptr   12
    param_5    = word ptr   14
    param_6    = word ptr   16
    param_7    = word ptr   18
    param_8    = word ptr   20

    push    bp
    mov     bp, sp
    sub     sp, 0x16
    push    di
    push    si
    mov     ax, word ptr [bp+param_5]
    cmp     word ptr [bp+param_3], ax
    jle     LAB_274b_1678
    mov     word ptr [bp+var_A], 0x0
    mov     ax, word ptr [bp+param_3]
    jmp     LAB_274b_1680
LAB_274b_1678:
    mov     word ptr [bp+var_A], 0x1
    mov     ax, word ptr [bp+param_5]
LAB_274b_1680:
    mov     word ptr [bp+var_6], ax
    mov     ax, word ptr [bp+param_8]
    shl     ax, 0x1
    shl     ax, 0x1
    mov     word ptr [bp+var_14], ax
    mov     ax, word ptr [bp+var_6]
    dec     ax
    mov     word ptr [bp+var_16], ax
    imul    word ptr [bp+param_6]
    shl     ax, 0x1
    shl     ax, 0x1
    cwd
    mov     cx, word ptr [bp+var_14]
    idiv    cx
    mov     si, ax
    mov     ax, word ptr [bp+param_6]
    add     ax, word ptr [bp+param_7]
    imul    word ptr [bp+var_16]
    shl     ax, 0x1
    shl     ax, 0x1
    cwd
    idiv    cx
    mov     di, ax
    sub     ax, si
    mov     word ptr [bp+var_12], ax
    mov     ax, word ptr [bp+param_1]
    or      ax, ax
    jz      LAB_274b_16c8
    cmp     ax, 0x1
    jz      LAB_274b_171e
    jmp     LAB_274b_1715
LAB_274b_16c8:
    sub     ax, ax
    push    ax
    push    word ptr [bp+param_5]
    push    word ptr [bp+param_3]
    push    word ptr [bp+param_4]
    push    word ptr [bp+param_2]
    call    far ptr sprite_1_fill_rect
    add     sp, 0xa
    cmp     word ptr [bp+var_A], 0x0
    jnz     LAB_274b_16fa
    push    word ptr [dialog_fnt_colour]
    push    word ptr [bp+param_5]
    push    word ptr [bp+var_12]
    push    word ptr [bp+param_4]
    mov     ax, word ptr [bp+param_2]
    add     ax, si
    push    ax
    jmp     LAB_274b_170d
LAB_274b_16fa:
    push    word ptr [dialog_fnt_colour]
    push    word ptr [bp+var_12]
    push    word ptr [bp+param_3]
    mov     ax, word ptr [bp+param_4]
    add     ax, si
    push    ax
    push    word ptr [bp+param_2]
LAB_274b_170d:
    call    far ptr sprite_1_fill_rect
    add     sp, 0xa
LAB_274b_1715:
    mov     ax, word ptr [bp+param_6]
    pop     si
    pop     di
    mov     sp, bp
    pop     bp
    retf
LAB_274b_171e:
    cmp     word ptr [bp+var_A], 0x0
    jnz     LAB_274b_172c
    mov     ax, word ptr [mouse_xpos]
    sub     ax, word ptr [bp+param_2]
    jmp     LAB_274b_1732
LAB_274b_172c:
    mov     ax, word ptr [mouse_ypos]
    sub     ax, word ptr [bp+param_4]
LAB_274b_1732:
    mov     word ptr [bp+var_4], ax
    cmp     ax, si
    jl      LAB_274b_173d
    cmp     ax, di
    jle     LAB_274b_1776
LAB_274b_173d:
    push    cs
    call    near ptr timer_get_delta_alt
    push    ax
    push    cs
    call    near ptr input_checking
    add     sp, 0x2
    test    byte ptr [mouse_butstate], 0x3
    jnz     LAB_274b_173d
    cmp     word ptr [bp+var_4], si
    jge     LAB_274b_1764
    cmp     word ptr [bp+param_6], 0x0
    jnz     LAB_274b_175e
    jmp     near ptr LAB_274b_183c
LAB_274b_175e:
    dec     word ptr [bp+param_6]
    jmp     near ptr LAB_274b_183c
LAB_274b_1764:
    mov     ax, word ptr [bp+param_8]
    dec     ax
    cmp     ax, word ptr [bp+param_6]
    jg      LAB_274b_1770
    jmp     near ptr LAB_274b_183c
LAB_274b_1770:
    inc     word ptr [bp+param_6]
    jmp     near ptr LAB_274b_183c
LAB_274b_1776:
    mov     word ptr [bp+param_6], 0xffff
    mov     word ptr [bp+var_C], si
LAB_274b_177e:
    push    cs
    call    near ptr timer_get_delta_alt
    push    ax
    push    cs
    call    near ptr input_checking
    add     sp, 0x2
    cmp     word ptr [bp+var_A], 0x0
    jnz     LAB_274b_1798
    mov     ax, word ptr [mouse_xpos]
    sub     ax, word ptr [bp+param_2]
    jmp     LAB_274b_179e
LAB_274b_1798:
    mov     ax, word ptr [mouse_ypos]
    sub     ax, word ptr [bp+param_4]
LAB_274b_179e:
    mov     word ptr [bp+var_E], ax
    sub     ax, word ptr [bp+var_4]
    add     ax, si
    mov     word ptr [bp+var_2], ax
    or      ax, ax
    jge     LAB_274b_17b4
    mov     word ptr [bp+var_2], 0x0
    jmp     LAB_274b_17cc
LAB_274b_17b4:
    mov     ax, word ptr [bp+var_2]
    add     ax, word ptr [bp+var_12]
    mov     cx, word ptr [bp+var_6]
    dec     cx
    cmp     ax, cx
    jle     LAB_274b_17cc
    mov     ax, word ptr [bp+var_6]
    sub     ax, word ptr [bp+var_12]
    dec     ax
    mov     word ptr [bp+var_2], ax
LAB_274b_17cc:
    mov     ax, word ptr [bp+var_C]
    cmp     word ptr [bp+var_2], ax
    jz      LAB_274b_1832
    mov     ax, word ptr [bp+var_2]
    mov     word ptr [bp+var_C], ax
    push    cs
    call    near ptr mouse_draw_opaque_check
    sub     ax, ax
    push    ax
    push    word ptr [bp+param_5]
    push    word ptr [bp+param_3]
    push    word ptr [bp+param_4]
    push    word ptr [bp+param_2]
    call    far ptr sprite_1_fill_rect
    add     sp, 0xa
    cmp     word ptr [bp+var_A], 0x0
    jnz     LAB_274b_1812
    push    word ptr [dialog_fnt_colour]
    push    word ptr [bp+param_5]
    push    word ptr [bp+var_12]
    push    word ptr [bp+param_4]
    mov     ax, word ptr [bp+param_2]
    add     ax, word ptr [bp+var_2]
    push    ax
    jmp     LAB_274b_1826
    db 0x90
LAB_274b_1812:
    push    word ptr [dialog_fnt_colour]
    push    word ptr [bp+var_12]
    push    word ptr [bp+param_3]
    mov     ax, word ptr [bp+param_4]
    add     ax, word ptr [bp+var_2]
    push    ax
    push    word ptr [bp+param_2]
LAB_274b_1826:
    call    far ptr sprite_1_fill_rect
    add     sp, 0xa
    push    cs
    call    near ptr mouse_draw_transparent_check
LAB_274b_1832:
    test    byte ptr [mouse_butstate], 0x3
    jz      LAB_274b_183c
    jmp     near ptr LAB_274b_177e
LAB_274b_183c:
    cmp     word ptr [bp+param_6], -0x1
    jnz     LAB_274b_185e
    mov     ax, word ptr [bp+var_6]
    cwd
    mov     cx, word ptr [bp+param_8]
    idiv    cx
    cwd
    sub     ax, dx
    sar     ax, 0x1
    add     ax, word ptr [bp+var_2]
    imul    cx
    cwd
    mov     cx, word ptr [bp+var_6]
    idiv    cx
    mov     word ptr [bp+param_6], ax
LAB_274b_185e:
    mov     ax, word ptr [bp+param_8]
    shl     ax, 0x1
    shl     ax, 0x1
    mov     word ptr [bp+var_16], ax
    mov     ax, word ptr [bp+var_6]
    dec     ax
    mov     word ptr [bp+var_14], ax
    imul    word ptr [bp+param_6]
    shl     ax, 0x1
    shl     ax, 0x1
    cwd
    mov     cx, word ptr [bp+var_16]
    idiv    cx
    mov     si, ax
    mov     ax, word ptr [bp+param_6]
    add     ax, word ptr [bp+param_7]
    imul    word ptr [bp+var_14]
    shl     ax, 0x1
    shl     ax, 0x1
    cwd
    idiv    cx
    mov     di, ax
    sub     ax, si
    mov     word ptr [bp+var_12], ax
    push    cs
    call    near ptr mouse_draw_opaque_check
    sub     ax, ax
    push    ax
    push    word ptr [bp+param_5]
    push    word ptr [bp+param_3]
    push    word ptr [bp+param_4]
    push    word ptr [bp+param_2]
    call    far ptr sprite_1_fill_rect
    add     sp, 0xa
    cmp     word ptr [bp+var_A], 0x0
    jnz     LAB_274b_18cc
    push    word ptr [dialog_fnt_colour]
    push    word ptr [bp+param_5]
    push    word ptr [bp+var_12]
    push    word ptr [bp+param_4]
    mov     ax, word ptr [bp+param_2]
    add     ax, si
    push    ax
    jmp     LAB_274b_18df
    db 0x90
LAB_274b_18cc:
    push    word ptr [dialog_fnt_colour]
    push    word ptr [bp+var_12]
    push    word ptr [bp+param_3]
    mov     ax, word ptr [bp+param_4]
    add     ax, si
    push    ax
    push    word ptr [bp+param_2]
LAB_274b_18df:
    call    far ptr sprite_1_fill_rect
    add     sp, 0xa
    push    cs
    call    near ptr mouse_draw_transparent_check
    jmp     near ptr LAB_274b_1715
mouse_track_op_asm_ endp

; void __cdecl16far mouse_draw_transparent_check(void)
mouse_draw_transparent_check_asm_ proc far
    mov     byte ptr [byte_3B8F7], 0x1
    cmp     byte ptr [kbormouse], 0x0
    jz      LAB_274b_1905
    cmp     byte ptr [mouse_isdirty], 0x0
    jnz     LAB_274b_1905
    push    cs
    call    near ptr mouse_draw_transparent
LAB_274b_1905:
    retf
mouse_draw_transparent_check_asm_ endp

; void __cdecl16far mouse_draw_opaque_check(void)
mouse_draw_opaque_check_asm_ proc far
    mov     byte ptr [byte_3B8F7], 0x0
    cmp     byte ptr [mouse_isdirty], 0x0
    jz      LAB_274b_1916
    push    cs
    call    near ptr mouse_draw_opaque
LAB_274b_1916:
    retf
mouse_draw_opaque_check_asm_ endp
    db 0x90

; void __cdecl16far mouse_draw_opaque(void)
mouse_draw_opaque_asm_ proc far
    var_3C     = byte ptr  -60

    push    bp
    mov     bp, sp
    sub     sp, 0x3c
    lea     ax, [bp+var_3C]
    push    ax
    call    far ptr sprite_copy_both_to_arg
    add     sp, 0x2
    call    far ptr sprite_copy_2_to_1
    les     bx, [mouseunkspriteptr]
    push    word ptr es:[bx+0x2]
    push    word ptr es:[bx]
    call    far ptr sprite_putimage
    add     sp, 0x4
    lea     ax, [bp+var_3C]
    push    ax
    call    far ptr sprite_copy_arg_to_both
    mov     byte ptr [mouse_isdirty], 0x0
    mov     sp, bp
    pop     bp
    retf
mouse_draw_opaque_asm_ endp

; void __cdecl16far mouse_draw_transparent(void)
mouse_draw_transparent_asm_ proc far
    var_3C     = byte ptr  -60

    push    bp
    mov     bp, sp
    sub     sp, 0x3e
    push    si
    mov     si, word ptr [mouse_xpos]
    mov     ax, si
    cwd
    mov     cx, word ptr [video_flag2_is1]
    idiv    cx
    sub     si, dx
    lea     ax, [bp+var_3C]
    push    ax
    call    far ptr sprite_copy_both_to_arg
    add     sp, 0x2
    call    far ptr sprite_copy_2_to_1
    push    word ptr [mouse_ypos]
    push    si
    les     bx, [mouseunkspriteptr]
    push    word ptr es:[bx+0x2]
    push    word ptr es:[bx]
    call    far ptr sprite_clear_shape_alt
    add     sp, 0x8
    push    word ptr [mouse_ypos]
    push    word ptr [mouse_xpos]
    les     bx, [mmouspriteptr]
    push    word ptr es:[bx+0x2]
    push    word ptr es:[bx]
    call    far ptr sprite_putimage_and
    add     sp, 0x8
    push    word ptr [mouse_ypos]
    push    word ptr [mouse_xpos]
    les     bx, [smouspriteptr]
    push    word ptr es:[bx+0x2]
    push    word ptr es:[bx]
    call    far ptr sprite_putimage_or
    add     sp, 0x8
    lea     ax, [bp+var_3C]
    push    ax
    call    far ptr sprite_copy_arg_to_both
    add     sp, 0x2
    mov     byte ptr [mouse_isdirty], 0x1
    pop     si
    mov     sp, bp
    pop     bp
    retf
mouse_draw_transparent_asm_ endp
    db 0x90

; int __cdecl16far mouse_multi_hittest(int count, int arr_x1, int arr_x2, int arr_y1, int arr_y2)
mouse_multi_hittest_asm_ proc far
    count      = word ptr    6
    arr_x1     = word ptr    8
    arr_x2     = word ptr   10
    arr_y1     = word ptr   12
    arr_y2     = word ptr   14

    push    bp
    mov     bp, sp
    sub     sp, 0x2
    push    di
    push    si
    cmp     byte ptr [kbormouse], 0x0
    jz      LAB_274b_1a2a
    sub     si, si
    jmp     LAB_274b_19f5
    db 0x90
LAB_274b_19f4:
    inc     si
LAB_274b_19f5:
    cmp     word ptr [bp+count], si
    jle     LAB_274b_1a2a
    mov     di, si
    shl     di, 0x1
    mov     bx, word ptr [bp+arr_x1]
    mov     ax, word ptr [mouse_xpos]
    cmp     word ptr [bx+di], ax
    jg      LAB_274b_19f4
    mov     bx, word ptr [bp+arr_x2]
    cmp     word ptr [bx+di], ax
    jl      LAB_274b_19f4
    mov     bx, word ptr [bp+arr_y1]
    mov     ax, word ptr [mouse_ypos]
    cmp     word ptr [bx+di], ax
    jg      LAB_274b_19f4
    mov     bx, word ptr [bp+arr_y2]
    cmp     word ptr [bx+di], ax
    jl      LAB_274b_19f4
    mov     ax, si
    cbw
    pop     si
    pop     di
    mov     sp, bp
    pop     bp
    retf
    db 0x90
LAB_274b_1a2a:
    mov     ax, 0xffff
    pop     si
    pop     di
    mov     sp, bp
    pop     bp
    retf
mouse_multi_hittest_asm_ endp
    db 0x90

; void __cdecl16far check_input(void)
check_input_asm_ proc far
    var_2      = byte ptr   -2

    push    bp
    mov     bp, sp
    sub     sp, 0x2
LAB_274b_1a3a:
    call    far ptr get_kb_or_joy_flags
    test    al, 0x30
    jz      LAB_274b_1a4a
LAB_274b_1a43:
    mov     byte ptr [bp+var_2], 0x1
    jmp     LAB_274b_1a6c
    db 0x90
LAB_274b_1a4a:
    push    cs
    call    near ptr timer_get_delta_alt
    push    ax
    push    cs
    call    near ptr input_checking
    add     sp, 0x2
    or      ax, ax
    jnz     LAB_274b_1a43
    cmp     byte ptr [kbormouse], 0x0
    jz      LAB_274b_1a68
    test    byte ptr [mouse_butstate], 0x3
    jnz     LAB_274b_1a43
LAB_274b_1a68:
    mov     byte ptr [bp+var_2], 0x0
LAB_274b_1a6c:
    cmp     byte ptr [bp+var_2], 0x0
    jnz     LAB_274b_1a3a
    mov     sp, bp
    pop     bp
    retf
check_input_asm_ endp

; void __cdecl16far nopsub_28F26(void)
nopsub_28F26_asm_ proc far
    push    cs
    call    near ptr timer_get_delta_alt
    push    ax
    push    cs
    call    near ptr input_checking
    add     sp, 0x2
    or      ax, ax
    jz      nopsub_28F26
    push    cs
    call    near ptr check_input
    retf
nopsub_28F26_asm_ endp
    db 0x90

; void __cdecl16far sprite_copy_2_to_1_2(void)
sprite_copy_2_to_1_2_asm_ proc far
    mov     ax, offset sprite2
; <REPLACE>
    mov     dx, seg seg012
; </REPLACE>
;    mov     dx, 0x2ea2
    push    dx
    push    ax
    call    far ptr sprite_set_1_from_argptr
    add     sp, 0x4
    retf
sprite_copy_2_to_1_2_asm_ endp
    db 0x90

; void __cdecl16far sprite_copy_2_to_1_clear(void)
sprite_copy_2_to_1_clear_asm_ proc far
    mov     ax, offset sprite2
; <REPLACE>
    mov     dx, seg seg012
; </REPLACE>
;    mov     dx, 0x2ea2
    push    dx
    push    ax
    call    far ptr sprite_set_1_from_argptr
    add     sp, 0x4
    sub     ax, ax
    push    ax
    call    far ptr sprite_clear_1_color
    add     sp, 0x2
    retf
sprite_copy_2_to_1_clear_asm_ endp

; void __cdecl16far sprite_copy_wnd_to_1(void)
sprite_copy_wnd_to_1_asm_ proc far
    push    word ptr [wndsprite+2]
    push    word ptr [wndsprite]
    call    far ptr sprite_set_1_from_argptr
    add     sp, 0x4
    retf
sprite_copy_wnd_to_1_asm_ endp
    db 0x90

; void __cdecl16far sprite_copy_wnd_to_1_clear(void)
sprite_copy_wnd_to_1_clear_asm_ proc far
    push    word ptr [wndsprite+2]
    push    word ptr [wndsprite]
    call    far ptr sprite_set_1_from_argptr
    add     sp, 0x4
    sub     ax, ax
    push    ax
    call    far ptr sprite_clear_1_color
    add     sp, 0x2
    retf
sprite_copy_wnd_to_1_clear_asm_ endp

; RECTANGLE * __cdecl16far intro_draw_text(char * str_, int x_, int y_, uint colour_text, uint colour_shadow)
intro_draw_text_asm_ proc far
    str_       = word ptr    6
    x_         = word ptr    8
    y_         = word ptr   10
    colour_text = word ptr   12
    colour_shadow = word ptr   14

    push    bp
    mov     bp, sp
    mov     ax, word ptr [bp+y_]
    mov     word ptr [word_4224C], ax
    add     ax, word ptr [fontdef_unk_0E]
    inc     ax
    mov     word ptr [word_4224E], ax
    mov     ax, word ptr [bp+x_]
    mov     word ptr [word_42248], ax
    push    word ptr [bp+str_]
    call    far ptr font_op2
    add     sp, 0x2
    add     ax, word ptr [bp+x_]
    inc     ax
    mov     word ptr [word_4224A], ax
    sub     ax, ax
    push    ax
    push    word ptr [bp+colour_shadow]
    call    far ptr font_set_colour
    add     sp, 0x4
    mov     ax, word ptr [bp+y_]
    inc     ax
    push    ax
    mov     ax, word ptr [bp+x_]
    inc     ax
    push    ax
    push    word ptr [bp+str_]
    call    far ptr font_draw_text
    add     sp, 0x6
    sub     ax, ax
    push    ax
    push    word ptr [bp+colour_text]
    call    far ptr font_set_colour
    add     sp, 0x4
    push    word ptr [bp+y_]
    push    word ptr [bp+x_]
    push    word ptr [bp+str_]
    call    far ptr font_draw_text
    add     sp, 0x6
    mov     ax, offset word_42248
    pop     bp
    retf
intro_draw_text_asm_ endp

; RECTANGLE * __cdecl16far hiscore_draw_text(char * str_, int x_, int y_, uint colour_text, uint colour_border)
hiscore_draw_text_asm_ proc far
    str_       = word ptr    6
    x_         = word ptr    8
    y_         = word ptr   10
    colour_text = word ptr   12
    colour_border = word ptr   14

    push    bp
    mov     bp, sp
    mov     ax, word ptr [bp+y_]
    dec     ax
    mov     word ptr [rect_42250.rc_top], ax
    mov     ax, word ptr [bp+y_]
    add     ax, word ptr [fontdef_unk_0E]
    inc     ax
    mov     word ptr [rect_42250.rc_bottom], ax
    mov     ax, word ptr [bp+x_]
    dec     ax
    mov     word ptr [rect_42250], ax
    push    word ptr [bp+str_]
    call    far ptr font_op2
    add     sp, 0x2
    add     ax, word ptr [bp+x_]
    inc     ax
    mov     word ptr [rect_42250.rc_right], ax
    sub     ax, ax
    push    ax
    push    word ptr [bp+colour_border]
    call    far ptr font_set_colour
    add     sp, 0x4
    mov     ax, word ptr [bp+y_]
    inc     ax
    push    ax
    mov     ax, word ptr [bp+x_]
    inc     ax
    push    ax
    push    word ptr [bp+str_]
    call    far ptr font_draw_text
    add     sp, 0x6
    mov     ax, word ptr [bp+y_]
    inc     ax
    push    ax
    mov     ax, word ptr [bp+x_]
    dec     ax
    push    ax
    push    word ptr [bp+str_]
    call    far ptr font_draw_text
    add     sp, 0x6
    mov     ax, word ptr [bp+y_]
    dec     ax
    push    ax
    mov     ax, word ptr [bp+x_]
    inc     ax
    push    ax
    push    word ptr [bp+str_]
    call    far ptr font_draw_text
    add     sp, 0x6
    mov     ax, word ptr [bp+y_]
    dec     ax
    push    ax
    mov     ax, word ptr [bp+x_]
    dec     ax
    push    ax
    push    word ptr [bp+str_]
    call    far ptr font_draw_text
    add     sp, 0x6
    sub     ax, ax
    push    ax
    push    word ptr [bp+colour_text]
    call    far ptr font_set_colour
    add     sp, 0x4
    push    word ptr [bp+y_]
    push    word ptr [bp+x_]
    push    word ptr [bp+str_]
    call    far ptr font_draw_text
    add     sp, 0x6
    mov     ax, offset rect_42250
    pop     bp
    retf
hiscore_draw_text_asm_ endp

; word __cdecl16far call_read_line(size_t * param_1, int param_2, word param_3, word param_4, uint param_5, int param_6)
call_read_line_asm_ proc far
    var_4      = word ptr   -4
    var_2      = word ptr   -2
    param_1    = word ptr    6
    param_2    = word ptr    8
    param_3    = word ptr   10
    param_4    = word ptr   12
    param_5    = word ptr   14
    param_6    = word ptr   16

    push    bp
    mov     bp, sp
    sub     sp, 0x4
    push    si
    push    cs
    call    near ptr mouse_draw_opaque_check
    push    word ptr [bp+param_6]              ; int
    push    word ptr [bp+param_5]              ; int
    mov     ax, 0x2
; <REPLACE>
    mov     dx, seg seg018
; </REPLACE>
;    mov     dx, 0x36af
    push    dx
    push    ax                                 ; __int32
    push    word ptr [bp+param_4]              ; int
    push    word ptr [bp+param_3]              ; int
    mov     ax, word ptr [bp+param_2]
    mov     cx, ax
    shl     ax, 0x1
    shl     ax, 0x1
    shl     ax, 0x1
    add     ax, cx
    add     ax, 0x9
    push    ax                                 ; int
    push    cx                                 ; int
    sub     ax, ax
    push    ax
    push    word ptr [bp+param_1]              ; char *
    mov     ax, 0x2
    push    ax                                 ; char
    call    far ptr read_line
    add     sp, 0x16
    mov     word ptr [bp+var_4], ax
    push    cs
    call    near ptr mouse_draw_transparent_check
    push    word ptr [bp+param_1]              ; char *
    call    far ptr _strlen
    add     sp, 0x2
    mov     word ptr [bp+param_2], ax
    dec     ax
    mov     word ptr [bp+var_2], ax
    jmp     LAB_274b_1c6d
LAB_274b_1c6a:
    dec     word ptr [bp+var_2]
LAB_274b_1c6d:
    mov     bx, word ptr [bp+var_2]
    mov     si, word ptr [bp+param_1]
    cmp     byte ptr [bx+si], 0x20
    jz      LAB_274b_1c6a
    mov     si, bx
    mov     bx, word ptr [bp+param_1]
    mov     byte ptr [bx+si+0x1], 0x0
    mov     ax, word ptr [bp+var_4]
    pop     si
    mov     sp, bp
    pop     bp
    retf
call_read_line_asm_ endp
    db 0x90

; int __cdecl16far input_repeat_check(int param_1)
input_repeat_check_asm_ proc far
    var_4      = word ptr   -4
    param_1    = word ptr    6

    push    bp
    mov     bp, sp
    sub     sp, 0x6
    push    di
    push    si
    sub     di, di
    push    cs
    call    near ptr timer_get_delta_alt
    jmp     LAB_274b_1cb1
LAB_274b_1c9a:
    push    cs
    call    near ptr timer_get_delta_alt
    mov     word ptr [bp+var_4], ax
    add     di, ax
    push    ax
    push    cs
    call    near ptr input_do_checking
    add     sp, 0x2
    mov     si, ax
    or      si, si
    jnz     LAB_274b_1cb8
LAB_274b_1cb1:
    cmp     word ptr [bp+param_1], di
    jg      LAB_274b_1c9a
    sub     ax, ax
LAB_274b_1cb8:
    pop     si
    pop     di
    mov     sp, bp
    pop     bp
    retf
input_repeat_check_asm_ endp

; void __cdecl16far draw_border(int x1_, int y1_, int x2_, int y2_, uint colour1, uint colour2, uint colour3)
draw_border_asm_ proc far
    var_14     = word ptr  -20
    var_12     = word ptr  -18
    var_10     = word ptr  -16
    var_E      = word ptr  -14
    var_C      = word ptr  -12
    var_A      = word ptr  -10
    var_8      = word ptr   -8
    var_6      = word ptr   -6
    x1_        = word ptr    6
    y1_        = word ptr    8
    x2_        = word ptr   10
    y2_        = word ptr   12
    colour1    = word ptr   14
    colour2    = word ptr   16
    colour3    = word ptr   18

    push    bp
    mov     bp, sp
    sub     sp, 0x14
    push    di
    push    si
    mov     si, word ptr [bp+x1_]
    add     si, word ptr [bp+x2_]
    mov     di, word ptr [bp+y1_]
    add     di, word ptr [bp+y2_]
    push    word ptr [bp+colour1]
    push    word ptr [bp+y1_]
    push    si
    push    word ptr [bp+y1_]
    push    word ptr [bp+x1_]
    call    far ptr preRender_line
    add     sp, 0xa
    mov     ax, word ptr [bp+y1_]
    inc     ax
    mov     word ptr [bp+var_6], ax
    push    word ptr [bp+colour1]
    push    ax
    lea     ax, [si-0x1]
    push    ax
    push    word ptr [bp+var_6]
    mov     ax, word ptr [bp+x1_]
    inc     ax
    push    ax
    call    far ptr preRender_line
    add     sp, 0xa
    mov     ax, word ptr [bp+y1_]
    add     ax, 0x2
    mov     word ptr [bp+var_8], ax
    push    word ptr [bp+colour2]
    push    ax
    lea     ax, [si-0x2]
    push    ax
    push    word ptr [bp+var_8]
    mov     ax, word ptr [bp+x1_]
    add     ax, 0x2
    push    ax
    call    far ptr preRender_line
    add     sp, 0xa
    push    word ptr [bp+colour1]
    push    di
    push    word ptr [bp+x1_]
    push    word ptr [bp+y1_]
    push    word ptr [bp+x1_]
    call    far ptr preRender_line
    add     sp, 0xa
    mov     ax, word ptr [bp+x1_]
    inc     ax
    mov     word ptr [bp+var_A], ax
    push    word ptr [bp+colour1]
    lea     ax, [di-0x1]
    push    ax
    push    word ptr [bp+var_A]
    mov     ax, word ptr [bp+y1_]
    inc     ax
    push    ax
    push    word ptr [bp+var_A]
    call    far ptr preRender_line
    add     sp, 0xa
    mov     ax, word ptr [bp+x1_]
    add     ax, 0x2
    mov     word ptr [bp+var_C], ax
    push    word ptr [bp+colour2]
    lea     ax, [di-0x2]
    push    ax
    push    word ptr [bp+var_C]
    mov     ax, word ptr [bp+y1_]
    add     ax, 0x2
    push    ax
    push    word ptr [bp+var_C]
    call    far ptr preRender_line
    add     sp, 0xa
    push    word ptr [bp+colour3]
    push    di
    push    si
    push    di
    push    word ptr [bp+x1_]
    call    far ptr preRender_line
    add     sp, 0xa
    lea     ax, [di-0x1]
    mov     word ptr [bp+var_E], ax
    push    word ptr [bp+colour3]
    push    ax
    lea     ax, [si-0x1]
    push    ax
    push    word ptr [bp+var_E]
    mov     ax, word ptr [bp+x1_]
    inc     ax
    push    ax
    call    far ptr preRender_line
    add     sp, 0xa
    lea     ax, [di-0x2]
    mov     word ptr [bp+var_10], ax
    push    word ptr [bp+colour2]
    push    ax
    lea     ax, [si-0x2]
    push    ax
    push    word ptr [bp+var_10]
    mov     ax, word ptr [bp+x1_]
    add     ax, 0x2
    push    ax
    call    far ptr preRender_line
    add     sp, 0xa
    push    word ptr [bp+colour3]
    push    di
    push    si
    push    word ptr [bp+y1_]
    push    si
    call    far ptr preRender_line
    add     sp, 0xa
    lea     ax, [si-0x1]
    mov     word ptr [bp+var_12], ax
    push    word ptr [bp+colour3]
    lea     ax, [di-0x1]
    push    ax
    push    word ptr [bp+var_12]
    mov     ax, word ptr [bp+y1_]
    inc     ax
    push    ax
    push    word ptr [bp+var_12]
    call    far ptr preRender_line
    add     sp, 0xa
    lea     ax, [si-0x2]
    mov     word ptr [bp+var_14], ax
    push    word ptr [bp+colour2]
    lea     ax, [di-0x2]
    push    ax
    push    word ptr [bp+var_14]
    mov     ax, word ptr [bp+y1_]
    add     ax, 0x2
    push    ax
    push    word ptr [bp+var_14]
    call    far ptr preRender_line
    add     sp, 0xa
    pop     si
    pop     di
    mov     sp, bp
    pop     bp
    retf
draw_border_asm_ endp

; void __cdecl16far draw_button(char * text_res, int x1_, int y1_, uint x2_, int y2_, uint colour_border_1, uint colour_border_2, uint colour_bg, uint colour_text)
draw_button_asm_ proc far
    var_72     = word ptr  -114
    var_70     = word ptr  -112
    var_6E     = word ptr  -110
    var_6C     = word ptr  -108
    var_6A     = word ptr  -106
    var_68     = word ptr  -104
    var_66     = word ptr  -102
    var_64     = word ptr  -100
    var_62     = word ptr  -98
    var_60     = word ptr  -96
    var_5C     = word ptr  -92
    var_5A     = byte ptr  -90
    var_8      = word ptr   -8
    var_6      = word ptr   -6
    var_4      = byte ptr   -4
    var_2      = word ptr   -2
    text_res   = dword ptr   6
    x1_        = word ptr   10
    y1_        = word ptr   12
    x2_        = word ptr   14
    y2_        = word ptr   16
    colour_border_1 = word ptr   18
    colour_border_2 = word ptr   20
    colour_bg  = word ptr   22
    colour_text = word ptr   24

    push    bp
    mov     bp, sp
    sub     sp, 0x72
    push    di
    push    si
    mov     si, word ptr [bp+x1_]
    add     si, word ptr [bp+x2_]
    mov     di, word ptr [bp+y1_]
    add     di, word ptr [bp+y2_]
    push    word ptr [bp+colour_bg]
    push    word ptr [bp+y2_]
    push    word ptr [bp+x2_]
    push    word ptr [bp+y1_]
    push    word ptr [bp+x1_]
    call    far ptr sprite_1_fill_rect
    add     sp, 0xa
    push    word ptr [bp+colour_border_1]
    push    word ptr [bp+y1_]
    push    si
    push    word ptr [bp+y1_]
    push    word ptr [bp+x1_]
    call    far ptr preRender_line
    add     sp, 0xa
    mov     ax, word ptr [bp+y1_]
    inc     ax
    mov     word ptr [bp+var_64], ax
    push    word ptr [bp+colour_border_1]
    push    ax
    lea     ax, [si-0x1]
    push    ax
    push    word ptr [bp+var_64]
    mov     ax, word ptr [bp+x1_]
    inc     ax
    push    ax
    call    far ptr preRender_line
    add     sp, 0xa
    mov     ax, word ptr [bp+y1_]
    add     ax, 0x2
    mov     word ptr [bp+var_66], ax
    push    word ptr [bp+colour_border_1]
    push    ax
    lea     ax, [si-0x2]
    push    ax
    push    word ptr [bp+var_66]
    mov     ax, word ptr [bp+x1_]
    add     ax, 0x2
    push    ax
    call    far ptr preRender_line
    add     sp, 0xa
    push    word ptr [bp+colour_border_1]
    push    di
    push    word ptr [bp+x1_]
    push    word ptr [bp+y1_]
    push    word ptr [bp+x1_]
    call    far ptr preRender_line
    add     sp, 0xa
    mov     ax, word ptr [bp+x1_]
    inc     ax
    mov     word ptr [bp+var_68], ax
    push    word ptr [bp+colour_border_1]
    lea     ax, [di-0x1]
    push    ax
    push    word ptr [bp+var_68]
    mov     ax, word ptr [bp+y1_]
    inc     ax
    push    ax
    push    word ptr [bp+var_68]
    call    far ptr preRender_line
    add     sp, 0xa
    mov     ax, word ptr [bp+x1_]
    add     ax, 0x2
    mov     word ptr [bp+var_6A], ax
    push    word ptr [bp+colour_border_1]
    lea     ax, [di-0x2]
    push    ax
    push    word ptr [bp+var_6A]
    mov     ax, word ptr [bp+y1_]
    add     ax, 0x2
    push    ax
    push    word ptr [bp+var_6A]
    call    far ptr preRender_line
    add     sp, 0xa
    push    word ptr [bp+colour_border_2]
    push    di
    push    si
    push    di
    push    word ptr [bp+x1_]
    call    far ptr preRender_line
    add     sp, 0xa
    lea     ax, [di-0x1]
    mov     word ptr [bp+var_6C], ax
    push    word ptr [bp+colour_border_2]
    push    ax
    lea     ax, [si-0x1]
    push    ax
    push    word ptr [bp+var_6C]
    mov     ax, word ptr [bp+x1_]
    inc     ax
    push    ax
    call    far ptr preRender_line
    add     sp, 0xa
    lea     ax, [di-0x2]
    mov     word ptr [bp+var_6E], ax
    push    word ptr [bp+colour_border_2]
    push    ax
    lea     ax, [si-0x2]
    push    ax
    push    word ptr [bp+var_6E]
    mov     ax, word ptr [bp+x1_]
    add     ax, 0x2
    push    ax
    call    far ptr preRender_line
    add     sp, 0xa
    push    word ptr [bp+colour_border_2]
    push    di
    push    si
    push    word ptr [bp+y1_]
    push    si
    call    far ptr preRender_line
    add     sp, 0xa
    lea     ax, [si-0x1]
    mov     word ptr [bp+var_70], ax
    push    word ptr [bp+colour_border_2]
    lea     ax, [di-0x1]
    push    ax
    push    word ptr [bp+var_70]
    mov     ax, word ptr [bp+y1_]
    inc     ax
    push    ax
    push    word ptr [bp+var_70]
    call    far ptr preRender_line
    add     sp, 0xa
    lea     ax, [si-0x2]
    mov     word ptr [bp+var_72], ax
    push    word ptr [bp+colour_border_2]
    lea     ax, [di-0x2]
    push    ax
    push    word ptr [bp+var_72]
    mov     ax, word ptr [bp+y1_]
    add     ax, 0x2
    push    ax
    push    word ptr [bp+var_72]
    call    far ptr preRender_line
    add     sp, 0xa
    mov     ax, word ptr [bp+text_res]
    or      ax, word ptr [bp+text_res+2]
    jnz     LAB_274b_1fb6
    jmp     near ptr LAB_274b_20a4
LAB_274b_1fb6:
    sub     ax, ax
    push    ax
    push    word ptr [bp+colour_text]
    call    far ptr font_set_colour
    add     sp, 0x4
    push    word ptr [bp+text_res+2]
    push    word ptr [bp+text_res]
    mov     ax, offset g_res_id
    push    ax
    push    cs
    call    near ptr copy_string
    add     sp, 0x6
    mov     word ptr [bp+var_5C], 0x1
    mov     ax, offset g_res_id
    push    ax                                 ; char *
    call    far ptr _strlen
    add     sp, 0x2
    mov     word ptr [bp+var_62], ax
    mov     word ptr [bp+var_8], 0x0
    jmp     LAB_274b_2000
LAB_274b_1ff0:
    mov     bx, word ptr [bp+var_8]
    cmp     byte ptr [bx+g_res_id], 0x5d
    jnz     LAB_274b_1ffd
    inc     word ptr [bp+var_5C]
LAB_274b_1ffd:
    inc     word ptr [bp+var_8]
LAB_274b_2000:
    mov     ax, word ptr [bp+var_62]
    cmp     word ptr [bp+var_8], ax
    jl      LAB_274b_1ff0
    mov     word ptr [bp+var_2], 0x0
    mov     word ptr [bp+var_6], 0x0
    mov     ax, word ptr [bp+y2_]
    mov     dx, word ptr [bp+var_5C]
    mov     cl, 0x3
    shl     dx, cl
    sub     ax, dx
    cwd
    sub     ax, dx
    sar     ax, 0x1
    inc     ax
    mov     word ptr [bp+var_60], ax
    mov     word ptr [bp+var_8], 0x0
    jmp     LAB_274b_203f
LAB_274b_202e:
    mov     bx, word ptr [bp+var_2]
    add     bx, bp
    mov     al, byte ptr [bp+var_4]
    mov     byte ptr [bx-0x5a], al
    inc     word ptr [bp+var_2]
LAB_274b_203c:
    inc     word ptr [bp+var_8]
LAB_274b_203f:
    mov     ax, word ptr [bp+var_62]
    inc     ax
    cmp     ax, word ptr [bp+var_8]
    jle     LAB_274b_20a4
    mov     bx, word ptr [bp+var_8]
    mov     al, byte ptr [bx+g_res_id]
    mov     byte ptr [bp+var_4], al
    cmp     al, 0x5d
    jz      LAB_274b_205a
    or      al, al
    jnz     LAB_274b_202e
LAB_274b_205a:
    mov     bx, word ptr [bp+var_2]
    add     bx, bp
    mov     byte ptr [bx-0x5a], 0x0
    mov     ax, word ptr [bp+var_6]
    mov     cl, 0x3
    shl     ax, cl
    add     ax, word ptr [bp+y1_]
    add     ax, word ptr [bp+var_60]
    push    ax
    lea     ax, [bp+var_5A]
    push    ax
    call    far ptr font_op2
    add     sp, 0x2
    mov     cx, ax
    mov     ax, word ptr [bp+x2_]
    sub     ax, cx
    cwd
    sub     ax, dx
    sar     ax, 0x1
    add     ax, word ptr [bp+x1_]
    push    ax
    lea     ax, [bp+var_5A]
    push    ax
    call    far ptr font_draw_text             ; when nop instead of this call = no text on buttons
    add     sp, 0x6
    inc     word ptr [bp+var_6]
    mov     word ptr [bp+var_2], 0x0
    jmp     LAB_274b_203c
    db 0x90
LAB_274b_20a4:
    pop     si
    pop     di
    mov     sp, bp
    pop     bp
    retf
draw_button_asm_ endp

; void __cdecl16far shape3d_init_shape(void * in_res, SHAPE3D * out_shape)
shape3d_init_shape_asm_ proc far
    in_res     = dword ptr   6
    out_shape  = word ptr   10

    push    bp
    mov     bp, sp
    push    si
    mov     bx, word ptr [bp+out_shape]
    les     si, [bp+in_res]
    mov     al, byte ptr es:[si]
    sub     ah, ah
    mov     word ptr [bx], ax
    mov     bx, word ptr [bp+out_shape]
    les     si, [bp+in_res]
    mov     al, byte ptr es:[si+0x1]
    mov     word ptr [bx+0x6], ax
    mov     bx, word ptr [bp+out_shape]
    les     si, [bp+in_res]
    mov     al, byte ptr es:[si+0x2]
    mov     byte ptr [bx+0x8], al
    mov     bx, word ptr [bp+out_shape]
    mov     ax, word ptr [bp+in_res]
    mov     dx, word ptr [bp+in_res+2]
    add     ax, 0x4
    mov     word ptr [bx+0x2], ax
    mov     word ptr [bx+0x4], dx
    mov     bx, word ptr [bp+out_shape]
    mov     si, bx
    mov     ax, word ptr [si]
    mov     cx, ax
    shl     ax, 0x1
    add     ax, cx
    shl     ax, 0x1
    add     ax, word ptr [bp+in_res]
    mov     dx, word ptr [bp+in_res+2]
    add     ax, 0x4
    mov     word ptr [bx+0xe], ax
    mov     word ptr [bx+0x10], dx
    mov     bx, word ptr [bp+out_shape]
    mov     si, bx
    mov     ax, word ptr [si+0x6]
    shl     ax, 0x1
    shl     ax, 0x1
    mov     cx, word ptr [si]
    mov     dx, cx
    shl     cx, 0x1
    add     cx, dx
    shl     cx, 0x1
    add     ax, cx
    add     ax, word ptr [bp+in_res]
    mov     dx, word ptr [bp+in_res+2]
    add     ax, 0x4
    mov     word ptr [bx+0x12], ax
    mov     word ptr [bx+0x14], dx
    mov     bx, word ptr [bp+out_shape]
    mov     si, bx
    mov     ax, word ptr [si+0x6]
    mov     cl, 0x3
    shl     ax, cl
    mov     cx, word ptr [si]
    mov     dx, cx
    shl     cx, 0x1
    add     cx, dx
    shl     cx, 0x1
    add     ax, cx
    add     ax, word ptr [bp+in_res]
    mov     dx, word ptr [bp+in_res+2]
    add     ax, 0x4
    mov     word ptr [bx+0xa], ax
    mov     word ptr [bx+0xc], dx
    pop     si
    pop     bp
    retf
shape3d_init_shape_asm_ endp

; int __cdecl16far font_op2_alt(char * str_)
font_op2_alt_asm_ proc far
    str_       = word ptr    6

    push    bp
    mov     bp, sp
    push    word ptr [bp+str_]
    call    far ptr font_op2
    add     sp, 0x2
    sub     ax, 0x140
    neg     ax
    cwd
    sub     ax, dx
    sar     ax, 0x1
    pop     bp
    retf
font_op2_alt_asm_ endp

; int __cdecl16far sprite_blit_to_video(SPRITE * sprite_, int unk)
sprite_blit_to_video_asm_ proc far
    sprite_    = dword ptr   6
    unk        = word ptr   10

    push    bp
    mov     bp, sp
    sub     sp, 0x4
    push    di
    push    si
    push    cs
    call    near ptr sprite_copy_2_to_1_2
    push    cs
    call    near ptr mouse_draw_opaque_check
    cmp     word ptr [bp+unk], -0x2
    jnz     LAB_274b_21a4
    les     bx, [bp+sprite_]
    push    word ptr es:[bx+0x2]
    push    word ptr es:[bx]
    call    far ptr sprite_putimage
    add     sp, 0x4
LAB_274b_2198:
    push    cs
    call    near ptr mouse_draw_transparent_check
    sub     ax, ax
    pop     si
    pop     di
    mov     sp, bp
    pop     bp
    retf
LAB_274b_21a4:
    mov     ax, word ptr [bp+unk]
    sub     si, si
    jmp     LAB_274b_21c0
    db 0x90
LAB_274b_21ac:
    push    si
    les     bx, [bp+sprite_]
    push    word ptr es:[bx+0x2]
    push    word ptr es:[bx]
    call    far ptr sprite_1_unk3
    add     sp, 0x6
    inc     si
LAB_274b_21c0:
    cmp     si, 0x4
    jge     LAB_274b_2198
    push    cs
    call    near ptr timer_get_delta_alt
    push    ax
    push    cs
    call    near ptr input_do_checking
    add     sp, 0x2
    mov     di, ax
    or      di, di
    jz      LAB_274b_21ac
    push    cs
    call    near ptr sprite_copy_2_to_1_2
    les     bx, [bp+sprite_]
    push    word ptr es:[bx+0x2]
    push    word ptr es:[bx]
    call    far ptr sprite_putimage
    add     sp, 0x4
    push    cs
    call    near ptr mouse_draw_transparent_check
    mov     ax, di
    pop     si
    pop     di
    mov     sp, bp
    pop     bp
    retf
sprite_blit_to_video_asm_ endp
    db 0x90

; void __cdecl16far show_waiting(void)
show_waiting_asm_ proc far
    sub     ax, ax
    push    ax
    push    ax
    push    word ptr [dialogarg2]
    push    word ptr [waitflag]
    mov     ax, 0xffff
    push    ax
    mov     ax, offset aWai
    push    ax
    push    word ptr [mainresptr+2]
    push    word ptr [mainresptr]
    push    cs
    call    near ptr locate_text_res
    add     sp, 0x6
    push    dx
    push    ax
    sub     ax, ax
    push    ax
    push    ax
    push    cs
    call    near ptr show_dialog
    add     sp, 0x12
    push    cs
    call    near ptr mouse_draw_opaque_check
    retf
show_waiting_asm_ endp
    db 0x90

; void __cdecl16far string_fmt_int(char * buf, int value, int width_, int pad_zero)
string_fmt_int_asm_ proc far
    buf        = word ptr    6
    value      = word ptr    8
    width_     = word ptr   10
    pad_zero   = word ptr   12

    push    bp
    mov     bp, sp
    sub     sp, 0x4
    push    di
    push    si
    mov     ax, 0xa
    push    ax
    push    word ptr [bp+buf]                  ; char *
    push    word ptr [bp+value]                ; int
    call    far ptr _itoa
    add     sp, 0x6
    cmp     word ptr [bp+pad_zero], 0x0
    jz      LAB_274b_229d
    sub     si, si
    jmp     LAB_274b_2255
LAB_274b_2254:
    inc     si
LAB_274b_2255:
    mov     bx, word ptr [bp+buf]
    cmp     byte ptr [bx+si], 0x0
    jnz     LAB_274b_2254
    jmp     LAB_274b_2298
    db 0x90
LAB_274b_2260:
    cmp     word ptr [bp+pad_zero], si
    jge     LAB_274b_227a
    sub     di, di
    jmp     LAB_274b_2273
    db 0x90
LAB_274b_226a:
    mov     bx, word ptr [bp+buf]
    mov     al, byte ptr [bx+di+0x1]
    mov     byte ptr [bx+di], al
    inc     di
LAB_274b_2273:
    cmp     di, si
    jl      LAB_274b_226a
    dec     si
    jmp     LAB_274b_2298
LAB_274b_227a:
    cmp     word ptr [bp+pad_zero], si
    jle     LAB_274b_2298
    mov     di, si
    jmp     LAB_274b_228d
    db 0x90
LAB_274b_2284:
    mov     bx, word ptr [bp+buf]
    mov     al, byte ptr [bx+di]
    mov     byte ptr [bx+di+0x1], al
    dec     di
LAB_274b_228d:
    or      di, di
    jge     LAB_274b_2284
    mov     bx, word ptr [bp+buf]
    mov     byte ptr [bx], 0x20
    inc     si
LAB_274b_2298:
    cmp     word ptr [bp+pad_zero], si
    jnz     LAB_274b_2260
LAB_274b_229d:
    cmp     word ptr [bp+width_], 0x0
    jz      LAB_274b_22bb
    sub     si, si
    jmp     LAB_274b_22b3
    db 0x90
LAB_274b_22a8:
    mov     bx, word ptr [bp+buf]
    mov     ax, si
    inc     si
    add     bx, ax
    mov     byte ptr [bx], 0x30
LAB_274b_22b3:
    mov     bx, word ptr [bp+buf]
    cmp     byte ptr [bx+si], 0x20
    jz      LAB_274b_22a8
LAB_274b_22bb:
    pop     si
    pop     di
    mov     sp, bp
    pop     bp
    retf
string_fmt_int_asm_ endp
    db 0x90

; undefined __cdecl16far sub_29772(void)
sub_29772_asm_ proc far
    mov     word ptr [word_45D1C], 0x0
    mov     word ptr [word_45D06], 0x0
    mov     word ptr [idle_counter], 0x0
    retf
sub_29772_asm_ endp
    db 0x90

; int __cdecl16far mouse_timer_sprite_unk(int param_1, int param_2, int param_3, int param_4, int param_5, word param_6, word param_7)
mouse_timer_sprite_unk_asm_ proc far
    var_6      = word ptr   -6
    param_1    = word ptr    6
    param_2    = word ptr    8
    param_3    = word ptr   10
    param_4    = word ptr   12
    param_5    = word ptr   14
    param_6    = word ptr   16
    param_7    = word ptr   18

    push    bp
    mov     bp, sp
    sub     sp, 0x6
    push    di
    push    si
    push    cs
    call    near ptr timer_get_delta_alt
    mov     si, ax
    add     word ptr [word_45D1C], si
    jmp     LAB_274b_22ef
LAB_274b_22ea:
    sub     word ptr [word_45D1C], 0x3c
LAB_274b_22ef:
    cmp     word ptr [word_45D1C], 0x3c
    jg      LAB_274b_22ea
    cmp     word ptr [word_45D1C], 0x1e
    jle     LAB_274b_2302
    mov     di, word ptr [bp+param_6]
    jmp     LAB_274b_2305
LAB_274b_2302:
    mov     di, word ptr [bp+param_7]
LAB_274b_2305:
    cmp     word ptr [word_45D06], di
    jz      LAB_274b_2344
    mov     word ptr [word_45D06], di
    push    cs
    call    near ptr mouse_draw_opaque_check
    mov     ax, word ptr [bp+param_1]
    shl     ax, 0x1
    mov     word ptr [bp+var_6], ax
    push    di
    mov     bx, ax
    add     bx, word ptr [bp+param_5]
    push    word ptr [bx]
    mov     bx, ax
    add     bx, word ptr [bp+param_3]
    push    word ptr [bx]
    mov     bx, ax
    add     bx, word ptr [bp+param_4]
    push    word ptr [bx]
    mov     bx, ax
    add     bx, word ptr [bp+param_2]
    push    word ptr [bx]
    call    far ptr sprite_1_unk4
    add     sp, 0xa
    push    cs
    call    near ptr mouse_draw_transparent_check
LAB_274b_2344:
    mov     ax, si
    pop     si
    pop     di
    mov     sp, bp
    pop     bp
    retf
mouse_timer_sprite_unk_asm_ endp

; void __cdecl16far file_load_audiores(char * vce_filename, char * sng_filename, char * res_id)
file_load_audiores_asm_ proc far
    var_4      = word ptr   -4
    var_2      = word ptr   -2
    vce_filename = word ptr    6
    sng_filename = word ptr    8
    res_id     = word ptr   10

    push    bp
    mov     bp, sp
    sub     sp, 0x4
    push    word ptr [bp+sng_filename]         ; char *
    mov     ax, 0x5
    push    ax                                 ; int
    push    cs
    call    near ptr file_load_resource
    add     sp, 0x4
    mov     word ptr [voicefileptr], ax
    mov     word ptr [voicefileptr+2], dx
    push    word ptr [bp+vce_filename]         ; char *
    mov     ax, 0x4
    push    ax                                 ; int
    push    cs
    call    near ptr file_load_resource
    add     sp, 0x4
    mov     word ptr [songfileptr], ax
    mov     word ptr [songfileptr+2], dx
    push    word ptr [bp+res_id]               ; arg_4 is a string, e.g "TITL"
    push    word ptr [voicefileptr+2]
    push    word ptr [voicefileptr]
    push    dx
    push    ax
    call    far ptr init_audio_resources
    add     sp, 0xa
    mov     word ptr [bp+var_4], ax
    mov     word ptr [bp+var_2], dx
    push    dx
    push    ax
    call    far ptr load_audio_finalize
    mov     byte ptr [is_audioloaded], 0x1
    mov     sp, bp
    pop     bp
    retf
file_load_audiores_asm_ endp
    db 0x90

; void __cdecl16far audio_unload(void)
audio_unload_asm_ proc far
    mov     ax, 0x2
    push    ax
    call    far ptr audio_driver_func3F
    add     sp, 0x2
    push    word ptr [songfileptr+2]
    push    word ptr [songfileptr]
    call    far ptr mmgr_free
    add     sp, 0x4
    push    word ptr [voicefileptr+2]
    push    word ptr [voicefileptr]
    call    far ptr mmgr_free
    add     sp, 0x4
    mov     byte ptr [is_audioloaded], 0x0
    retf
audio_unload_asm_ endp

; void __cdecl16far font_set_fontdef2(void * data)
font_set_fontdef2_asm_ proc far
    data       = dword ptr   6

    push    bp
    mov     bp, sp
    push    word ptr [bp+data+2]
    push    word ptr [bp+data]
    call    far ptr set_fontdefseg
    add     sp, 0x4
    les     bx, [bp+data]
    mov     ax, word ptr es:[bx+0xe]
    mov     word ptr [fontdef_unk_0E], ax
    pop     bp
    retf
font_set_fontdef2_asm_ endp
    db 0x90

; void __cdecl16far font_set_fontdef(void)
font_set_fontdef_asm_ proc far
    push    word ptr [fontdefptr+2]
    push    word ptr [fontdefptr]
    push    cs
    call    near ptr font_set_fontdef2
    add     sp, 0x4
    retf
font_set_fontdef_asm_ endp
; Formats the given frame's timestamp as M:SS[.cc].

; void __cdecl16far format_frame_as_string(char * buf, uint frames, int centiseconds)
format_frame_as_string_asm_ proc far
    var_16     = word ptr  -22
    var_12     = byte ptr  -18
    buf        = word ptr    6
    frames     = word ptr    8
    centiseconds = word ptr   10

    push    bp
    mov     bp, sp
    sub     sp, 0x18
    push    di
    push    si
    mov     ax, 0x3c
    imul    word ptr [framespersec]
    mov     word ptr [bp+var_16], ax
    mov     ax, word ptr [bp+frames]
    sub     dx, dx
    div     word ptr [bp+var_16]
    mov     si, ax
    mov     ax, word ptr [bp+var_16]
    imul    si
    sub     word ptr [bp+frames], ax
    mov     ax, word ptr [bp+frames]
    sub     dx, dx
    div     word ptr [framespersec]
    mov     di, ax
    mov     ax, word ptr [framespersec]
    imul    di
    sub     word ptr [bp+frames], ax
    mov     ax, 0x2
    push    ax                                 ; int
    sub     ax, ax
    push    ax                                 ; int
    push    si
    lea     ax, [bp+var_12]
    push    ax                                 ; char *
    push    cs
    call    near ptr string_fmt_int
    add     sp, 0x8
    lea     ax, [bp+var_12]
    push    ax
    push    word ptr [bp+buf]                  ; char *
    call    far ptr _strcpy
    add     sp, 0x4
    mov     ax, offset aColon
    push    ax
    push    word ptr [bp+buf]                  ; char *
    call    far ptr _strcat
    add     sp, 0x4
    mov     ax, 0x2
    push    ax                                 ; int
    mov     ax, 0x1
    push    ax                                 ; int
    push    di
    lea     ax, [bp+var_12]
    push    ax                                 ; char *
    push    cs
    call    near ptr string_fmt_int
    add     sp, 0x8
    lea     ax, [bp+var_12]
    push    ax
    push    word ptr [bp+buf]                  ; char *
    call    far ptr _strcat
    add     sp, 0x4
    cmp     word ptr [bp+centiseconds], 0x0
    jz      LAB_274b_24d8
    mov     ax, offset aDot
    push    ax
    push    word ptr [bp+buf]                  ; char *
    call    far ptr _strcat
    add     sp, 0x4
    mov     ax, 0x2
    push    ax                                 ; int
    mov     ax, 0x1
    push    ax                                 ; int
    mov     ax, 0x64
    cwd
    mov     cx, word ptr [framespersec]
    idiv    cx
    mul     word ptr [bp+frames]
    push    ax
    lea     ax, [bp+var_12]
    push    ax                                 ; char *
    push    cs
    call    near ptr string_fmt_int
    add     sp, 0x8
    lea     ax, [bp+var_12]
    push    ax
    push    word ptr [bp+buf]                  ; char *
    call    far ptr _strcat
    add     sp, 0x4
LAB_274b_24d8:
    pop     si
    pop     di
    mov     sp, bp
    pop     bp
    retf
format_frame_as_string_asm_ endp

; int __cdecl16far get_super_random(void)
get_super_random_asm_ proc far
    var_4      = word ptr   -4

    push    bp
    mov     bp, sp
    sub     sp, 0x4
    push    di
    push    si
    call    far ptr _rand
    mov     di, ax
    call    far ptr get_kevinrandom
    mov     word ptr [bp+var_4], ax
    call    far ptr timer_get_counter
    add     ax, word ptr [bp+var_4]
    add     ax, di
    add     ax, word ptr [gState_frame]
    mov     si, ax
    or      si, si
    jge     LAB_274b_2512
    neg     ax
    pop     si
    pop     di
    mov     sp, bp
    pop     bp
    retf
    db 0x90
LAB_274b_2512:
    mov     ax, si
    pop     si
    pop     di
    mov     sp, bp
    pop     bp
    retf
get_super_random_asm_ endp

; void * __cdecl16far file_load_resource(int type_, char * filename)
file_load_resource_asm_ proc far
    var_4      = word ptr   -4
    var_2      = word ptr   -2
    type_      = word ptr    6
    filename   = word ptr    8

    push    bp
    mov     bp, sp
    sub     sp, 0x4
LAB_274b_2520:
    mov     ax, word ptr [bp+type_]
    cmp     ax, 0x8
    jbe     LAB_274b_252b
    jmp     near ptr LAB_274b_25b0
LAB_274b_252b:
    add     ax, ax
    xchg    ax, bx
    jmp     word ptr cs:[bx+off_29A4E]
    db 0x90
LAB_274b_2534:
    push    word ptr [bp+0x8]
    call    far ptr file_load_binary_nofatal
LAB_274b_253c:
    add     sp, 0x2
    mov     word ptr [bp-0x4], ax
    mov     word ptr [bp-0x2], dx
    jmp     LAB_274b_25b0
    db 0x90
LAB_274b_2548:
    push    word ptr [bp+0x8]
    call    far ptr file_load_binary_nofatal
LAB_274b_2550:
    add     sp, 0x2
    mov     sp, bp
    pop     bp
    retf
    db 0x90
LAB_274b_2558:
    push    word ptr [bp+0x8]
    call    far ptr file_decomp_nofatal
    jmp     LAB_274b_2550
LAB_274b_2562:
    push    word ptr [bp+0x8]
    call    far ptr file_load_shape2d_nofatal_thunk
    jmp     LAB_274b_253c
LAB_274b_256c:
    push    word ptr [bp+0x8]
    call    far ptr file_load_shape2d_res_nofatal_thunk
    jmp     LAB_274b_253c
LAB_274b_2576:
    push    word ptr [bp+0x8]                  ; char *
    call    far ptr load_song_file
    jmp     LAB_274b_253c
LAB_274b_2580:
    push    word ptr [bp+0x8]                  ; char *
    call    far ptr load_voice_file
    jmp     LAB_274b_253c
LAB_274b_258a:
    push    word ptr [bp+0x8]                  ; char *
    call    far ptr load_sfx_file
    jmp     LAB_274b_253c
LAB_274b_2594:
    push    word ptr [bp+0x8]
    call    far ptr file_load_shape2d_nofatal2
    jmp     LAB_274b_253c
off_29A4E:
    dw LAB_274b_2534
    dw LAB_274b_2548
    dw LAB_274b_2562
    dw LAB_274b_256c
    dw LAB_274b_2576
    dw LAB_274b_2580
    dw LAB_274b_258a
    dw LAB_274b_2558
    dw LAB_274b_2594
LAB_274b_25b0:
    mov     ax, word ptr [bp+var_4]
    or      ax, word ptr [bp+var_2]
    jz      LAB_274b_25c2
    mov     ax, word ptr [bp+var_4]
    mov     dx, word ptr [bp+var_2]
    mov     sp, bp
    pop     bp
    retf
LAB_274b_25c2:
    push    cs
    call    near ptr do_dea_textres
    cmp     ax, 0x2
    jz      LAB_274b_25ce
    jmp     near ptr LAB_274b_2520
LAB_274b_25ce:
    sub     ax, ax
    cwd
    mov     sp, bp
    pop     bp
    retf
file_load_resource_asm_ endp
    db 0x90

; word __cdecl16far highscore_write_a_op(int param_1, undefined2 param_2, undefined2 param_3, undefined2 param_4)
highscore_write_a_op_asm_ proc far
    var_4      = word ptr   -4
    var_2      = word ptr   -2
    param_1    = word ptr    6
    param_2    = word ptr    8
    param_3    = word ptr   10
    param_4    = word ptr   12

    push    bp
    mov     bp, sp
    sub     sp, 0x4
LAB_274b_25dc:
    mov     ax, word ptr [bp+param_1]
    cmp     ax, 0x9
    jz      LAB_274b_25ec
    cmp     ax, 0xa
    jz      LAB_274b_2616
    jmp     LAB_274b_2603
    db 0x90
LAB_274b_25ec:
    push    word ptr [bp+param_4]
    push    word ptr [bp+param_3]
    push    word ptr [bp+param_2]
    call    far ptr file_read_nofatal
    add     sp, 0x6
    mov     word ptr [bp+var_4], ax
    mov     word ptr [bp+var_2], dx
LAB_274b_2603:
    mov     ax, word ptr [bp+var_4]
    or      ax, word ptr [bp+var_2]
    jz      LAB_274b_262c
    mov     ax, word ptr [bp+var_4]
    mov     dx, word ptr [bp+var_2]
    mov     sp, bp
    pop     bp
    retf
    db 0x90
LAB_274b_2616:
    push    word ptr [bp+param_4]
    push    word ptr [bp+param_3]
    push    word ptr [bp+param_2]
    call    far ptr file_read_nofatal
    add     sp, 0x6
    mov     sp, bp
    pop     bp
    retf
    db 0x90
LAB_274b_262c:
    push    cs
    call    near ptr do_dea_textres
    cmp     ax, 0x2
    jnz     LAB_274b_25dc
    sub     ax, ax
    cwd
    mov     sp, bp
    pop     bp
    retf
highscore_write_a_op_asm_ endp

; void __cdecl16far input_push_status(void)
input_push_status_asm_ proc far
    push    si
    mov     al, byte ptr [byte_3EBD8]
    cbw
    mov     si, ax
    mov     al, byte ptr [byte_3B8F7]
    mov     byte ptr [si+byte_45D0C], al
    mov     al, byte ptr [kbormouse]
    mov     byte ptr [si+byte_45D14], al
    inc     byte ptr [byte_3EBD8]
    pop     si
    retf
input_push_status_asm_ endp
    db 0x90

; void __cdecl16far input_pop_status(void)
input_pop_status_asm_ proc far
    push    si
    cmp     byte ptr [byte_3EBD8], 0x0
    jz      LAB_274b_2680
    dec     byte ptr [byte_3EBD8]
    mov     al, byte ptr [byte_3EBD8]
    cbw
    mov     si, ax
    mov     al, byte ptr [si+byte_45D0C]
    mov     byte ptr [byte_3B8F7], al
    mov     al, byte ptr [si+byte_45D14]
    mov     byte ptr [kbormouse], al
    or      al, al
    jnz     LAB_274b_2680
    push    cs
    call    near ptr mouse_draw_opaque_check
LAB_274b_2680:
    pop     si
    retf
input_pop_status_asm_ endp

; void __cdecl16far do_joy_restext(void)
do_joy_restext_asm_ proc far
    var_56     = word ptr  -86
    var_54     = word ptr  -84
    var_52     = word ptr  -82
    var_50     = word ptr  -80
    var_4E     = word ptr  -78
    var_4C     = word ptr  -76
    var_4A     = word ptr  -74
    var_48     = word ptr  -72
    var_46     = word ptr  -70
    var_44     = word ptr  -68
    var_42     = word ptr  -66
    var_40     = word ptr  -64
    var_3E     = word ptr  -62
    var_3C     = word ptr  -60
    var_3A     = word ptr  -58
    var_38     = word ptr  -56
    var_36     = word ptr  -54
    var_34     = word ptr  -52
    var_32     = word ptr  -50
    var_30     = word ptr  -48
    var_2E     = word ptr  -46
    var_2C     = word ptr  -44
    var_2A     = word ptr  -42
    var_28     = word ptr  -40
    var_26     = word ptr  -38
    var_24     = word ptr  -36
    var_22     = word ptr  -34
    var_1C     = word ptr  -28
    var_18     = word ptr  -24
    var_14     = word ptr  -20
    var_12     = word ptr  -18
    var_C      = word ptr  -12
    var_A      = byte ptr  -10

    push    bp
    mov     bp, sp
    sub     sp, 0x56
    push    di
    push    si
    push    cs
    call    near ptr input_push_status
    mov     word ptr [word_3F88E], 0x1
    call    far ptr audio_unk
    sub     ax, ax
    push    ax
    lea     ax, [bp+var_2E]
    push    ax
    push    word ptr [dialogarg2]
    mov     ax, 0xffff
    push    ax
    push    ax
    mov     ax, offset aJoy
    push    ax
    push    word ptr [mainresptr+2]
    push    word ptr [mainresptr]
    push    cs
    call    near ptr locate_text_res
    add     sp, 0x6
    push    dx
    push    ax
    mov     ax, 0x1
    push    ax
    mov     ax, 0x3
    push    ax
    push    cs
    call    near ptr show_dialog
    add     sp, 0x12
    or      ax, ax
    jg      LAB_274b_26d4
    jmp     near ptr LAB_274b_28c6
LAB_274b_26d4:
    mov     word ptr [bp+var_C], 0x0
LAB_274b_26d9:
    mov     bx, word ptr [bp+var_C]
    add     bx, bp
    mov     byte ptr [bx-0xa], 0x0
    inc     word ptr [bp+var_C]
    cmp     word ptr [bp+var_C], 0x9
    jl      LAB_274b_26d9
    mov     byte ptr [byte_3FE00], 0x1
    push    cs
    call    near ptr mouse_draw_opaque_check
    push    word ptr [dialogarg2]
    mov     ax, word ptr [bp+var_14]
    sub     ax, word ptr [bp+var_28]
    sub     ax, 0x8
    push    ax
    mov     ax, 0x1
    push    ax
    push    word ptr [bp+var_28]
    mov     ax, word ptr [bp+var_2A]
    sub     ax, 0x4
    push    ax
    call    far ptr sprite_1_fill_rect
    add     sp, 0xa
    push    word ptr [dialogarg2]
    mov     ax, word ptr [bp+var_14]
    sub     ax, word ptr [bp+var_28]
    sub     ax, 0x8
    push    ax
    mov     ax, 0x1
    push    ax
    push    word ptr [bp+var_24]
    mov     ax, word ptr [bp+var_26]
    sub     ax, 0x4
    push    ax
    call    far ptr sprite_1_fill_rect
    add     sp, 0xa
    push    word ptr [dialogarg2]
    mov     ax, 0x1
    push    ax
    mov     ax, word ptr [bp+var_22]
    sub     ax, word ptr [bp+var_2E]
    push    ax
    mov     ax, word ptr [bp+var_1C]
    sub     ax, 0x4
    push    ax
    push    word ptr [bp+var_2E]
    call    far ptr sprite_1_fill_rect
    add     sp, 0xa
    push    word ptr [dialogarg2]
    mov     ax, 0x1
    push    ax
    mov     ax, word ptr [bp+var_22]
    sub     ax, word ptr [bp+var_2E]
    push    ax
    mov     ax, word ptr [bp+var_18]
    sub     ax, 0x4
    push    ax
    push    word ptr [bp+var_2E]
    call    far ptr sprite_1_fill_rect
    add     sp, 0xa
    mov     ax, word ptr [bp+var_2A]
    mov     word ptr [bp+var_40], ax
    mov     word ptr [bp+var_3E], ax
    mov     word ptr [bp+var_36], ax
    mov     ax, word ptr [bp+var_26]
    mov     word ptr [bp+var_3C], ax
    mov     word ptr [bp+var_3A], ax
    mov     word ptr [bp+var_38], ax
    mov     ax, word ptr [bp+var_2E]
    mov     word ptr [bp+var_34], ax
    mov     word ptr [bp+var_32], ax
    mov     word ptr [bp+var_30], ax
    mov     ax, word ptr [bp+var_1C]
    mov     word ptr [bp+var_54], ax
    mov     word ptr [bp+var_4E], ax
    mov     word ptr [bp+var_46], ax
    mov     ax, word ptr [bp+var_28]
    mov     word ptr [bp+var_52], ax
    mov     word ptr [bp+var_50], ax
    mov     word ptr [bp+var_44], ax
    mov     ax, word ptr [bp+var_18]
    mov     word ptr [bp+var_4C], ax
    mov     word ptr [bp+var_4A], ax
    mov     word ptr [bp+var_48], ax
    mov     ax, word ptr [bp+var_2A]
    sub     ax, word ptr [bp+var_2E]
    sub     ax, 0x8
    mov     word ptr [bp+var_12], ax
    mov     ax, word ptr [bp+var_1C]
    sub     ax, word ptr [bp+var_2C]
    sub     ax, 0x8
    mov     word ptr [bp+var_42], ax
    mov     si, 0xffff
    call    far ptr sub_307B4
LAB_274b_27e6:
    call    far ptr kb_read_char
    or      ax, ax
    jz      LAB_274b_27f8
LAB_274b_27ef:
    mov     word ptr [bp+var_C], 0x0
    jmp     LAB_274b_2875
    db 0x90
    db 0x90
LAB_274b_27f8:
    call    far ptr get_joy_flags
    mov     di, ax
    test    di, 0x30
    jnz     LAB_274b_27ef
    push    di
    call    far ptr sub_307D2
    add     sp, 0x2
    mov     di, ax
    cmp     di, si
    jz      LAB_274b_27e6
    mov     word ptr [bp+var_C], 0x0
LAB_274b_2819:
    mov     ax, word ptr [bp+var_C]
    shl     ax, 0x1
    add     ax, bp
    mov     word ptr [bp+var_56], ax
    push    word ptr [word_3EB90]
    push    word ptr [bp+var_42]
    push    word ptr [bp+var_12]
    mov     bx, ax
    push    word ptr [bx-0x54]
    push    word ptr [bx-0x40]
    call    far ptr sprite_1_fill_rect
    add     sp, 0xa
    inc     word ptr [bp+var_C]
    cmp     word ptr [bp+var_C], 0x9
    jl      LAB_274b_2819
    mov     ax, di
    shl     ax, 0x1
    add     ax, bp
    mov     word ptr [bp+var_56], ax
    push    word ptr [dialog_fnt_colour]
    push    word ptr [bp+var_42]
    push    word ptr [bp+var_12]
    mov     bx, ax
    push    word ptr [bx-0x54]
    push    word ptr [bx-0x40]
    call    far ptr sprite_1_fill_rect
    add     sp, 0xa
    mov     si, di
    mov     byte ptr [bp+di-0xa], 0x1
    jmp     near ptr LAB_274b_27e6
LAB_274b_2872:
    inc     word ptr [bp+var_C]
LAB_274b_2875:
    cmp     word ptr [bp+var_C], 0x9
    jge     LAB_274b_288a
    mov     bx, word ptr [bp+var_C]
    add     bx, bp
    mov     al, byte ptr [bx-0xa]
    and     byte ptr [byte_3FE00], al
    jmp     LAB_274b_2872
    db 0x90
LAB_274b_288a:
    push    cs
    call    near ptr sub_275C6
    cmp     byte ptr [byte_3FE00], 0x0
    jnz     LAB_274b_28cb
    sub     ax, ax
    push    ax
    push    ax
    push    word ptr [dialogarg2]
    mov     ax, 0xffff
    push    ax
    push    ax
    mov     ax, offset aJox
    push    ax
    push    word ptr [mainresptr+2]
    push    word ptr [mainresptr]
    push    cs
    call    near ptr locate_text_res
    add     sp, 0x6
    push    dx
    push    ax
    mov     ax, 0x1
    push    ax
    push    ax
    push    cs
    call    near ptr show_dialog
    add     sp, 0x12
    jmp     LAB_274b_28cb
    db 0x90
LAB_274b_28c6:
    mov     byte ptr [byte_3FE00], 0x0
LAB_274b_28cb:
    call    far ptr kb_check
    mov     byte ptr [byte_3B8F2], 0x0
    call    far ptr sub_372F4
    mov     word ptr [word_3F88E], 0x0
    push    cs
    call    near ptr input_pop_status
    pop     si
    pop     di
    mov     sp, bp
    pop     bp
    retf
do_joy_restext_asm_ endp

; void __cdecl16far do_key_restext(void)
do_key_restext_asm_ proc far
    push    cs
    call    near ptr input_push_status
    mov     word ptr [word_3F88E], 0x1
    call    far ptr audio_unk
    sub     ax, ax
    push    ax
    push    ax
    push    word ptr [dialogarg2]
    mov     ax, 0xffff
    push    ax
    push    ax
    mov     ax, offset aKey
    push    ax
    push    word ptr [mainresptr+2]
    push    word ptr [mainresptr]
    push    cs
    call    near ptr locate_text_res
    add     sp, 0x6
    push    dx
    push    ax
    mov     ax, 0x1
    push    ax
    mov     ax, 0x4
    push    ax
    push    cs
    call    near ptr show_dialog
    add     sp, 0x12
    mov     byte ptr [byte_3FE00], 0x0
    mov     byte ptr [byte_3B8F2], 0x0
    mov     word ptr [word_3F88E], 0x0
    call    far ptr sub_372F4
    push    cs
    call    near ptr input_pop_status
    retf
do_key_restext_asm_ endp

; void __cdecl16far do_mou_restext(void)
do_mou_restext_asm_ proc far
    push    cs
    call    near ptr input_push_status
    mov     word ptr [word_3F88E], 0x1
    call    far ptr audio_unk
    mov     byte ptr [byte_3B8F2], 0x1
    sub     ax, ax
    push    ax
    push    ax
    push    word ptr [dialogarg2]
    mov     ax, 0xffff
    push    ax
    push    ax
    mov     ax, offset aMou
    push    ax
    push    word ptr [mainresptr+2]
    push    word ptr [mainresptr]
    push    cs
    call    near ptr locate_text_res
    add     sp, 0x6
    push    dx
    push    ax
    mov     ax, 0x1
    push    ax
    mov     ax, 0x4
    push    ax
    push    cs
    call    near ptr show_dialog
    add     sp, 0x12
    mov     word ptr [word_3F88E], 0x0
    call    far ptr sub_372F4
    push    cs
    call    near ptr input_pop_status
    retf
do_mou_restext_asm_ endp
    db 0x90

; void __cdecl16far do_pau_restext(void)
do_pau_restext_asm_ proc far
    push    cs
    call    near ptr input_push_status
    mov     word ptr [word_3F88E], 0x1
    call    far ptr audio_unk
    sub     ax, ax
    push    ax
    push    ax
    push    word ptr [dialogarg2]
    mov     ax, 0xffff
    push    ax
    push    ax
    mov     ax, offset aPau
    push    ax
    push    word ptr [mainresptr+2]
    push    word ptr [mainresptr]
    push    cs
    call    near ptr locate_text_res
    add     sp, 0x6
    push    dx
    push    ax
    mov     ax, 0x1
    push    ax
    push    ax
    push    cs
    call    near ptr show_dialog
    add     sp, 0x12
    mov     word ptr [word_3F88E], 0x0
    call    far ptr sub_372F4
    push    cs
    call    near ptr input_pop_status
    retf
do_pau_restext_asm_ endp
    db 0x90

; void __cdecl16far do_mof_restext(void)
do_mof_restext_asm_ proc far
    push    cs
    call    near ptr input_push_status
    mov     word ptr [word_3F88E], 0x1
    call    far ptr audio_toggle_flag2
    or      ax, ax
    jz      LAB_274b_2a0e
    sub     ax, ax
    push    ax
    push    ax
    push    word ptr [dialogarg2]
    mov     ax, 0xffff
    push    ax
    push    ax
    mov     ax, offset aMon
    jmp     LAB_274b_2a1e
    db 0x90
LAB_274b_2a0e:
    sub     ax, ax
    push    ax
    push    ax
    push    word ptr [dialogarg2]
    mov     ax, 0xffff
    push    ax
    push    ax
    mov     ax, offset aMof
LAB_274b_2a1e:
    push    ax
    push    word ptr [mainresptr+2]
    push    word ptr [mainresptr]
    push    cs
    call    near ptr locate_text_res
    add     sp, 0x6
    push    dx
    push    ax
    mov     ax, 0x1
    push    ax
    mov     ax, 0x4
    push    ax
    push    cs
    call    near ptr show_dialog
    add     sp, 0x12
    mov     word ptr [word_3F88E], 0x0
    push    cs
    call    near ptr input_pop_status
    retf
do_mof_restext_asm_ endp

; void __cdecl16far do_sonsof_restext(void)
do_sonsof_restext_asm_ proc far
    push    cs
    call    near ptr input_push_status
    mov     word ptr [word_3F88E], 0x1
    call    far ptr audio_toggle_flag6
    or      ax, ax
    jz      LAB_274b_2a70
    sub     ax, ax
    push    ax
    push    ax
    push    word ptr [dialogarg2]
    mov     ax, 0xffff
    push    ax
    push    ax
    mov     ax, offset aSon
    jmp     LAB_274b_2a80
    db 0x90
LAB_274b_2a70:
    sub     ax, ax
    push    ax
    push    ax
    push    word ptr [dialogarg2]
    mov     ax, 0xffff
    push    ax
    push    ax
    mov     ax, offset aSof
LAB_274b_2a80:
    push    ax
    push    word ptr [mainresptr+2]
    push    word ptr [mainresptr]
    push    cs
    call    near ptr locate_text_res
    add     sp, 0x6
    push    dx
    push    ax
    mov     ax, 0x1
    push    ax
    mov     ax, 0x4
    push    ax
    push    cs
    call    near ptr show_dialog
    add     sp, 0x12
    mov     word ptr [word_3F88E], 0x0
    push    cs
    call    near ptr input_pop_status
    retf
do_sonsof_restext_asm_ endp

; void __cdecl16far do_dos_restext(void)
do_dos_restext_asm_ proc far
    push    cs
    call    near ptr input_push_status
    mov     word ptr [word_3F88E], 0x1
    call    far ptr audio_unk
    sub     ax, ax
    push    ax
    push    ax
    push    word ptr [dialogarg2]
    mov     ax, 0xffff
    push    ax
    push    ax
    mov     ax, offset aDos_0
    push    ax
    push    word ptr [mainresptr+2]
    push    word ptr [mainresptr]
    push    cs
    call    near ptr locate_text_res
    add     sp, 0x6
    push    dx
    push    ax
    mov     ax, 0x1
    push    ax
    mov     ax, 0x2
    push    ax
    push    cs
    call    near ptr show_dialog
    add     sp, 0x12
    cmp     ax, 0x1
    jnz     LAB_274b_2af6
    call    far ptr call_exitlist2
LAB_274b_2af6:
    mov     word ptr [word_3F88E], 0x0
    call    far ptr sub_372F4
    push    cs
    call    near ptr input_pop_status
    retf
do_dos_restext_asm_ endp

; void __cdecl16far show_graphic_levels_menu(void)
show_graphic_levels_menu_asm_ proc far
    var_212    = word ptr  -530
    var_20C    = byte ptr  -524
    var_205    = byte ptr  -517
    var_204    = byte ptr  -516
    var_202    = byte ptr  -514
    var_201    = byte ptr  -513
    var_2      = byte ptr   -2

    push    bp
    mov     bp, sp
    sub     sp, 0x212
    push    di
    push    si
    push    cs
    call    near ptr input_push_status
    mov     word ptr [word_3F88E], 0x1
    call    far ptr audio_unk
    mov     ax, word ptr [framespersec2]
    mov     word ptr [bp+var_212], ax
    mov     byte ptr [bp+var_2], 0x0
LAB_274b_2b29:
    mov     ax, offset aMrl
    push    ax
    push    word ptr [mainresptr+2]
    push    word ptr [mainresptr]
    push    cs
    call    near ptr locate_text_res
    add     sp, 0x6
    push    dx
    push    ax
    lea     ax, [bp+var_202]
    push    ax
    push    cs
    call    near ptr copy_string
    add     sp, 0x6
    sub     si, si
LAB_274b_2b4c:
    mov     byte ptr [bp+si+0xfdf4], 0x0
    inc     si
    cmp     si, 0x9
    jl      LAB_274b_2b4c
    mov     bl, byte ptr [detail_level]
    sub     bh, bh
    add     bx, bp
    mov     byte ptr [bx+0xfdf4], 0x1
    mov     bx, word ptr [slow_video_mgmt]
    add     bx, bp
    mov     byte ptr [bx+0xfdf9], 0x1
    cmp     word ptr [framespersec2], 0xa
    jnz     LAB_274b_2b7e
    mov     byte ptr [bp+var_205], 0x1
    jmp     LAB_274b_2b83
    db 0x90
LAB_274b_2b7e:
    mov     byte ptr [bp+var_204], 0x1
LAB_274b_2b83:
    sub     di, di
    sub     si, si
    jmp     LAB_274b_2ba0
    db 0x90
LAB_274b_2b8a:
    inc     di
LAB_274b_2b8b:
    cmp     byte ptr [bp+di+0xfdfe], 0x5b
    jnz     LAB_274b_2b8a
    cmp     byte ptr [bp+si+0xfdf4], 0x0
    jz      LAB_274b_2b9e
    mov     byte ptr [bp+di+0xfdff], 0x2a
LAB_274b_2b9e:
    inc     di
    inc     si
LAB_274b_2ba0:
    cmp     si, 0x9
    jl      LAB_274b_2b8b
    mov     al, byte ptr [bp+var_2]
    cbw
    push    ax
    sub     ax, ax
    push    ax
    push    word ptr [performGraphColor]
    mov     ax, 0xffff
    push    ax
    push    ax
    lea     ax, [bp+var_202]
    push    ss
    push    ax
    mov     ax, 0x1
    push    ax
    mov     ax, 0x2
    push    ax
    push    cs
    call    near ptr show_dialog
    add     sp, 0x12
    mov     byte ptr [bp+var_2], al
    cbw
    cmp     ax, 0xffff
    jz      LAB_274b_2c1c
    cmp     ax, 0x5
    jz      LAB_274b_2bf4
    cmp     ax, 0x6
    jz      LAB_274b_2bfe
    cmp     ax, 0x7
    jz      LAB_274b_2c08
    cmp     ax, 0x8
    jz      LAB_274b_2c12
    cmp     ax, 0x9
    jz      LAB_274b_2c1c
    mov     byte ptr [detail_level], al
    jmp     near ptr LAB_274b_2b29
    db 0x90
LAB_274b_2bf4:
    mov     word ptr [slow_video_mgmt], 0x0
    jmp     near ptr LAB_274b_2b29
    db 0x90
LAB_274b_2bfe:
    mov     word ptr [slow_video_mgmt], 0x1
    jmp     near ptr LAB_274b_2b29
    db 0x90
LAB_274b_2c08:
    mov     word ptr [framespersec2], 0xa
    jmp     near ptr LAB_274b_2b29
    db 0x90
LAB_274b_2c12:
    mov     word ptr [framespersec2], 0x14
    jmp     near ptr LAB_274b_2b29
    db 0x90
LAB_274b_2c1c:
    mov     ax, word ptr [framespersec2]
    cmp     word ptr [bp+var_212], ax
    jz      LAB_274b_2c53
    sub     ax, ax
    push    ax
    push    ax
    push    word ptr [dialogarg2]
    mov     ax, 0xffff
    push    ax
    push    ax
    mov     ax, offset aMrs
    push    ax
    push    word ptr [mainresptr+2]
    push    word ptr [mainresptr]
    push    cs
    call    near ptr locate_text_res
    add     sp, 0x6
    push    dx
    push    ax
    mov     ax, 0x1
    push    ax
    push    ax
    push    cs
    call    near ptr show_dialog
    add     sp, 0x12
LAB_274b_2c53:
    mov     word ptr [word_3F88E], 0x0
    call    far ptr sub_372F4
    push    cs
    call    near ptr input_pop_status
    pop     si
    pop     di
    mov     sp, bp
    pop     bp
    retf
show_graphic_levels_menu_asm_ endp

; short __cdecl16far do_dea_textres(void)
do_dea_textres_asm_ proc far
    var_2      = word ptr   -2

    push    bp
    mov     bp, sp
    sub     sp, 0x2
    push    cs
    call    near ptr input_push_status
    cmp     byte ptr [g_is_busy], 0x0
    jz      LAB_274b_2cb8
    sub     ax, ax
    push    ax
    push    ax
    push    word ptr [dialogarg2]
    mov     ax, 0xffff
    push    ax
    push    ax
    mov     ax, offset aDea
    push    ax
    push    word ptr [mainresptr+2]
    push    word ptr [mainresptr]
    push    cs
    call    near ptr locate_text_res
    add     sp, 0x6
    push    dx
    push    ax
    mov     ax, 0x1
    push    ax
    mov     ax, 0x2
    push    ax
    push    cs
    call    near ptr show_dialog
    add     sp, 0x12
    mov     word ptr [bp+var_2], ax
    or      ax, ax
    jz      LAB_274b_2ce6
    mov     word ptr [bp+var_2], 0x0
    jmp     LAB_274b_2ceb
LAB_274b_2cb8:
    sub     ax, ax
    push    ax
    push    ax
    push    word ptr [dialogarg2]
    mov     ax, 0xffff
    push    ax
    push    ax
    mov     ax, offset aDer
    push    ax
    push    word ptr [mainresptr+2]
    push    word ptr [mainresptr]
    push    cs
    call    near ptr locate_text_res
    add     sp, 0x6
    push    dx
    push    ax
    mov     ax, 0x1
    push    ax
    push    ax
    push    cs
    call    near ptr show_dialog
    add     sp, 0x12
LAB_274b_2ce6:
    mov     word ptr [bp+var_2], 0x1
LAB_274b_2ceb:
    push    cs
    call    near ptr input_pop_status
    mov     ax, word ptr [bp+var_2]
    mov     sp, bp
    pop     bp
    retf
do_dea_textres_asm_ endp

; ******************************************************************************
; * dbg: checkdisk
; ******************************************************************************

; void __cdecl16far ensure_file_exists(int unk)
ensure_file_exists_asm_ proc far
    unk        = word ptr    6

    push    bp
    mov     bp, sp
    jmp     LAB_274b_2d38
    db 0x90
LAB_274b_2cfc:
    sub     ax, ax
    push    ax
    push    ax
    push    word ptr [dialogarg2]
    mov     ax, 0xffff
    push    ax
    push    ax
    mov     bx, word ptr [bp+unk]
    shl     bx, 0x1
    push    word ptr [bx+0x340e]               ; "Insert Disk A/B .. etc presskey"
    push    word ptr [mainresptr+2]
    push    word ptr [mainresptr]
    push    cs
    call    near ptr locate_text_res
    add     sp, 0x6
    push    dx
    push    ax
    mov     ax, 0x1
    push    ax
    push    ax
    push    cs
    call    near ptr show_dialog
    add     sp, 0x12
    push    cs
    call    near ptr mouse_draw_opaque_check
    mov     byte ptr [kbormouse], 0x0
LAB_274b_2d38:
    mov     bx, word ptr [bp+unk]
    shl     bx, 0x1
    push    word ptr [bx+findfilenames]
    call    far ptr file_find
    add     sp, 0x2
    or      ax, ax
    jz      LAB_274b_2cfc
    pop     bp
    retf
ensure_file_exists_asm_ endp
    db 0x90

; void __cdecl16far do_mer_restext(void)
do_mer_restext_asm_ proc far
    sub     ax, ax
    push    ax
    push    ax
    push    word ptr [dialogarg2]
    mov     ax, 0xffff
    push    ax
    push    ax
    mov     ax, offset aMer
    push    ax
    push    word ptr [mainresptr+2]
    push    word ptr [mainresptr]
    push    cs
    call    near ptr locate_text_res
    add     sp, 0x6
    push    dx
    push    ax
    mov     ax, 0x1
    push    ax
    push    ax
    push    cs
    call    near ptr show_dialog
    add     sp, 0x12
    retf
do_mer_restext_asm_ endp
    db 0x90

; ulong __cdecl16far timer_get_delta_alt(void)
timer_get_delta_alt_asm_ proc far
    call    far ptr timer_get_delta
    retf
timer_get_delta_alt_asm_ endp

; void * __cdecl16far file_load_3dres(char * filename)
file_load_3dres_asm_ proc far
    var_54     = byte ptr  -84
    var_4      = word ptr   -4
    var_2      = word ptr   -2
    filename   = word ptr    6

    push    bp
    mov     bp, sp
    sub     sp, 0x54
LAB_274b_2d8c:
    push    word ptr [bp+filename]
    lea     ax, [bp+var_54]
    push    ax                                 ; char *
    call    far ptr _strcpy
    add     sp, 0x4
    mov     ax, offset a_p3s
    push    ax
    lea     ax, [bp+var_54]
    push    ax                                 ; char *
    call    far ptr _strcat
    add     sp, 0x4
    lea     ax, [bp+var_54]
    push    ax                                 ; char *
    mov     ax, 0x7
    push    ax                                 ; int
    push    cs
    call    near ptr file_load_resource
    add     sp, 0x4
    mov     word ptr [bp+var_4], ax
    mov     word ptr [bp+var_2], dx
    or      ax, dx
    jnz     LAB_274b_2e02
    push    word ptr [bp+filename]
    lea     ax, [bp+var_54]
    push    ax                                 ; char *
    call    far ptr _strcpy
    add     sp, 0x4
    mov     ax, offset a_3sh
    push    ax
    lea     ax, [bp+var_54]
    push    ax                                 ; char *
    call    far ptr _strcat
    add     sp, 0x4
    lea     ax, [bp+var_54]
    push    ax                                 ; char *
    mov     ax, 0x1
    push    ax                                 ; int
    push    cs
    call    near ptr file_load_resource
    add     sp, 0x4
    mov     word ptr [bp+var_4], ax
    mov     word ptr [bp+var_2], dx
    or      ax, dx
    jnz     LAB_274b_2e02
    push    cs
    call    near ptr do_dea_textres
    jmp     LAB_274b_2d8c
LAB_274b_2e02:
    mov     ax, word ptr [bp+var_4]
    mov     dx, word ptr [bp+var_2]
    mov     sp, bp
    pop     bp
    retf
file_load_3dres_asm_ endp

seg008 ends
end

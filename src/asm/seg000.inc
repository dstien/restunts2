; Generated by restunts-export.py (Ghidra)
include custom.inc
include structs.inc
include seg001.def
include seg002.def
include seg003.def
include seg004.def
include seg005.def
include seg006.def
include seg007.def
include seg008.def
include seg009.def
include seg010.def
include seg011.def
include seg012.def
include seg013.def
include seg014.def
include seg015.def
include seg016.def
include seg017.def
include seg018.def
include seg019.def
include seg020.def
include seg021.def
include seg022.def
include seg023.def
include seg024.def
include seg025.def
include seg026.def
include seg027.def
include seg028.def
include seg029.def
include seg030.def
include seg031.def
include seg032.def
include seg033.def
include seg034.def
include seg035.def
include seg036.def
include seg037.def
include seg038.def
include seg039.def
include dseg.def
include dsegu.def

seg000 segment byte public use16 'STUNTSC'
    public stuntsmain_asm_
    public run_intro_looped_asm_
    public run_intro_title_asm_
    public load_intro_resources_asm_
    public run_menu_asm_
    public run_tracks_menu_asm_
    public highscore_write_a_asm_
    public highscore_text_unk_asm_
    public print_highscore_entry_asm_
    public enter_hiscore_asm_
    public highscore_write_b_asm_
    public run_car_menu_asm_
    public run_opponent_menu_asm_
    public run_option_menu_asm_
    public off_1314A
    public end_hiscore_asm_
    public security_check_asm_
    public set_default_car_asm_

    ifdef RESTUNTS_ORIGINAL
        ; Alias all functions to the original asm implementation.
        stuntsmain = stuntsmain_asm_
        run_intro_looped = run_intro_looped_asm_
        run_intro_title = run_intro_title_asm_
        load_intro_resources = load_intro_resources_asm_
        run_menu = run_menu_asm_
        run_tracks_menu = run_tracks_menu_asm_
        highscore_write_a = highscore_write_a_asm_
        highscore_text_unk = highscore_text_unk_asm_
        print_highscore_entry = print_highscore_entry_asm_
        enter_hiscore = enter_hiscore_asm_
        highscore_write_b = highscore_write_b_asm_
        run_car_menu = run_car_menu_asm_
        run_opponent_menu = run_opponent_menu_asm_
        run_option_menu = run_option_menu_asm_
        end_hiscore = end_hiscore_asm_
        security_check = security_check_asm_
        set_default_car = set_default_car_asm_
    else
        ; Alias unported functions to the original asm implementation.
        stuntsmain = stuntsmain_asm_
        run_intro_looped = run_intro_looped_asm_
        run_intro_title = run_intro_title_asm_
        load_intro_resources = load_intro_resources_asm_
        run_menu = run_menu_asm_
        run_tracks_menu = run_tracks_menu_asm_
        highscore_write_a = highscore_write_a_asm_
        highscore_text_unk = highscore_text_unk_asm_
        print_highscore_entry = print_highscore_entry_asm_
        enter_hiscore = enter_hiscore_asm_
        highscore_write_b = highscore_write_b_asm_
        run_car_menu = run_car_menu_asm_
        run_opponent_menu = run_opponent_menu_asm_
        run_option_menu = run_option_menu_asm_
        end_hiscore = end_hiscore_asm_
        security_check = security_check_asm_
        set_default_car = set_default_car_asm_
    endif
seg000 ends

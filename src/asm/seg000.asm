; Generated by restunts-export.py (Ghidra)
.8086
.model medium

include seg000.inc

seg000 segment byte public use16 'STUNTSC'
    assume cs:seg000, es:nothing, ss:nothing, ds:dseg

; int __cdecl16far stuntsmain(int argc_, char * * argv_)
stuntsmain_asm_ proc far
    var_12     = word ptr  -18
    var_10     = word ptr  -16
    var_E      = word ptr  -14
    var_C      = word ptr  -12
    var_A      = byte ptr  -10
    trkptr     = word ptr   -4
    var_2      = word ptr   -2
    argc_      = word ptr    6
    argv_      = word ptr    8

    push    bp
    mov     bp, sp
    sub     sp, 0x12
    push    di
    push    si
    push    word ptr [bp+argv_]
    push    word ptr [bp+argc_]
    call    far ptr init_main
    add     sp, 0x4
    call    far ptr init_div0
    sub     si, si
LAB_1000_001d:
    mov     ax, si
    shl     ax, 0x1
    mov     word ptr [bp+var_C], ax
    mov     ax, 0x1d
    sub     ax, si
    mov     word ptr [bp+var_E], ax
    mov     ax, 0x1e
    imul    word ptr [bp+var_E]
    mov     bx, word ptr [bp+var_C]
    mov     word ptr [bx+trackrows], ax
    mov     ax, 0x1e
    imul    si
    mov     bx, word ptr [bp+var_C]
    mov     word ptr [bx+terrainrows], ax
    mov     ax, word ptr [bp+var_E]
    mov     cl, 0xa
    shl     ax, cl                             ; *1024, or tile length
    mov     word ptr [bp+var_10], ax
    mov     bx, word ptr [bp+var_C]
    mov     word ptr [bx+trackpos], ax
    mov     bx, word ptr [bp+var_C]
    mov     ax, word ptr [bp+var_10]
    add     ah, 0x2
    mov     word ptr [bx+trackcenterpos], ax
    mov     ax, si
    shl     ax, cl
    mov     word ptr [bp+var_12], ax
    mov     bx, word ptr [bp+var_C]
    mov     word ptr [bx+terrainpos], ax
    mov     bx, word ptr [bp+var_C]
    mov     ax, word ptr [bp+var_12]
    add     ah, 0x2
    mov     word ptr [bx+terraincenterpos], ax
    inc     si
    cmp     si, 0x1e
    jl      LAB_1000_001d
    sub     si, si
LAB_1000_0086:
    mov     ax, si
    shl     ax, 0x1
    mov     word ptr [bp+var_12], ax
    mov     bx, ax
    mov     ax, si
    mov     cl, 0xa
    shl     ax, cl
    mov     word ptr [bx+trackpos2], ax
    mov     bx, word ptr [bp+var_12]
    mov     ax, si
    shl     ax, cl
    add     ah, 0x2
    mov     word ptr [bx+trackcenterpos2], ax
    inc     si
    cmp     si, 0x1e
    jl      LAB_1000_0086
    mov     ax, offset aMain
    push    ax
    call    far ptr file_load_resfile
    add     sp, 0x2
    mov     word ptr [mainresptr], ax
    mov     word ptr [mainresptr+2], dx
    mov     ax, offset aFontdef_fnt
    push    ax                                 ; char *
    sub     ax, ax
    push    ax                                 ; int
    call    far ptr file_load_resource         ; type 0 = binary file
    add     sp, 0x4
    mov     word ptr [fontdefptr], ax
    mov     word ptr [fontdefptr+2], dx
    mov     ax, offset aFontn_fnt
    push    ax                                 ; char *
    sub     ax, ax
    push    ax                                 ; int
    call    far ptr file_load_resource
    add     sp, 0x4
    mov     word ptr [fontnptr], ax
    mov     word ptr [fontnptr+2], dx
    call    far ptr font_set_fontdef
    call    far ptr init_polyinfo
    mov     si, 0x6bf3                         ; bytes to allocate
    mov     ax, si
    cwd
    push    dx
    push    ax
    mov     ax, offset aTrakdata
    push    ax
    call    far ptr mmgr_alloc_resbytes
    add     sp, 0x6
    mov     word ptr [bp+trkptr], ax
    mov     word ptr [bp+var_2], dx
    mov     word ptr [td01_track_file_cpy], ax
    mov     word ptr [td01_track_file_cpy+2], dx
    add     word ptr [bp+trkptr], 0x70a        ; 1802, size of a track file
    mov     ax, word ptr [bp+trkptr]
    mov     word ptr [td02_penalty_related], ax
    mov     word ptr [td02_penalty_related+2], dx
    add     word ptr [bp+trkptr], 0x70a
    mov     ax, word ptr [bp+trkptr]
    mov     word ptr [trackdata3], ax
    mov     word ptr [trackdata3+2], dx
    add     word ptr [bp+trkptr], 0x70a
    mov     ax, word ptr [bp+trkptr]
    mov     word ptr [td04_aerotable_pl], ax
    mov     word ptr [td04_aerotable_pl+2], dx
    add     word ptr [bp+trkptr], 0x80
    mov     ax, word ptr [bp+trkptr]
    mov     word ptr [td05_aerotable_op], ax
    mov     word ptr [td05_aerotable_op+2], dx
    add     word ptr [bp+trkptr], 0x80
    mov     ax, word ptr [bp+trkptr]
    mov     word ptr [trackdata6], ax
    mov     word ptr [trackdata6+2], dx
    add     word ptr [bp+trkptr], 0x80
    mov     ax, word ptr [bp+trkptr]
    mov     word ptr [trackdata7], ax
    mov     word ptr [trackdata7+2], dx
    add     word ptr [bp+trkptr], 0x80
    mov     ax, word ptr [bp+trkptr]
    mov     word ptr [td08_direction_related], ax
    mov     word ptr [td08_direction_related+2], dx
    add     word ptr [bp+trkptr], 0x60
    mov     ax, word ptr [bp+trkptr]
    mov     word ptr [trackdata9], ax
    mov     word ptr [trackdata9+2], dx
    add     word ptr [bp+trkptr], 0x180
    mov     ax, word ptr [bp+trkptr]
    mov     word ptr [td10_track_check_rel], ax
    mov     word ptr [td10_track_check_rel+2], dx
    add     word ptr [bp+trkptr], 0x120
    mov     ax, word ptr [bp+trkptr]
    mov     word ptr [td11_highscores], ax
    mov     word ptr [td11_highscores+2], dx
    add     word ptr [bp+trkptr], 0x16c
    mov     ax, word ptr [bp+trkptr]
    mov     word ptr [trackdata12], ax
    mov     word ptr [trackdata12+2], dx
    add     word ptr [bp+trkptr], 0xf0
    mov     ax, word ptr [bp+trkptr]
    mov     word ptr [td13_rpl_header], ax
    mov     word ptr [td13_rpl_header+2], dx
    add     word ptr [bp+trkptr], 0x1a
    mov     ax, word ptr [bp+trkptr]
    mov     word ptr [td14_elem_map_main], ax
    mov     word ptr [td14_elem_map_main+2], dx
    add     word ptr [bp+trkptr], 0x385
    mov     ax, word ptr [bp+trkptr]
    mov     word ptr [td15_terr_map_main], ax
    mov     word ptr [td15_terr_map_main+2], dx
    add     word ptr [bp+trkptr], 0x385
    mov     ax, word ptr [bp+trkptr]
    mov     word ptr [td16_rpl_buffer], ax
    mov     word ptr [td16_rpl_buffer+2], dx
    add     word ptr [bp+trkptr], 0x2ee0
    mov     ax, word ptr [bp+trkptr]
    mov     word ptr [td17_trk_elem_ordered], ax
    mov     word ptr [td17_trk_elem_ordered+2], dx
    add     word ptr [bp+trkptr], 0x385
    mov     ax, word ptr [bp+trkptr]
    mov     word ptr [trackdata18], ax
    mov     word ptr [trackdata18+2], dx
    add     word ptr [bp+trkptr], 0x385
    mov     ax, word ptr [bp+trkptr]
    mov     word ptr [trackdata19], ax
    mov     word ptr [trackdata19+2], dx
    add     word ptr [bp+trkptr], 0x385
    mov     ax, word ptr [bp+trkptr]
    mov     word ptr [td20_trk_file_appnd], ax
    mov     word ptr [td20_trk_file_appnd+2], dx
    add     word ptr [bp+trkptr], 0x7ac
    mov     ax, word ptr [bp+trkptr]
    mov     word ptr [td21_col_from_path], ax
    mov     word ptr [td21_col_from_path+2], dx
    add     word ptr [bp+trkptr], 0x385
    mov     ax, word ptr [bp+trkptr]
    mov     word ptr [td22_row_from_path], ax
    mov     word ptr [td22_row_from_path+2], dx
    add     word ptr [bp+trkptr], 0x385
    mov     ax, word ptr [bp+trkptr]
    mov     word ptr [trackdata23], ax
    mov     word ptr [trackdata23+2], dx
    add     word ptr [bp+trkptr], 0x30
; done setting trackdata pointers
    call    far ptr init_unknown
    mov     ax, offset aKevin
    push    ax
    call    far ptr init_kevinrandom
    add     sp, 0x2
    mov     ax, offset aDefault_0
    push    ax
    mov     ax, offset gameconfig.game_trackname
    push    ax                                 ; char *
    call    far ptr _strcpy
    add     sp, 0x4
    sub     si, si
    mov     ax, 0x1
    push    ax
    call    far ptr input_do_checking
    add     sp, 0x2
    mov     ax, 0x1
    push    ax
    call    far ptr input_do_checking
    add     sp, 0x2
    call    far ptr mouse_draw_opaque_check
    mov     byte ptr [kbormouse], 0x0
    mov     byte ptr [passed_security], 0x1    ; originally set to 0 - bypasses the copy protection
    push    cs
    call    near ptr set_default_car
    mov     si, 0x1
    jmp     near ptr _do_intro
    nop
_tracks_menu0:
    sub     ax, ax
_tracks_menu_ax:
    push    ax
    push    cs
    call    near ptr run_tracks_menu
    add     sp, 0x2
    jmp     near ptr _show_menu
    nop
_do_opp_menu:
    call    far ptr check_input
    call    far ptr show_waiting
    push    cs
    call    near ptr run_opponent_menu
    jmp     near ptr _show_menu
    nop
_do_option_menu:
    call    far ptr check_input
    call    far ptr show_waiting
    push    cs
    call    near ptr run_option_menu
    or      al, al
    jnz     _goto_game1
    jmp     near ptr _show_menu
_goto_game1:
    mov     byte ptr [bp+var_A], 0x1
    jmp     _do_game1
    nop
_do_car_menu:
    call    far ptr check_input
    call    far ptr show_waiting
    sub     ax, ax
    push    ax
    mov     ax, offset gameconfig.game_playertransmission
    push    ax
    mov     ax, offset gameconfig.game_playermaterial
    push    ax
    mov     ax, offset gameconfig
    push    ax
    push    cs
    call    near ptr run_car_menu
    add     sp, 0x8
    jmp     near ptr _show_menu
    nop
_do_game0:
    mov     byte ptr [bp+var_A], 0x0
_do_game1:
    push    si
    push    di
    mov     di, offset gameconfigcopy
    mov     si, offset gameconfig
    push    ds
    pop     es
    mov     cx, 0xd
    rep movsw
    pop     di
    pop     si
    sub     si, si
LAB_1000_032f:
    les     bx, [td14_elem_map_main]
    mov     al, byte ptr es:[bx+si]
    les     bx, [td20_trk_file_appnd]
    mov     byte ptr es:[bx+si], al
    inc     si
    cmp     si, 0x70a
    jl      LAB_1000_032f
    sub     si, si
LAB_1000_0346:
    les     bx, [td20_trk_file_appnd]
    mov     al, byte ptr [si+byte_3B80C]
    mov     byte ptr es:[bx+si+0x70a], al
    les     bx, [td20_trk_file_appnd]
    mov     al, byte ptr [si+byte_3B85E]
    mov     byte ptr es:[bx+si+0x75b], al
    inc     si
    cmp     si, 0x51
    jl      LAB_1000_0346
    cmp     byte ptr [idle_expired], 0x0
    jnz     _find_tedit
    call    far ptr track_setup
    or      al, al
    jz      _sec_check1
    mov     ax, 0x1
    jmp     near ptr _tracks_menu_ax
_sec_check1:
    call    far ptr random_wait
    cmp     byte ptr [passed_security], 0x0
    jnz     _init_replay
    call    far ptr get_super_random
    cwd
    mov     cx, 0x14
    idiv    cx
    mov     ax, dx
    cbw
    push    ax
    push    cs
    call    near ptr security_check
    add     sp, 0x2
_init_replay:
    call    far ptr audio_unload
    mov     ax, 0x5780                         ; size to allocate, 20*1120
    cwd
    push    dx
    push    ax
    mov     ax, offset aCvx
    push    ax
    call    far ptr mmgr_alloc_resbytes
    add     sp, 0x6
    mov     word ptr [cvxptr], ax
    mov     word ptr [cvxptr+2], dx
    mov     ax, 0xffff
    push    ax
    call    far ptr init_game_state
    add     sp, 0x2
    cmp     byte ptr [bp+var_A], 0x0
    jnz     LAB_1000_03d1
    jmp     near ptr LAB_1000_04a6
LAB_1000_03d1:
    mov     byte ptr [byte_43966], 0x0
    jmp     near ptr LAB_1000_04ac
    nop
_find_tedit:
    mov     ax, offset aTedit__0
    push    ax
    call    far ptr file_find
    add     sp, 0x2
    or      ax, ax
    jnz     _init_replay
_prepare_intro:
    call    far ptr audio_unload
_do_intro0:
    sub     si, si
_do_intro:
    mov     ax, 0x2
    push    ax
    call    far ptr ensure_file_exists
    add     sp, 0x2
    or      si, si
    jz      LAB_1000_042d
    mov     ax, offset g_path_buf
    push    ax                                 ; char *
    mov     ax, offset a_trk
    push    ax                                 ; int
    mov     ax, offset gameconfig.game_trackname
    push    ax
    mov     ax, offset byte_3B80C
    push    ax                                 ; char *
    call    far ptr file_build_path
    add     sp, 0x8
    push    word ptr [td14_elem_map_main+2]
    push    word ptr [td14_elem_map_main]
    mov     ax, offset g_path_buf
    push    ax
    call    far ptr file_read_fatal
    add     sp, 0x6
LAB_1000_042d:
    mov     byte ptr [idle_expired], 0x0
    push    cs
    call    near ptr run_intro_looped
    mov     di, ax
    cmp     di, 0x1b
    jnz     _show_menu
    jmp     near ptr _ask_dos
_show_menu:
    mov     ax, 0x2
    push    ax
    call    far ptr ensure_file_exists
    add     sp, 0x2
    cmp     byte ptr [is_audioloaded], 0x0
    jnz     LAB_1000_0467
    mov     ax, offset aSlct
    push    ax
    mov     ax, offset aSkidms_0
    push    ax
    mov     ax, offset aSkidslct
    push    ax                                 ; char *
    call    far ptr file_load_audiores
    add     sp, 0x6
LAB_1000_0467:
    push    cs
    call    near ptr run_menu
    cbw
    cmp     ax, 0xffff
    jnz     LAB_1000_0474
    jmp     near ptr _prepare_intro
LAB_1000_0474:
    or      ax, ax
    jnz     LAB_1000_047b
    jmp     near ptr _do_game0
LAB_1000_047b:
    cmp     ax, 0x1
    jnz     LAB_1000_0483
    jmp     near ptr _do_car_menu
LAB_1000_0483:
    cmp     ax, 0x2
    jnz     _do_show_menu
    jmp     near ptr _do_opp_menu
_do_show_menu:
    cmp     ax, 0x3
    jnz     LAB_1000_0493
    jmp     near ptr _tracks_menu0
LAB_1000_0493:
    cmp     ax, 0x4
    jnz     LAB_1000_049b
    jmp     near ptr _do_option_menu
LAB_1000_049b:
    jmp     _show_menu
    nop
LAB_1000_049e:
    mov     byte ptr [byte_43966], 0x4
    jmp     LAB_1000_04ac
    nop
LAB_1000_04a6:
    mov     word ptr [gameconfig.game_recordedframes], 0x0
LAB_1000_04ac:
    call    far ptr show_waiting
    call    far ptr run_game
    cmp     byte ptr [idle_expired], 0x0
    jnz     LAB_1000_04d2
    cmp     byte ptr [byte_43966], 0x0
    jz      LAB_1000_04d2
    push    cs
    call    near ptr end_hiscore
    cbw
    or      ax, ax
    jz      LAB_1000_049e
    cmp     ax, 0x1
    jz      LAB_1000_04a6
LAB_1000_04d2:
    push    si
    push    di
    mov     di, offset gameconfig
    mov     si, offset gameconfigcopy
    push    ds
    pop     es
    mov     cx, 0xd
    rep movsw
    pop     di
    pop     si
    sub     si, si
LAB_1000_04e5:
    les     bx, [td20_trk_file_appnd]
    mov     al, byte ptr es:[bx+si]
    les     bx, [td14_elem_map_main]
    mov     byte ptr es:[bx+si], al
    inc     si
    cmp     si, 0x70a
    jl      LAB_1000_04e5
    sub     si, si
LAB_1000_04fc:
    les     bx, [td20_trk_file_appnd]
    mov     al, byte ptr es:[bx+si+0x70a]
    mov     byte ptr [si+byte_3B80C], al
    les     bx, [td20_trk_file_appnd]
    mov     al, byte ptr es:[bx+si+0x75b]
    mov     byte ptr [si+byte_3B85E], al
    inc     si
    cmp     si, 0x51
    jl      LAB_1000_04fc
    push    word ptr [cvxptr+2]
    push    word ptr [cvxptr]
    call    far ptr mmgr_release
    add     sp, 0x4
    cmp     byte ptr [idle_expired], 0x0
    jnz     LAB_1000_0536
    jmp     near ptr _show_menu
LAB_1000_0536:
    jmp     near ptr _do_intro0
    nop
_ask_dos:
    sub     ax, ax
    push    ax
    push    ax
    push    word ptr [dialogarg2]
    mov     ax, 0xffff
    push    ax
    push    ax
    mov     ax, offset aDos
    push    ax
    push    word ptr [mainresptr+2]
    push    word ptr [mainresptr]
    call    far ptr locate_text_res
    add     sp, 0x6
    push    dx
    push    ax
    mov     ax, 0x1
    push    ax
    mov     ax, 0x2
    push    ax
    call    far ptr show_dialog
    add     sp, 0x12
    cmp     ax, 0x1
    jge     LAB_1000_0575
    jmp     near ptr _do_intro0
LAB_1000_0575:
    call    far ptr mouse_draw_opaque_check
    call    far ptr audio_stop_unk
    call    far ptr audiodrv_atexit
    call    far ptr kb_exit_handler
    call    far ptr kb_shift_checking1
    call    far ptr video_set_mode7
    pop     si
    pop     di
    mov     sp, bp
    pop     bp
    retf
stuntsmain_asm_ endp
    nop

; int __cdecl16far run_intro_looped(void)
run_intro_looped_asm_ proc far
    push    bp
    mov     bp, sp
    sub     sp, 0x2
    push    si
    mov     ax, offset aTitl
    push    ax
    mov     ax, offset aSkidms
    push    ax
    mov     ax, offset aSkidtitl
    push    ax                                 ; char *
    call    far ptr file_load_audiores
    add     sp, 0x6
    mov     ax, offset aSdtitl
    push    ax                                 ; char *
    mov     ax, 0x2
    push    ax                                 ; int
    call    far ptr file_load_resource
    add     sp, 0x4
    mov     word ptr [tempdataptr], ax
    mov     word ptr [tempdataptr+2], dx
    mov     ax, 0xf
    push    ax
    mov     ax, 0xc8
    push    ax
    mov     ax, 0x140
    push    ax
    call    far ptr sprite_make_wnd
    add     sp, 0x6
    mov     word ptr [wndsprite], ax
    mov     word ptr [wndsprite+2], dx
    push    cs
    call    near ptr run_intro_title
    mov     si, ax
    push    word ptr [wndsprite+2]
    push    word ptr [wndsprite]
    call    far ptr sprite_free_wnd
    add     sp, 0x4
    push    word ptr [tempdataptr+2]
    push    word ptr [tempdataptr]
    call    far ptr mmgr_free
    add     sp, 0x4
    or      si, si
    jnz     LAB_1000_068e
    call    far ptr setup_intro
    cbw
    mov     si, ax
    or      si, si
    jnz     LAB_1000_068e
    mov     ax, offset aSdcred
    push    ax                                 ; char *
    mov     ax, 0x2
    push    ax                                 ; int
    call    far ptr file_load_resource
    add     sp, 0x4
    mov     word ptr [tempdataptr], ax
    mov     word ptr [tempdataptr+2], dx
    mov     ax, 0xf
    push    ax
    mov     ax, 0xc8
    push    ax
    mov     ax, 0x140
    push    ax
    call    far ptr sprite_make_wnd
    add     sp, 0x6
    mov     word ptr [wndsprite], ax
    mov     word ptr [wndsprite+2], dx
    call    far ptr sprite_copy_wnd_to_1_clear
    sub     ax, ax
    push    ax
    push    word ptr [wndsprite+2]
    push    word ptr [wndsprite]
    call    far ptr sprite_blit_to_video
    add     sp, 0x6
    push    cs
    call    near ptr load_intro_resources
    cbw
    mov     si, ax
    push    word ptr [wndsprite+2]
    push    word ptr [wndsprite]
    call    far ptr sprite_free_wnd
    add     sp, 0x4
    push    word ptr [tempdataptr+2]
    push    word ptr [tempdataptr]
    call    far ptr mmgr_free
    add     sp, 0x4
LAB_1000_068e:
    call    far ptr audio_unload
    mov     ax, si
    pop     si
    mov     sp, bp
    pop     bp
    retf
run_intro_looped_asm_ endp
    db 0x90
    db 0x90

; int __cdecl16far run_intro_title(void)
run_intro_title_asm_ proc far
    push    bp
    mov     bp, sp
    sub     sp, 0x2
    push    si
    call    far ptr mouse_draw_opaque_check
    call    far ptr sprite_copy_2_to_1_clear
    call    far ptr mouse_draw_transparent_check
    call    far ptr sprite_copy_wnd_to_1_clear
    mov     ax, offset aProd
    push    ax
    push    word ptr [tempdataptr+2]
    push    word ptr [tempdataptr]
    call    far ptr locate_shape_fatal
    add     sp, 0x6
    mov     bx, ax
    mov     es, dx
    cmp     word ptr es:[bx+0xa], 0x0
    jz      LAB_1000_06de
    mov     word ptr [waitflag], 0xa0
    jmp     LAB_1000_06e4
LAB_1000_06de:
    mov     word ptr [waitflag], 0xb4
LAB_1000_06e4:
    mov     ax, offset aProd_0
    push    ax
    push    word ptr [tempdataptr+2]
    push    word ptr [tempdataptr]
    call    far ptr locate_shape_fatal
    add     sp, 0x6
    push    dx
    push    ax
    call    far ptr sprite_shape_to_1_alt
    add     sp, 0x4
    mov     ax, 0xffff
    push    ax
    push    word ptr [wndsprite+2]
    push    word ptr [wndsprite]
    call    far ptr sprite_blit_to_video
    add     sp, 0x6
    mov     si, ax
    or      si, si
    jnz     LAB_1000_077f
    mov     ax, 0x190
    push    ax
    call    far ptr input_repeat_check
    add     sp, 0x2
    mov     si, ax
    or      si, si
    jnz     LAB_1000_077f
    call    far ptr sprite_copy_wnd_to_1_clear
    mov     word ptr [waitflag], 0xb4
    mov     ax, offset aTitl_0
    push    ax
    push    word ptr [tempdataptr+2]
    push    word ptr [tempdataptr]
    call    far ptr locate_shape_fatal
    add     sp, 0x6
    push    dx
    push    ax
    call    far ptr sprite_shape_to_1_alt
    add     sp, 0x4
    mov     ax, 0xffff
    push    ax
    push    word ptr [wndsprite+2]
    push    word ptr [wndsprite]
    call    far ptr sprite_blit_to_video
    add     sp, 0x6
    mov     si, ax
    or      si, si
    jnz     LAB_1000_077f
    mov     ax, 0x190
    push    ax
    call    far ptr input_repeat_check
    add     sp, 0x2
    mov     si, ax
LAB_1000_077f:
    mov     ax, si
    pop     si
    mov     sp, bp
    pop     bp
    retf
run_intro_title_asm_ endp

; int __cdecl16far load_intro_resources(void)
load_intro_resources_asm_ proc far
    var_46     = word ptr  -70
    var_44     = word ptr  -68
    var_40     = word ptr  -64
    var_3E     = word ptr  -62
    var_3A     = word ptr  -58
    var_38     = word ptr  -56
    var_36     = word ptr  -54
    var_34     = dword ptr -52
    var_30     = dword ptr -48
    var_C      = word ptr  -12
    var_A      = word ptr  -10
    var_4      = word ptr   -4
    var_2      = word ptr   -2

    push    bp
    mov     bp, sp
    sub     sp, 0x46
    push    di
    push    si
    mov     ax, offset aCred
    push    ax
    call    far ptr file_load_resfile
    add     sp, 0x2
    mov     word ptr [bp+var_3A], ax
    mov     word ptr [bp+var_38], dx
    lea     ax, [bp+var_34]
    push    ax
    mov     ax, offset aArowarrwarw1ar
    push    ax
    push    word ptr [tempdataptr+2]
    push    word ptr [tempdataptr]
    call    far ptr locate_many_resources
    add     sp, 0x8
    mov     word ptr [waitflag], 0x96
    call    far ptr sprite_copy_wnd_to_1_clear
    les     bx, [bp+var_30]
    mov     ax, word ptr es:[bx+0x8]
    mov     word ptr [bp+var_2], ax
    mov     ax, word ptr es:[bx+0xa]
    mov     word ptr [bp+var_4], ax
    mov     ax, word ptr es:[bx]
    imul    word ptr [video_flag1_is1]
    mov     word ptr [bp+var_3E], ax
    mov     ax, word ptr es:[bx+0x2]
    mov     word ptr [bp+var_44], ax
    mov     ax, offset aCre
    push    ax
    push    word ptr [bp+var_38]
    push    word ptr [bp+var_3A]
    call    far ptr locate_text_res
    add     sp, 0x6
    push    dx
    push    ax
    mov     ax, offset g_res_id
    push    ax
    call    far ptr copy_string
    add     sp, 0x6
    push    word ptr [word_407DA]
    push    word ptr [word_407D8]
    sub     ax, ax
    push    ax
    mov     ax, 0x78
    push    ax
    mov     ax, offset g_res_id
    push    ax
    call    far ptr intro_draw_text
    add     sp, 0xa
    mov     ax, offset aGds0
    push    ax
    push    word ptr [bp+var_38]
    push    word ptr [bp+var_3A]
    call    far ptr locate_shape_alt
    add     sp, 0x6
    push    dx
    push    ax
    mov     ax, offset g_res_id
    push    ax
    call    far ptr copy_string
    add     sp, 0x6
    push    word ptr [word_407D6]
    push    word ptr [word_407D4]
    mov     ax, 0xc
    push    ax
    mov     ax, 0x3c
    push    ax
    mov     ax, offset g_res_id
    push    ax
    call    far ptr intro_draw_text
    add     sp, 0xa
    mov     ax, offset aGds1
    push    ax
    push    word ptr [bp+var_38]
    push    word ptr [bp+var_3A]
    call    far ptr locate_shape_alt
    add     sp, 0x6
    push    dx
    push    ax
    mov     ax, offset g_res_id
    push    ax
    call    far ptr copy_string
    add     sp, 0x6
    push    word ptr [word_407D6]
    push    word ptr [word_407D4]
    mov     ax, 0x14
    push    ax
    mov     ax, 0x68
    push    ax
    mov     ax, offset g_res_id
    push    ax
    call    far ptr intro_draw_text
    add     sp, 0xa
    mov     ax, offset aDes
    push    ax
    push    word ptr [bp+var_38]
    push    word ptr [bp+var_3A]
    call    far ptr locate_text_res
    add     sp, 0x6
    push    dx
    push    ax
    mov     ax, offset g_res_id
    push    ax
    call    far ptr copy_string
    add     sp, 0x6
    push    word ptr [word_407DE]
    push    word ptr [word_407DC]
    mov     ax, 0x20
    push    ax
    mov     ax, 0x14
    push    ax
    mov     ax, offset g_res_id
    push    ax
    call    far ptr intro_draw_text
    add     sp, 0xa
    mov     ax, offset aGdon
    push    ax
    push    word ptr [bp+var_38]
    push    word ptr [bp+var_3A]
    call    far ptr locate_shape_alt
    add     sp, 0x6
    push    dx
    push    ax
    mov     ax, offset g_res_id
    push    ax
    call    far ptr copy_string
    add     sp, 0x6
    push    word ptr [word_407D6]
    push    word ptr [word_407D4]
    mov     ax, 0x2c
    push    ax
    mov     ax, 0x14
    push    ax
    mov     ax, offset g_res_id
    push    ax
    call    far ptr intro_draw_text
    add     sp, 0xa
    mov     ax, offset aGkev
    push    ax
    push    word ptr [bp+var_38]
    push    word ptr [bp+var_3A]
    call    far ptr locate_shape_alt
    add     sp, 0x6
    push    dx
    push    ax
    mov     ax, offset g_res_id
    push    ax
    call    far ptr copy_string
    add     sp, 0x6
    push    word ptr [word_407D6]
    push    word ptr [word_407D4]
    mov     ax, 0x34
    push    ax
    mov     ax, 0x14
    push    ax
    mov     ax, offset g_res_id
    push    ax
    call    far ptr intro_draw_text
    add     sp, 0xa
    mov     ax, offset aGbra
    push    ax
    push    word ptr [bp+var_38]
    push    word ptr [bp+var_3A]
    call    far ptr locate_shape_alt
    add     sp, 0x6
    push    dx
    push    ax
    mov     ax, offset g_res_id
    push    ax
    call    far ptr copy_string
    add     sp, 0x6
    push    word ptr [word_407D6]
    push    word ptr [word_407D4]
    mov     ax, 0x3c
    push    ax
    mov     ax, 0x14
    push    ax
    mov     ax, offset g_res_id
    push    ax
    call    far ptr intro_draw_text
    add     sp, 0xa
    mov     ax, offset aGrob
    push    ax
    push    word ptr [bp+var_38]
    push    word ptr [bp+var_3A]
    call    far ptr locate_shape_alt
    add     sp, 0x6
    push    dx
    push    ax
    mov     ax, offset g_res_id
    push    ax
    call    far ptr copy_string
    add     sp, 0x6
    push    word ptr [word_407D6]
    push    word ptr [word_407D4]
    mov     ax, 0x44
    push    ax
    mov     ax, 0x14
    push    ax
    mov     ax, offset g_res_id
    push    ax
    call    far ptr intro_draw_text
    add     sp, 0xa
    mov     ax, offset aGsta
    push    ax
    push    word ptr [bp+var_38]
    push    word ptr [bp+var_3A]
    call    far ptr locate_shape_alt
    add     sp, 0x6
    push    dx
    push    ax
    mov     ax, 0xac74
    push    ax
    call    far ptr copy_string
    add     sp, 0x6
    push    word ptr [word_407D6]
    push    word ptr [word_407D4]
    mov     ax, 0x4c
    push    ax
    mov     ax, 0x14
    push    ax
    mov     ax, offset g_res_id
    push    ax
    call    far ptr intro_draw_text
    add     sp, 0xa
    mov     ax, offset aMus
    push    ax
    push    word ptr [bp+var_38]
    push    word ptr [bp+var_3A]
    call    far ptr locate_text_res
    add     sp, 0x6
    push    dx
    push    ax
    mov     ax, offset g_res_id
    push    ax
    call    far ptr copy_string
    add     sp, 0x6
    push    word ptr [word_407EA]
    push    word ptr [word_407E8]
    mov     ax, 0x5c
    push    ax
    mov     ax, 0x14
    push    ax
    mov     ax, offset g_res_id
    push    ax
    call    far ptr intro_draw_text
    add     sp, 0xa
    mov     ax, offset aGmsy
    push    ax
    push    word ptr [bp+var_38]
    push    word ptr [bp+var_3A]
    call    far ptr locate_shape_alt
    add     sp, 0x6
    push    dx
    push    ax
    mov     ax, offset g_res_id
    push    ax
    call    far ptr copy_string
    add     sp, 0x6
    push    word ptr [word_407D6]
    push    word ptr [word_407D4]
    mov     ax, 0x68
    push    ax
    mov     ax, 0x14
    push    ax
    mov     ax, offset g_res_id
    push    ax
    call    far ptr intro_draw_text
    add     sp, 0xa
    mov     ax, offset aGkri
    push    ax
    push    word ptr [bp+var_38]
    push    word ptr [bp+var_3A]
    call    far ptr locate_shape_alt
    add     sp, 0x6
    push    dx
    push    ax
    mov     ax, offset g_res_id
    push    ax
    call    far ptr copy_string
    add     sp, 0x6
    push    word ptr [word_407D6]
    push    word ptr [word_407D4]
    mov     ax, 0x70
    push    ax
    mov     ax, 0x14
    push    ax
    mov     ax, offset g_res_id
    push    ax
    call    far ptr intro_draw_text
    add     sp, 0xa
    mov     ax, offset aGbri
    push    ax
    push    word ptr [bp+var_38]
    push    word ptr [bp+var_3A]
    call    far ptr locate_shape_alt
    add     sp, 0x6
    push    dx
    push    ax
    mov     ax, offset g_res_id
    push    ax
    call    far ptr copy_string
    add     sp, 0x6
    push    word ptr [word_407D6]
    push    word ptr [word_407D4]
    mov     ax, 0x78
    push    ax
    mov     ax, 0x14
    push    ax
    mov     ax, offset g_res_id
    push    ax
    call    far ptr intro_draw_text
    add     sp, 0xa
    mov     ax, offset aPro
    push    ax
    push    word ptr [bp+var_38]
    push    word ptr [bp+var_3A]
    call    far ptr locate_text_res
    add     sp, 0x6
    push    dx
    push    ax
    mov     ax, offset g_res_id
    push    ax
    call    far ptr copy_string
    add     sp, 0x6
    push    word ptr [word_407E2]
    push    word ptr [word_407E0]
    mov     ax, 0x20
    push    ax
    mov     ax, 0xac
    push    ax
    mov     ax, offset g_res_id
    push    ax
    call    far ptr intro_draw_text
    add     sp, 0xa
    mov     ax, offset aGkev_0
    push    ax
    push    word ptr [bp+var_38]
    push    word ptr [bp+var_3A]
    call    far ptr locate_shape_alt
    add     sp, 0x6
    push    dx
    push    ax
    mov     ax, offset g_res_id
    push    ax
    call    far ptr copy_string
    add     sp, 0x6
    push    word ptr [word_407D6]
    push    word ptr [word_407D4]
    mov     ax, 0x2c
    push    ax
    mov     ax, 0xac
    push    ax
    mov     ax, offset g_res_id
    push    ax
    call    far ptr intro_draw_text
    add     sp, 0xa
    mov     ax, offset aOpr
    push    ax
    push    word ptr [bp+var_38]
    push    word ptr [bp+var_3A]
    call    far ptr locate_text_res
    add     sp, 0x6
    push    dx
    push    ax
    mov     ax, offset g_res_id
    push    ax
    call    far ptr copy_string
    add     sp, 0x6
    push    word ptr [word_407E2]
    push    word ptr [word_407E0]
    mov     ax, 0x38
    push    ax
    mov     ax, 0xac
    push    ax
    mov     ax, offset g_res_id
    push    ax
    call    far ptr intro_draw_text
    add     sp, 0xa
    mov     ax, offset aGbra_0
    push    ax
    push    word ptr [bp+var_38]
    push    word ptr [bp+var_3A]
    call    far ptr locate_shape_alt
    add     sp, 0x6
    push    dx
    push    ax
    mov     ax, offset g_res_id
    push    ax
    call    far ptr copy_string
    add     sp, 0x6
    push    word ptr [word_407D6]
    push    word ptr [word_407D4]
    mov     ax, 0x40
    push    ax
    mov     ax, 0xac
    push    ax
    mov     ax, offset g_res_id
    push    ax
    call    far ptr intro_draw_text
    add     sp, 0xa
    mov     ax, offset aGric
    push    ax
    push    word ptr [bp+var_38]
    push    word ptr [bp+var_3A]
    call    far ptr locate_shape_alt
    add     sp, 0x6
    push    dx
    push    ax
    mov     ax, offset g_res_id
    push    ax
    call    far ptr copy_string
    add     sp, 0x6
    push    word ptr [word_407D6]
    push    word ptr [word_407D4]
    mov     ax, 0x48
    push    ax
    mov     ax, 0xac
    push    ax
    mov     ax, offset g_res_id
    push    ax
    call    far ptr intro_draw_text
    add     sp, 0xa
    mov     ax, offset aArt
    push    ax
    push    word ptr [bp+var_38]
    push    word ptr [bp+var_3A]
    call    far ptr locate_text_res
    add     sp, 0x6
    push    dx
    push    ax
    mov     ax, offset g_res_id
    push    ax
    call    far ptr copy_string
    add     sp, 0x6
    push    word ptr [word_407E6]
    push    word ptr [word_407E4]
    mov     ax, 0x54
    push    ax
    mov     ax, 0xac
    push    ax
    mov     ax, offset g_res_id
    push    ax
    call    far ptr intro_draw_text
    add     sp, 0xa
    mov     ax, offset aGmsm
    push    ax
    push    word ptr [bp+var_38]
    push    word ptr [bp+var_3A]
    call    far ptr locate_shape_alt
    add     sp, 0x6
    push    dx
    push    ax
    mov     ax, offset g_res_id
    push    ax
    call    far ptr copy_string
    add     sp, 0x6
    push    word ptr [word_407D6]
    push    word ptr [word_407D4]
    mov     ax, 0x60
    push    ax
    mov     ax, 0xac
    push    ax
    mov     ax, offset g_res_id
    push    ax
    call    far ptr intro_draw_text
    add     sp, 0xa
    mov     ax, offset aGdav
    push    ax
    push    word ptr [bp+var_38]
    push    word ptr [bp+var_3A]
    call    far ptr locate_shape_alt
    add     sp, 0x6
    push    dx
    push    ax
    mov     ax, offset g_res_id
    push    ax
    call    far ptr copy_string
    add     sp, 0x6
    push    word ptr [word_407D6]
    push    word ptr [word_407D4]
    mov     ax, 0x68
    push    ax
    mov     ax, 0xac
    push    ax
    mov     ax, offset g_res_id
    push    ax
    call    far ptr intro_draw_text
    add     sp, 0xa
    mov     ax, offset aGnic
    push    ax
    push    word ptr [bp+var_38]
    push    word ptr [bp+var_3A]
    call    far ptr locate_shape_alt
    add     sp, 0x6
    push    dx
    push    ax
    mov     ax, offset g_res_id
    push    ax
    call    far ptr copy_string
    add     sp, 0x6
    push    word ptr [word_407D6]
    push    word ptr [word_407D4]
    mov     ax, 0x70
    push    ax
    mov     ax, 0xac
    push    ax
    mov     ax, offset g_res_id
    push    ax
    call    far ptr intro_draw_text
    add     sp, 0xa
    mov     ax, offset aGkev_1
    push    ax
    push    word ptr [bp+var_38]
    push    word ptr [bp+var_3A]
    call    far ptr locate_shape_alt
    add     sp, 0x6
    push    dx
    push    ax
    mov     ax, offset g_res_id
    push    ax
    call    far ptr copy_string
    add     sp, 0x6
    push    word ptr [word_407D6]
    push    word ptr [word_407D4]
    mov     ax, 0x78
    push    ax
    mov     ax, 0xac
    push    ax
    mov     ax, offset g_res_id
    push    ax
    call    far ptr intro_draw_text
    add     sp, 0xa
    push    word ptr [bp+var_38]
    push    word ptr [bp+var_3A]
    call    far ptr unload_resource
    add     sp, 0x4
    mov     ax, 0xffff
    push    ax
    push    word ptr [wndsprite+2]
    push    word ptr [wndsprite]
    call    far ptr sprite_blit_to_video
    add     sp, 0x6
    call    far ptr sprite_copy_2_to_1_2
    call    far ptr timer_get_delta_alt
    mov     si, 0x14a
LAB_1000_0d77:
    call    far ptr timer_get_delta_alt
    mov     word ptr [bp+var_40], ax
    shl     ax, 0x1
    sub     si, ax
    cmp     word ptr [bp+var_2], si
    jle     LAB_1000_0da0
LAB_1000_0d88:
    les     bx, [bp+var_34]
    mov     ax, word ptr es:[bx+0xa]
    mov     word ptr [bp+var_4], ax
    mov     word ptr [bp+var_36], 0x0
    sub     si, si
    mov     di, 0x2
    jmp     near ptr LAB_1000_0e83
    db 0x90
LAB_1000_0da0:
    call    far ptr mouse_draw_opaque_check
    push    word ptr [bp+var_4]
    push    si
    push    word ptr [bp+var_30+2]
    push    word ptr [bp+var_30]
    call    far ptr sprite_putimage_and_alt
    add     sp, 0x8
    sub     ax, ax
    push    ax
    push    word ptr [bp+var_44]
    mov     ax, 0x20
    push    ax
    push    word ptr [bp+var_4]
    mov     ax, word ptr [bp+var_3E]
    add     ax, si
    push    ax
    call    far ptr sprite_1_unk2
    add     sp, 0xa
    call    far ptr mouse_draw_transparent_check
    push    word ptr [bp+var_40]
    call    far ptr input_do_checking
    add     sp, 0x2
    mov     word ptr [bp+var_46], ax
    or      ax, ax
    jz      LAB_1000_0d77
    jmp     LAB_1000_0d88
    db 0x90
LAB_1000_0dec:
    call    far ptr sprite_copy_wnd_to_1
    mov     ax, 0xc8
    push    ax
    push    word ptr [bp+var_4]
    mov     ax, 0x140
    push    ax
    sub     ax, ax
    push    ax
    call    far ptr sprite_set_1_size
    add     sp, 0x8
    sub     ax, ax
    push    ax
    call    far ptr sprite_clear_1_color
    add     sp, 0x2
    mov     bx, di
    shl     bx, 0x1
    shl     bx, 0x1
    add     bx, bp
    push    word ptr [bx-0x32]
    push    word ptr [bx-0x34]
    call    far ptr sprite_shape_to_1_alt
    add     sp, 0x4
    call    far ptr sprite_copy_2_to_1_2
    mov     ax, 0xc8
    push    ax
    push    word ptr [bp+var_4]
    mov     ax, 0x140
    push    ax
    sub     ax, ax
    push    ax
    call    far ptr sprite_set_1_size
    add     sp, 0x8
    call    far ptr mouse_draw_opaque_check
    les     bx, [wndsprite]
    push    word ptr es:[bx+0x2]
    push    word ptr es:[bx]
    call    far ptr sprite_putimage
    add     sp, 0x4
    call    far ptr mouse_draw_transparent_check
    add     word ptr [bp+var_36], 0x5
    jmp     LAB_1000_0e7d
LAB_1000_0e66:
    call    far ptr timer_get_delta_alt
    mov     word ptr [bp+var_40], ax
    push    ax
    call    far ptr input_do_checking
    add     sp, 0x2
    mov     word ptr [bp+var_46], ax
    add     si, word ptr [bp+var_40]
LAB_1000_0e7d:
    cmp     word ptr [bp+var_36], si
    jg      LAB_1000_0e66
    inc     di
LAB_1000_0e83:
    cmp     di, 0xa
    jge     LAB_1000_0e91
    cmp     word ptr [bp+var_46], 0x0
    jnz     LAB_1000_0e91
    jmp     near ptr LAB_1000_0dec
LAB_1000_0e91:
    mov     ax, 0xc8
    push    ax
    sub     ax, ax
    push    ax
    mov     ax, 0x140
    push    ax
    sub     ax, ax
    push    ax
    call    far ptr sprite_set_1_size
    add     sp, 0x8
    call    far ptr mouse_draw_opaque_check
    les     bx, [wndsprite]
    push    word ptr es:[bx+0x2]
    push    word ptr es:[bx]
    call    far ptr sprite_clear_shape
    add     sp, 0x4
    call    far ptr sprite_copy_wnd_to_1
    mov     ax, 0xc8
    push    ax
    push    word ptr [bp+var_4]
    mov     ax, 0x140
    push    ax
    sub     ax, ax
    push    ax
    call    far ptr sprite_set_1_size
    add     sp, 0x8
    sub     ax, ax
    push    ax
    call    far ptr sprite_clear_1_color
    add     sp, 0x2
    push    word ptr [bp+var_34+2]
    push    word ptr [bp+var_34]
    call    far ptr sprite_shape_to_1_alt
    add     sp, 0x4
    push    word ptr [bp+var_A]
    push    word ptr [bp+var_C]
    call    far ptr sprite_shape_to_1_alt
    add     sp, 0x4
    sub     ax, ax
    push    ax
    push    word ptr [wndsprite+2]
    push    word ptr [wndsprite]
    call    far ptr sprite_blit_to_video
    add     sp, 0x6
    mov     word ptr [bp+var_46], ax
    or      ax, ax
    jnz     LAB_1000_0f2b
    mov     ax, 0x1f4
    push    ax
    call    far ptr input_repeat_check
    add     sp, 0x2
    or      ax, ax
    jz      LAB_1000_0f34
LAB_1000_0f2b:
    mov     ax, 0x1
    pop     si
    pop     di
    mov     sp, bp
    pop     bp
    retf
LAB_1000_0f34:
    sub     ax, ax
    pop     si
    pop     di
    mov     sp, bp
    pop     bp
    retf
load_intro_resources_asm_ endp

; int __cdecl16far run_menu(void)
run_menu_asm_ proc far
    var_selectedmenu = byte ptr  -16
    var_menuhit = byte ptr  -14
    var_C      = byte ptr  -12
    var_keycode = word ptr  -10
    var_timedelta = word ptr   -8
    var_6      = byte ptr   -6
    var_4      = word ptr   -4
    var_2      = word ptr   -2

    push    bp
    mov     bp, sp
    sub     sp, 0x10
    mov     byte ptr [bp+var_6], 0xff
    mov     byte ptr [bp+var_selectedmenu], 0x0
    mov     byte ptr [bp+var_C], 0xff
    call    far ptr show_waiting
    mov     word ptr [waitflag], 0xb4
    mov     ax, 0xf
    push    ax
    mov     ax, 0xc8
    push    ax
    mov     ax, 0x140
    push    ax
    call    far ptr sprite_make_wnd
    add     sp, 0x6
    mov     word ptr [wndsprite], ax
    mov     word ptr [wndsprite+2], dx
    mov     ax, offset aSdmsel
    push    ax                                 ; char *
    mov     ax, 0x2
    push    ax                                 ; int
    call    far ptr file_load_resource
    add     sp, 0x4
    mov     word ptr [bp+var_4], ax
    mov     word ptr [bp+var_2], dx
    call    far ptr sprite_copy_wnd_to_1
    mov     ax, offset aScrn
    push    ax
    push    word ptr [bp+var_2]
    push    word ptr [bp+var_4]
    call    far ptr locate_shape_fatal
    add     sp, 0x6
    push    dx
    push    ax
    call    far ptr sprite_shape_to_1_alt
    add     sp, 0x4
    push    word ptr [bp+var_2]
    push    word ptr [bp+var_4]
    call    far ptr mmgr_free
    add     sp, 0x4
LAB_1000_0fb9:
    mov     al, byte ptr [bp+var_C]
    cmp     byte ptr [bp+var_selectedmenu], al
    jz      LAB_1000_0fef
    mov     al, byte ptr [bp+var_selectedmenu]
    mov     byte ptr [bp+var_C], al
    call    far ptr sprite_copy_wnd_to_1
    mov     al, byte ptr [bp+var_6]
    cbw
    push    ax
    push    word ptr [wndsprite+2]
    push    word ptr [wndsprite]
    call    far ptr sprite_blit_to_video
    add     sp, 0x6
    mov     byte ptr [bp+var_6], 0xfe
    call    far ptr sprite_copy_2_to_1_2
    call    far ptr sub_29772
LAB_1000_0fef:
    push    word ptr [word_407D0]
    push    word ptr [word_407CE]
    mov     ax, offset menu_buttons_y2
    push    ax
    mov     ax, offset menu_buttons_y1
    push    ax
    mov     ax, offset menu_buttons_x2
    push    ax
    mov     ax, offset menu_buttons_x1
    push    ax
    mov     al, byte ptr [bp+var_selectedmenu]
    cbw
    push    ax
    call    far ptr mouse_timer_sprite_unk
    add     sp, 0xe
    mov     word ptr [bp+var_timedelta], ax
    push    ax
    call    far ptr input_checking
    add     sp, 0x2
    mov     word ptr [bp+var_keycode], ax
    mov     ax, offset menu_buttons_y2
    push    ax
    mov     ax, offset menu_buttons_y1
    push    ax
    mov     ax, offset menu_buttons_x2
    push    ax
    mov     ax, offset menu_buttons_x1
    push    ax
    mov     ax, 0x5
    push    ax
    call    far ptr mouse_multi_hittest
    add     sp, 0xa
    mov     byte ptr [bp+var_menuhit], al
    cmp     al, 0xff
    jz      LAB_1000_1049
    mov     byte ptr [bp+var_selectedmenu], al
LAB_1000_1049:
    mov     ax, word ptr [bp+var_timedelta]
    add     word ptr [idle_counter], ax
    cmp     word ptr [idle_counter], 0x1770
    jle     LAB_1000_1062
    mov     word ptr [idle_counter], 0x0
    inc     byte ptr [idle_expired]
LAB_1000_1062:
    cmp     byte ptr [idle_expired], 0x0
    jz      LAB_1000_1072
    mov     byte ptr [bp+var_selectedmenu], 0x0 ; idle expired -> select menu 0 and keycode for enter
    mov     word ptr [bp+var_keycode], 0xd
LAB_1000_1072:
    cmp     word ptr [bp+var_keycode], 0x0
    jnz     LAB_1000_107b
    jmp     near ptr LAB_1000_0fb9
LAB_1000_107b:
    mov     ax, word ptr [bp+var_keycode]
    cmp     ax, 0xd                            ; enter
    jz      LAB_1000_10ba
    cmp     ax, 0x1b                           ; esc
    jz      LAB_1000_10b6
    cmp     ax, 0x20                           ; space
    jz      LAB_1000_10ba
    cmp     ax, 0x4b00                         ; arrow
    jz      LAB_1000_109a
    cmp     ax, 0x4d00                         ; arrow opposite direction
    jz      LAB_1000_10aa
    jmp     near ptr LAB_1000_0fb9
LAB_1000_109a:
    mov     al, byte ptr [bp+var_selectedmenu]
    cbw
    mov     bx, ax
    mov     al, byte ptr [bx+0x280]
LAB_1000_10a4:
    mov     byte ptr [bp+var_selectedmenu], al
    jmp     near ptr LAB_1000_0fb9
LAB_1000_10aa:
    mov     al, byte ptr [bp+var_selectedmenu]
    cbw
    mov     bx, ax
    mov     al, byte ptr [bx+0x286]
    jmp     LAB_1000_10a4
LAB_1000_10b6:
    mov     byte ptr [bp+var_selectedmenu], 0xff
LAB_1000_10ba:
    push    word ptr [wndsprite+2]
    push    word ptr [wndsprite]
    call    far ptr sprite_free_wnd
    mov     al, byte ptr [bp+var_selectedmenu]
    cbw
    mov     sp, bp
    pop     bp
    retf
run_menu_asm_ endp
    db 0x90

; void __cdecl16far run_tracks_menu(int skip_init)
run_tracks_menu_asm_ proc far
    var_16     = byte ptr  -22
    var_14     = byte ptr  -20
    var_12     = byte ptr  -18
    var_E      = word ptr  -14
    var_C      = word ptr  -12
    var_A      = byte ptr  -10
    var_9      = byte ptr   -9
    var_8      = byte ptr   -8
    var_7      = byte ptr   -7
    var_6      = byte ptr   -6
    var_4      = word ptr   -4
    var_2      = word ptr   -2
    skip_init  = word ptr    6

    push    bp
    mov     bp, sp
    sub     sp, 0x16
    push    di
    push    si
    mov     ax, 0x3
    push    ax
    call    far ptr ensure_file_exists
    add     sp, 0x2
    cmp     word ptr [bp+skip_init], 0x0
    jz      LAB_1000_10ed
    jmp     near ptr LAB_1000_156a
LAB_1000_10ed:
    mov     byte ptr [bp+var_6], 0xff
    mov     byte ptr [bp+var_16], 0x0
    mov     byte ptr [bp+var_12], 0xff
    call    far ptr show_waiting
    mov     word ptr [waitflag], 0x9b
    mov     ax, 0xf
    push    ax
    mov     ax, 0xc8
    push    ax
    mov     ax, 0x140
    push    ax
    call    far ptr sprite_make_wnd
    add     sp, 0x6
    mov     word ptr [wndsprite], ax
    mov     word ptr [wndsprite+2], dx
    les     bx, [td14_elem_map_main]
    mov     al, byte ptr es:[bx+0x384]
    sub     ah, ah
    push    ax
    call    far ptr load_skybox
    add     sp, 0x2
    call    far ptr shape3d_load_all
    mov     ax, 0xc8
    push    ax
    mov     ax, 0x140
    push    ax
    mov     ax, 0x28
    push    ax
    push    ax
    call    far ptr set_projection
    add     sp, 0x8
    mov     ax, 0xfffe
    push    ax
    call    far ptr init_game_state
    add     sp, 0x2
    call    far ptr sprite_copy_wnd_to_1
    push    word ptr [skybox_grd_color]
    call    far ptr sprite_clear_1_color
    add     sp, 0x2
    mov     ax, 0xc8
    push    ax
    sub     ax, ax
    push    ax
    mov     ax, 0x140
    push    ax
    sub     ax, ax
    push    ax
    call    far ptr sprite_set_1_size
    add     sp, 0x8
    call    far ptr draw_track_preview
    call    far ptr shape3d_free_all
    call    far ptr unload_skybox
    call    far ptr sprite_copy_wnd_to_1
    mov     ax, offset asc_3BA24
    push    ax
    mov     ax, offset g_res_id
    push    ax                                 ; char *
    call    far ptr _strcpy
    add     sp, 0x4
    mov     ax, offset gameconfig.game_trackname
    push    ax
    mov     ax, offset g_res_id
    push    ax                                 ; char *
    call    far ptr _strcat
    add     sp, 0x4
    mov     ax, offset asc_3BA26
    push    ax
    mov     ax, offset g_res_id
    push    ax                                 ; char *
    call    far ptr _strcat
    add     sp, 0x4
    sub     ax, ax
    push    ax
    push    word ptr [dialog_fnt_colour]
    mov     ax, 0x6
    push    ax
    mov     ax, offset g_res_id
    push    ax
    call    far ptr font_op2_alt
    add     sp, 0x2
    push    ax
    mov     ax, offset g_res_id
    push    ax
    call    far ptr intro_draw_text
    add     sp, 0xa
    sub     ax, ax
    push    ax
    push    cs
    call    near ptr highscore_write_a
    add     sp, 0x2
    or      al, al
    jz      LAB_1000_11f9
    jmp     near ptr LAB_1000_12e5
LAB_1000_11f9:
    mov     ax, 0x34
    imul    word ptr [word_46170]
    mov     di, ax
    les     bx, [td11_highscores]
    cmp     word ptr es:[bx+di+0x32], -0x1
    jnz     LAB_1000_1210
    jmp     near ptr LAB_1000_12e5
LAB_1000_1210:
    mov     ax, offset aHs0
    push    ax
    push    word ptr [mainresptr+2]
    push    word ptr [mainresptr]
    call    far ptr locate_text_res
    add     sp, 0x6
    push    dx
    push    ax
    mov     ax, offset g_res_id
    push    ax
    call    far ptr copy_string
    add     sp, 0x6
    sub     ax, ax
    push    ax
    push    word ptr [dialog_fnt_colour]
    mov     ax, 0x12
    push    ax
    mov     ax, offset g_res_id
    push    ax
    call    far ptr font_op2_alt
    add     sp, 0x2
    push    ax
    mov     ax, offset g_res_id
    push    ax
    call    far ptr intro_draw_text
    add     sp, 0xa
    push    word ptr [fontnptr+2]
    push    word ptr [fontnptr]
    call    far ptr font_set_fontdef2
    add     sp, 0x4
    lea     ax, [bp+var_A]
    push    ax
    sub     ax, ax
    push    ax
    push    cs
    call    near ptr print_highscore_entry
    add     sp, 0x4
    sub     ax, ax
    push    ax
    push    ax
    call    far ptr font_set_colour
    add     sp, 0x4
    mov     ax, 0x1e
    push    ax
    mov     ax, 0x10
    push    ax
    mov     al, byte ptr [bp+var_A]
    cbw
    add     ax, offset g_res_id
    push    ax
    call    far ptr font_draw_text
    add     sp, 0x6
    mov     ax, 0x1e
    push    ax
    mov     ax, 0x78
    push    ax
    mov     al, byte ptr [bp+var_9]
    cbw
    add     ax, offset g_res_id
    push    ax
    call    far ptr font_draw_text
    add     sp, 0x6
    mov     ax, 0x1e
    push    ax
    mov     ax, 0xe0
    push    ax
    mov     al, byte ptr [bp+var_8]
    cbw
    add     ax, 0xac74
    push    ax
    call    far ptr font_draw_text
    add     sp, 0x6
    mov     ax, 0x1e
    push    ax
    mov     ax, 0x110
    push    ax
    mov     al, byte ptr [bp+var_7]
    cbw
    add     ax, offset g_res_id
    push    ax
    call    far ptr font_draw_text
    add     sp, 0x6
    call    far ptr font_set_fontdef
LAB_1000_12e5:
    mov     ax, offset aTedit
    push    ax
    call    far ptr file_load_resfile
    add     sp, 0x2
    mov     word ptr [bp+var_4], ax
    mov     word ptr [bp+var_2], dx
    sub     ax, ax
    push    ax
    push    word ptr [word_407F8]
    push    word ptr [word_407F6]
    push    word ptr [word_407F4]
    mov     ax, 0x18
    push    ax
    mov     ax, 0x5e
    push    ax
    mov     ax, 0xac
    push    ax
    mov     ax, 0x11
    push    ax
    mov     ax, offset aBmt
    push    ax
    push    dx
    push    word ptr [bp+var_4]
    call    far ptr locate_text_res
    add     sp, 0x6
    push    dx
    push    ax
    call    far ptr draw_button
    add     sp, 0x14
    sub     ax, ax
    push    ax
    push    word ptr [word_407F8]
    push    word ptr [word_407F6]
    push    word ptr [word_407F4]
    mov     ax, 0x18
    push    ax
    mov     ax, 0x5e
    push    ax
    mov     ax, 0xac
    push    ax
    mov     ax, 0x71
    push    ax
    mov     ax, offset aBet
    push    ax
    push    word ptr [bp+var_2]
    push    word ptr [bp+var_4]
    call    far ptr locate_text_res
    add     sp, 0x6
    push    dx
    push    ax
    call    far ptr draw_button
    add     sp, 0x14
    sub     ax, ax
    push    ax
    push    word ptr [word_407F8]
    push    word ptr [word_407F6]
    push    word ptr [word_407F4]
    mov     ax, 0x18
    push    ax
    mov     ax, 0x5e
    push    ax
    mov     ax, 0xac
    push    ax
    mov     ax, 0xd1
    push    ax
    mov     ax, offset aBmm
    push    ax
    push    word ptr [bp+var_2]
    push    word ptr [bp+var_4]
    call    far ptr locate_text_res
    add     sp, 0x6
    push    dx
    push    ax
    call    far ptr draw_button
    add     sp, 0x14
    push    word ptr [bp+var_2]
    push    word ptr [bp+var_4]
    call    far ptr unload_resource
    add     sp, 0x4
LAB_1000_13b4:
    mov     al, byte ptr [bp+var_12]
    cmp     byte ptr [bp+var_16], al
    jz      LAB_1000_13e5
    mov     al, byte ptr [bp+var_16]
    mov     byte ptr [bp+var_12], al
    mov     al, byte ptr [bp+var_6]
    cbw
    push    ax
    push    word ptr [wndsprite+2]
    push    word ptr [wndsprite]
    call    far ptr sprite_blit_to_video
    add     sp, 0x6
    mov     byte ptr [bp+var_6], 0xfe
    call    far ptr sprite_copy_2_to_1_2
    call    far ptr sub_29772
LAB_1000_13e5:
    push    word ptr [word_407D0]
    push    word ptr [word_407CE]
    mov     ax, offset trackmenu_buttons_y2
    push    ax
    mov     ax, offset trackmenu_buttons_y1
    push    ax
    mov     ax, offset trackmenu_buttons_x2
    push    ax
    mov     ax, offset trackmenu_buttons_x1
    push    ax
    mov     al, byte ptr [bp+var_16]
    cbw
    push    ax
    call    far ptr mouse_timer_sprite_unk
    add     sp, 0xe
    mov     word ptr [bp+var_C], ax
    add     word ptr [idle_counter], ax
    cmp     word ptr [idle_counter], 0x1770
    jle     LAB_1000_1423
    mov     word ptr [idle_counter], 0x0
    inc     byte ptr [idle_expired]
LAB_1000_1423:
    push    word ptr [bp+var_C]
    call    far ptr input_checking
    add     sp, 0x2
    mov     word ptr [bp+var_E], ax
    mov     ax, offset trackmenu_buttons_y2
    push    ax
    mov     ax, offset trackmenu_buttons_y1
    push    ax
    mov     ax, offset trackmenu_buttons_x2
    push    ax
    mov     ax, offset trackmenu_buttons_x1
    push    ax
    mov     ax, 0x3
    push    ax
    call    far ptr mouse_multi_hittest
    add     sp, 0xa
    mov     byte ptr [bp+var_14], al
    cmp     al, 0xff
    jz      LAB_1000_1457
    mov     byte ptr [bp+var_16], al
LAB_1000_1457:
    cmp     byte ptr [idle_expired], 0x0
    jz      LAB_1000_1467
    mov     byte ptr [bp+var_16], 0x2
    mov     word ptr [bp+var_E], 0xd
LAB_1000_1467:
    cmp     word ptr [bp+var_E], 0x0
    jnz     LAB_1000_1470
    jmp     near ptr LAB_1000_13b4
LAB_1000_1470:
    mov     ax, word ptr [bp+var_E]
    cmp     ax, 0xd
    jz      LAB_1000_14bc
    cmp     ax, 0x1b
    jz      LAB_1000_14b8
    cmp     ax, 0x20
    jz      LAB_1000_14bc
    cmp     ax, 0x4b00
    jz      LAB_1000_1490
    cmp     ax, 0x4d00
    jz      LAB_1000_14a4
    jmp     near ptr LAB_1000_13b4
    db 0x90
LAB_1000_1490:
    cmp     byte ptr [bp+var_16], 0x0
    jz      LAB_1000_149c
    dec     byte ptr [bp+var_16]
    jmp     near ptr LAB_1000_13b4
LAB_1000_149c:
    mov     byte ptr [bp+var_16], 0x2
    jmp     near ptr LAB_1000_13b4
    db 0x90
LAB_1000_14a4:
    cmp     byte ptr [bp+var_16], 0x2
    jge     LAB_1000_14b0
    inc     byte ptr [bp+var_16]
    jmp     near ptr LAB_1000_13b4
LAB_1000_14b0:
    mov     byte ptr [bp+var_16], 0x0
    jmp     near ptr LAB_1000_13b4
    db 0x90
LAB_1000_14b8:
    mov     byte ptr [bp+var_16], 0xff
LAB_1000_14bc:
    mov     al, byte ptr [bp+var_16]
    cbw
    or      ax, ax
    jz      LAB_1000_14e2
    cmp     ax, 0x1
    jnz     LAB_1000_14cc
    jmp     near ptr LAB_1000_155a
LAB_1000_14cc:
    push    word ptr [wndsprite+2]
    push    word ptr [wndsprite]
    call    far ptr sprite_free_wnd
    add     sp, 0x4
    pop     si
    pop     di
    mov     sp, bp
    pop     bp
    retf
LAB_1000_14e2:
    mov     ax, offset aTrk
    push    ax
    push    word ptr [mainresptr+2]
    push    word ptr [mainresptr]
    call    far ptr locate_text_res
    add     sp, 0x6
    push    dx                                 ; int
    push    ax                                 ; int
    mov     ax, offset a_trk_0
    push    ax                                 ; int
    mov     ax, offset gameconfig.game_trackname
    push    ax
    mov     ax, 0x9c
    push    ax                                 ; char *
    call    far ptr do_fileselect_dialog
    add     sp, 0xa
    cbw
    mov     si, ax
    mov     ax, offset g_path_buf
    push    ax                                 ; char *
    mov     ax, offset a_trk_1
    push    ax                                 ; int
    mov     ax, offset gameconfig.game_trackname
    push    ax
    mov     ax, 0x9c
    push    ax                                 ; char *
    call    far ptr file_build_path
    add     sp, 0x8
    or      si, si
    jz      LAB_1000_1552
    push    word ptr [td14_elem_map_main+2]
    push    word ptr [td14_elem_map_main]
    mov     ax, offset g_path_buf
    push    ax
    call    far ptr file_read_fatal
    add     sp, 0x6
    push    word ptr [wndsprite+2]
    push    word ptr [wndsprite]
    call    far ptr sprite_free_wnd
    add     sp, 0x4
    jmp     near ptr LAB_1000_10ed
LAB_1000_1552:
    mov     byte ptr [bp+var_12], 0xff
    jmp     near ptr LAB_1000_13b4
    db 0x90
LAB_1000_155a:
    push    word ptr [wndsprite+2]
    push    word ptr [wndsprite]
    call    far ptr sprite_free_wnd
    add     sp, 0x4
LAB_1000_156a:
    call    far ptr check_input
    call    far ptr show_waiting
    mov     word ptr [waitflag], 0x82
    call    far ptr track_setup
    call    far ptr load_tracks_menu_shapes
    jmp     near ptr LAB_1000_10ed
run_tracks_menu_asm_ endp
    db 0x90

; int __cdecl16far highscore_write_a(int param_1)
highscore_write_a_asm_ proc far
    var_3A     = word ptr  -58
    var_38     = byte ptr  -56
    var_27     = byte ptr  -39
    var_F      = byte ptr  -15
    var_E      = byte ptr  -14
    var_6      = word ptr   -6
    var_4      = word ptr   -4
    var_2      = word ptr   -2
    param_1    = word ptr    6

    push    bp
    mov     bp, sp
    sub     sp, 0x3a
    push    di
    push    si
    mov     byte ptr [byte_449CE], 0xff
    mov     word ptr [bp+var_3A], 0x0
LAB_1000_159a:
    mov     bx, word ptr [bp+var_3A]
    shl     bx, 0x1
    mov     ax, word ptr [bp+var_3A]
    mov     word ptr [bx+word_46170], ax
    inc     word ptr [bp+var_3A]
    cmp     word ptr [bp+var_3A], 0x7
    jl      LAB_1000_159a
    mov     ax, offset g_path_buf
    push    ax                                 ; char *
    mov     ax, offset a_hig_0
    push    ax                                 ; int
    mov     ax, offset gameconfig.game_trackname
    push    ax
    mov     ax, 0x9c
    push    ax                                 ; char *
    call    far ptr file_build_path
    add     sp, 0x8
    cmp     word ptr [bp+param_1], 0x0
    jnz     LAB_1000_160a
    mov     byte ptr [g_is_busy], 0x1
    push    word ptr [td11_highscores+2]
    push    word ptr [td11_highscores]
    mov     ax, offset g_path_buf
    push    ax
    mov     ax, 0xa
    push    ax
    call    far ptr highscore_write_a_op
    add     sp, 0x8
    mov     word ptr [bp+var_4], ax
    mov     word ptr [bp+var_2], dx
    mov     byte ptr [g_is_busy], 0x0
    or      ax, dx
    jnz     LAB_1000_1602
LAB_1000_15f9:
    mov     ax, 0x1
    pop     si
    pop     di
    mov     sp, bp
    pop     bp
    retf
LAB_1000_1602:
    sub     ax, ax
    pop     si
    pop     di
    mov     sp, bp
    pop     bp
    retf
LAB_1000_160a:
    mov     ax, offset a______________
    push    ax
    lea     ax, [bp+var_38]
    push    ax                                 ; char *
    call    far ptr _strcpy
    add     sp, 0x4
    mov     ax, offset a_______________________
    push    ax
    lea     ax, [bp+var_27]
    push    ax                                 ; char *
    call    far ptr _strcpy
    add     sp, 0x4
    mov     byte ptr [bp+var_F], 0x0
    mov     ax, offset a______
    push    ax
    lea     ax, [bp+var_E]
    push    ax                                 ; char *
    call    far ptr _strcpy
    add     sp, 0x4
    mov     word ptr [bp+var_6], 0xffff
    mov     word ptr [bp+var_3A], 0x0
LAB_1000_1648:
    mov     ax, 0x34
    imul    word ptr [bp+var_3A]
    mov     bx, ax
    les     si, [td11_highscores]
    lea     di, [bx+si]
    lea     si, [bp+var_38]
    mov     cx, 0x1a
    rep movsw
    inc     word ptr [bp+var_3A]
    cmp     word ptr [bp+var_3A], 0x7
    jl      LAB_1000_1648
    mov     ax, 0x16c
    cwd
    push    dx
    push    ax
    push    word ptr [td11_highscores+2]
    push    word ptr [td11_highscores]
    mov     ax, offset g_path_buf
    push    ax
    call    far ptr file_write_fatal
    add     sp, 0xa
    mov     word ptr [bp+var_3A], ax
    or      ax, ax
    jnz     LAB_1000_168b
    jmp     near ptr LAB_1000_1602
LAB_1000_168b:
    jmp     near ptr LAB_1000_15f9
highscore_write_a_asm_ endp

; void __cdecl16far highscore_text_unk(void)
highscore_text_unk_asm_ proc far
    var_A      = byte ptr  -10
    var_8      = word ptr   -8
    var_6      = byte ptr   -6
    var_5      = byte ptr   -5
    var_4      = byte ptr   -4
    var_3      = byte ptr   -3
    var_2      = word ptr   -2

    push    bp
    mov     bp, sp
    sub     sp, 0xa
    call    far ptr sprite_copy_wnd_to_1
    mov     ax, offset aHs1
    push    ax
    push    word ptr [mainresptr+2]
    push    word ptr [mainresptr]
    call    far ptr locate_text_res
    add     sp, 0x6
    push    dx
    push    ax
    mov     ax, offset g_res_id
    push    ax
    call    far ptr copy_string
    add     sp, 0x6
    mov     ax, offset asc_3BAA2
    push    ax
    mov     ax, offset g_res_id
    push    ax                                 ; char *
    call    far ptr _strcat
    add     sp, 0x4
    mov     ax, offset gameconfig.game_trackname
    push    ax
    mov     ax, offset g_res_id
    push    ax                                 ; char *
    call    far ptr _strcat
    add     sp, 0x4
    mov     ax, offset asc_3BAA5
    push    ax
    mov     ax, offset g_res_id
    push    ax                                 ; char *
    call    far ptr _strcat
    add     sp, 0x4
    sub     ax, ax
    push    ax
    push    word ptr [dialog_fnt_colour]
    mov     ax, 0x5
    push    ax
    mov     ax, offset g_res_id
    push    ax
    call    far ptr font_op2_alt
    add     sp, 0x2
    push    ax
    mov     ax, 0xac74
    push    ax
    call    far ptr hiscore_draw_text
    add     sp, 0xa
    mov     ax, offset aHs2
    push    ax
    push    word ptr [mainresptr+2]
    push    word ptr [mainresptr]
    call    far ptr locate_text_res
    add     sp, 0x6
    push    dx
    push    ax
    mov     ax, offset g_res_id
    push    ax
    call    far ptr copy_string
    add     sp, 0x6
    sub     ax, ax
    push    ax
    push    word ptr [dialog_fnt_colour]
    mov     ax, 0xf
    push    ax
    mov     ax, 0x10
    push    ax
    mov     ax, offset g_res_id
    push    ax
    call    far ptr hiscore_draw_text
    add     sp, 0xa
    mov     ax, offset aHs3
    push    ax
    push    word ptr [mainresptr+2]
    push    word ptr [mainresptr]
    call    far ptr locate_text_res
    add     sp, 0x6
    push    dx
    push    ax
    mov     ax, offset g_res_id
    push    ax
    call    far ptr copy_string
    add     sp, 0x6
    sub     ax, ax
    push    ax
    push    word ptr [dialog_fnt_colour]
    mov     ax, 0xf
    push    ax
    mov     ax, 0x78
    push    ax
    mov     ax, offset g_res_id
    push    ax
    call    far ptr hiscore_draw_text
    add     sp, 0xa
    mov     ax, offset aHs5
    push    ax
    push    word ptr [mainresptr+2]
    push    word ptr [mainresptr]
    call    far ptr locate_text_res
    add     sp, 0x6
    push    dx
    push    ax
    mov     ax, offset g_res_id
    push    ax
    call    far ptr copy_string
    add     sp, 0x6
    sub     ax, ax
    push    ax
    push    word ptr [dialog_fnt_colour]
    mov     ax, 0xf
    push    ax
    mov     ax, 0xe0
    push    ax
    mov     ax, offset g_res_id
    push    ax
    call    far ptr hiscore_draw_text
    add     sp, 0xa
    mov     ax, offset aHs4
    push    ax
    push    word ptr [mainresptr+2]
    push    word ptr [mainresptr]
    call    far ptr locate_text_res
    add     sp, 0x6
    push    dx
    push    ax
    mov     ax, offset g_res_id
    push    ax
    call    far ptr copy_string
    add     sp, 0x6
    sub     ax, ax
    push    ax
    push    word ptr [dialog_fnt_colour]
    mov     ax, 0xf
    push    ax
    mov     ax, 0x110
    push    ax
    mov     ax, offset g_res_id
    push    ax
    call    far ptr hiscore_draw_text
    add     sp, 0xa
    push    word ptr [fontnptr+2]
    push    word ptr [fontnptr]
    call    far ptr font_set_fontdef2
    add     sp, 0x4
    mov     byte ptr [bp+var_A], 0x0
    jmp     near ptr LAB_1000_18a0
LAB_1000_181a:
    mov     word ptr [bp+var_2], 0x0
LAB_1000_181f:
    mov     al, byte ptr [bp+var_A]
    cbw
    mov     cx, ax
    shl     ax, 0x1
    shl     ax, 0x1
    add     ax, cx
    shl     ax, 0x1
    add     ax, 0x19
    mov     word ptr [bp+var_8], ax
    sub     ax, ax
    push    ax
    push    word ptr [bp+var_2]
    call    far ptr font_set_colour
    add     sp, 0x4
    push    word ptr [bp+var_8]
    mov     ax, 0x10
    push    ax
    mov     al, byte ptr [bp+var_6]
    cbw
    add     ax, offset g_res_id
    push    ax
    call    far ptr font_draw_text
    add     sp, 0x6
    push    word ptr [bp+var_8]
    mov     ax, 0x78
    push    ax
    mov     al, byte ptr [bp+var_5]
    cbw
    add     ax, offset g_res_id
    push    ax
    call    far ptr font_draw_text
    add     sp, 0x6
    push    word ptr [bp+var_8]
    mov     ax, 0xe0
    push    ax
    mov     al, byte ptr [bp+var_4]
    cbw
    add     ax, offset g_res_id
    push    ax
    call    far ptr font_draw_text
    add     sp, 0x6
    push    word ptr [bp+var_8]
    mov     ax, 0x110
    push    ax
    mov     al, byte ptr [bp+var_3]
    cbw
    add     ax, offset g_res_id
    push    ax
    call    far ptr font_draw_text
    add     sp, 0x6
    inc     byte ptr [bp+var_A]
; 7 times: no. of scoreboard 
; entries...  
LAB_1000_18a0:
    cmp     byte ptr [bp+var_A], 0x7
    jge     LAB_1000_18ca
    lea     ax, [bp+var_6]
    push    ax
    mov     al, byte ptr [bp+var_A]
    cbw
    push    ax
    push    cs
    call    near ptr print_highscore_entry
    add     sp, 0x4
    mov     al, byte ptr [byte_449CE]
    cmp     byte ptr [bp+var_A], al
    jz      LAB_1000_18c1
    jmp     near ptr LAB_1000_181a
LAB_1000_18c1:
    mov     ax, word ptr [dialogarg2]
    mov     word ptr [bp+var_2], ax
    jmp     near ptr LAB_1000_181f
LAB_1000_18ca:
    call    far ptr font_set_fontdef
    mov     sp, bp
    pop     bp
    retf
highscore_text_unk_asm_ endp
    db 0x90

; void __cdecl16far print_highscore_entry(int param_1, undefined1 * param_2)
print_highscore_entry_asm_ proc far
    var_4A     = byte ptr  -74
    var_39     = byte ptr  -57
    var_21     = byte ptr  -33
    var_20     = byte ptr  -32
    var_18     = word ptr  -24
    var_16     = byte ptr  -22
    var_14     = word ptr  -20
    var_12     = byte ptr  -18
    param_1    = word ptr    6
    param_2    = word ptr    8

    push    bp
    mov     bp, sp
    sub     sp, 0x4a
    push    di
    push    si
    mov     bx, word ptr [bp+param_1]
    shl     bx, 0x1
    mov     ax, 0x34
    imul    word ptr [bx+word_46170]
    add     ax, word ptr [td11_highscores]
    mov     dx, word ptr [td11_highscores+2]
    push    si
    lea     di, [bp+var_4A]
    mov     si, ax
    push    ss
    pop     es
    push    ds
    mov     ds, dx
    mov     cx, 0x1a
    rep movsw
    pop     ds
    pop     si
    mov     bx, word ptr [bp+param_2]
    mov     byte ptr [bx], 0x0
    lea     ax, [bp+var_4A]
    push    ax
    mov     ax, offset g_res_id
    push    ax                                 ; char *
    call    far ptr _strcpy
    add     sp, 0x4
    mov     ax, offset g_res_id
    push    ax                                 ; char *
    call    far ptr _strlen
    add     sp, 0x2
    inc     al
    mov     byte ptr [bp+var_16], al
    mov     bx, word ptr [bp+param_2]
    mov     byte ptr [bx+0x1], al
    lea     ax, [bp+var_39]
    push    ax
    mov     al, byte ptr [bp+var_16]
    cbw
    add     ax, offset g_res_id
    push    ax                                 ; char *
    call    far ptr _strcpy
    add     sp, 0x4
    mov     al, byte ptr [bp+var_16]
    cbw
    add     ax, offset g_res_id
    push    ax                                 ; char *
    call    far ptr _strlen
    add     sp, 0x2
    inc     al
    add     byte ptr [bp+var_16], al
    mov     bx, word ptr [bp+param_2]
    mov     al, byte ptr [bp+var_16]
    mov     byte ptr [bx+0x2], al
    mov     al, byte ptr [bp+var_16]
    cbw
    mov     si, ax
    add     si, offset g_res_id
    mov     byte ptr [si], 0x0
    cmp     byte ptr [bp+var_21], 0x1
    jnz     LAB_1000_1981
    mov     ax, offset asc_3BAB7
    push    ax
    push    si                                 ; char *
    call    far ptr _strcat
    add     sp, 0x4
LAB_1000_1981:
    lea     ax, [bp+var_20]
    push    ax
    mov     al, byte ptr [bp+var_16]
    cbw
    add     ax, offset g_res_id
    push    ax                                 ; char *
    call    far ptr _strcat
    add     sp, 0x4
    cmp     byte ptr [bp+var_21], 0x1
    jnz     LAB_1000_19af
    mov     ax, offset asc_3BAB9
    push    ax
    mov     al, byte ptr [bp+var_16]
    cbw
    add     ax, offset g_res_id
    push    ax                                 ; char *
    call    far ptr _strcat
    add     sp, 0x4
LAB_1000_19af:
    mov     al, byte ptr [bp+var_16]
    cbw
    add     ax, offset g_res_id
    push    ax                                 ; char *
    call    far ptr _strlen
    add     sp, 0x2
    inc     al
    add     byte ptr [bp+var_16], al
    mov     ax, word ptr [framespersec]
    mov     word ptr [bp+var_14], ax
    mov     word ptr [framespersec], 0x14
    cmp     word ptr [bp+var_18], -0x1
    jz      LAB_1000_19e0
    mov     ax, 0x1
    push    ax
    push    word ptr [bp+var_18]
    jmp     LAB_1000_19e7
    db 0x90
LAB_1000_19e0:
    mov     ax, 0x1
    push    ax                                 ; int
    sub     ax, ax
    push    ax
LAB_1000_19e7:
    lea     ax, [bp+var_12]
    push    ax                                 ; char *
    call    far ptr format_frame_as_string
    add     sp, 0x6
    mov     bx, word ptr [bp+param_2]
    mov     al, byte ptr [bp+var_16]
    mov     byte ptr [bx+0x3], al
    lea     ax, [bp+var_12]
    push    ax
    mov     al, byte ptr [bp+var_16]
    cbw
    add     ax, offset g_res_id
    push    ax                                 ; char *
    call    far ptr _strcpy
    add     sp, 0x4
    mov     ax, word ptr [bp+var_14]
    mov     word ptr [framespersec], ax
    pop     si
    pop     di
    mov     sp, bp
    pop     bp
    retf
print_highscore_entry_asm_ endp

; void __cdecl16far enter_hiscore(undefined2 param_1, undefined2 param_2, undefined2 param_3, byte param_4)
enter_hiscore_asm_ proc far
    var_3C     = word ptr  -60
    var_3A     = word ptr  -58
    var_38     = byte ptr  -56
    var_36     = byte ptr  -54
    var_25     = byte ptr  -37
    var_D      = byte ptr  -13
    var_C      = byte ptr  -12
    var_A      = byte ptr  -10
    var_9      = byte ptr   -9
    var_4      = word ptr   -4
    var_2      = byte ptr   -2
    param_1    = word ptr    6
    param_2    = word ptr    8
    param_3    = word ptr   10
    param_4    = byte ptr   12

    push    bp
    mov     bp, sp
    sub     sp, 0x3c
    push    di
    push    si
    cmp     word ptr [framespersec], 0xa
    jnz     LAB_1000_1a2e
    shl     word ptr [bp+param_1], 0x1
LAB_1000_1a2e:
    les     bx, [td11_highscores]
    mov     ax, word ptr [bp+param_1]
    cmp     word ptr es:[bx+0x16a], ax
    ja      LAB_1000_1a3f
    jmp     near ptr LAB_1000_1baa
LAB_1000_1a3f:
    mov     byte ptr [bp+var_38], 0x0
    jmp     LAB_1000_1a5d
    db 0x90
LAB_1000_1a46:
    cmp     byte ptr [bp+var_38], 0x7
    jge     LAB_1000_1a71
    mov     al, byte ptr [bp+var_38]
    cbw
    mov     si, ax
    mov     bx, si
    shl     bx, 0x1
    mov     word ptr [bx+word_46170], si
enter_hiscore_asm_ endp
    inc     byte ptr [bp-0x38]
LAB_1000_1a5d:
    mov     al, 0x34
    imul    byte ptr [bp-0x38]
    mov     di, ax
    les     bx, [td11_highscores]
    mov     ax, word ptr [bp+0x6]
    cmp     word ptr es:[bx+di+0x32], ax
    jbe     LAB_1000_1a46
LAB_1000_1a71:
    mov     al, byte ptr [bp-0x38]
    mov     byte ptr [bp-0x2], al
    mov     byte ptr [byte_449CE], al
    jmp     LAB_1000_1a8d
LAB_1000_1a7c:
    mov     al, byte ptr [bp-0x38]
    cbw
    mov     si, ax
    mov     bx, si
    shl     bx, 0x1
    mov     word ptr [bx+word_46172], si
    inc     byte ptr [bp-0x38]
LAB_1000_1a8d:
    cmp     byte ptr [bp-0x38], 0x6
    jl      LAB_1000_1a7c
    mov     al, byte ptr [bp-0x2]
    cbw
    mov     bx, ax
    shl     bx, 0x1
    mov     word ptr [bx+word_46170], 0x6
    mov     ax, word ptr [bp+0x6]
    mov     word ptr [bp-0x4], ax
    mov     byte ptr [bp-0x36], 0x0
    mov     ax, offset gnam_string
    push    ax
    lea     ax, [bp-0x25]
    push    ax                                 ; char *
    call    far ptr _strcpy
    add     sp, 0x4
    mov     al, byte ptr [bp+0xc]
    mov     byte ptr [bp-0xd], al
    cmp     byte ptr [gameconfig.game_opponenttype], 0x0
    jz      LAB_1000_1ae6
    mov     ax, offset unk_46464
    push    ax
    lea     ax, [bp-0xc]
    push    ax                                 ; char *
    call    far ptr _strcpy
    add     sp, 0x4
    mov     byte ptr [bp-0xa], 0x2f
    mov     ax, offset gsna_string
    push    ax
    lea     ax, [bp-0x9]
    jmp     LAB_1000_1aed
    db 0x90
LAB_1000_1ae6:
    mov     ax, offset asc_3BABB
    push    ax
    lea     ax, [bp-0xc]
LAB_1000_1aed:
    push    ax                                 ; char *
    call    far ptr _strcpy
    add     sp, 0x4
    les     bx, [td11_highscores]
    lea     di, [bx+0x138]
    lea     si, [bp-0x36]
    mov     cx, 0x1a
    rep movsw
    call    far ptr sprite_copy_wnd_to_1
    push    cs
    call    near ptr highscore_text_unk
    mov     ax, 0xffff
    push    ax
    push    word ptr [wndsprite+2]
    push    word ptr [wndsprite]
    call    far ptr sprite_blit_to_video
    add     sp, 0x6
    sub     ax, ax
    push    ax
    lea     ax, [bp-0x3c]
    push    ax
    push    word ptr [dialogarg2]
    mov     ax, 0xffff
    push    ax
    push    ax
    push    word ptr [bp+0xa]
    push    word ptr [bp+0x8]
    sub     ax, ax
    push    ax
    mov     ax, 0x3
    push    ax
    call    far ptr show_dialog
    add     sp, 0x12
    call    far ptr check_input
    mov     ax, offset (terraincenterpos+17*2)
    cwd
    push    dx                                 ; int
    push    ax                                 ; int
    push    word ptr [bp-0x3a]                 ; int
    push    word ptr [bp-0x3c]                 ; int
    mov     ax, 0x10
    push    ax
    mov     ax, offset byte_459E0
    push    ax                                 ; char *
    call    far ptr call_read_line
    add     sp, 0xc
    mov     ax, offset byte_459E0
    push    ax
    lea     ax, [bp-0x36]
    push    ax                                 ; char *
    call    far ptr _strcpy
    add     sp, 0x4
    les     bx, [td11_highscores]
    lea     di, [bx+0x138]
    lea     si, [bp-0x36]
    mov     cx, 0x1a
    rep movsw
    call    far ptr sprite_copy_wnd_to_1
    push    cs
    call    near ptr highscore_text_unk
    mov     ax, 0xffff
    push    ax
    push    word ptr [wndsprite+2]
    push    word ptr [wndsprite]
    call    far ptr sprite_blit_to_video
    add     sp, 0x6
    push    cs
    call    near ptr highscore_write_b
LAB_1000_1baa:
    push    cs
    call    near ptr highscore_text_unk
    pop     si
    pop     di
    mov     sp, bp
    pop     bp
    retf

; void __cdecl16far highscore_write_b(void)
highscore_write_b_asm_ proc far
    record_idx = word ptr  -366
    records    = byte ptr  -364

    push    bp
    mov     bp, sp
    sub     sp, 0x16e
    push    di
    push    si
    mov     word ptr [bp+record_idx], 0x0
LAB_1000_1bc3:
    mov     bx, word ptr [bp+record_idx]
    shl     bx, 0x1
    mov     ax, 0x34                           ; record size
    imul    word ptr [bx+word_46170]
    add     ax, word ptr [td11_highscores]
    mov     dx, word ptr [td11_highscores+2]
    mov     cx, ax
    mov     ax, 0x34
    mov     bx, dx
    imul    word ptr [bp+record_idx]
    mov     si, ax
    lea     di, [bp+si+0xfe94]
    mov     si, cx
    push    ss
    pop     es
    push    ds
    mov     ds, bx
    mov     cx, 0x1a
    rep movsw
    pop     ds
    inc     word ptr [bp+record_idx]
    cmp     word ptr [bp+record_idx], 0x7
    jl      LAB_1000_1bc3
    mov     ax, offset g_path_buf
    push    ax                                 ; char *
    mov     ax, offset a_hig
    push    ax                                 ; int
    mov     ax, offset gameconfig.game_trackname
    push    ax
    mov     ax, offset byte_3B80C
    push    ax                                 ; char *
    call    far ptr file_build_path
    add     sp, 0x8
    mov     byte ptr [g_is_busy], 0x1
    mov     ax, 0x16c
    cwd
    push    dx
    push    ax
    lea     ax, [bp+records]
    push    ss
    push    ax
    mov     ax, offset g_path_buf
    push    ax
    call    far ptr file_write_fatal
    add     sp, 0xa
    mov     byte ptr [g_is_busy], 0x0
    pop     si
    pop     di
    mov     sp, bp
    pop     bp
    retf
highscore_write_b_asm_ endp
    db 0x90

; void __stdcall16far run_car_menu(GAMEINFO * gameconfig_, byte * material, byte * transmission, int unk)
run_car_menu_asm_ proc far
    var_10C    = dword ptr -268
    var_108    = byte ptr  -264
    var_106    = byte ptr  -262
    var_104_rc = byte ptr  -260
    var_FC     = dword ptr -252
    var_carpospolarangle = word ptr  -248
    var_F6     = byte ptr  -246
    var_findfile = word ptr  -244
    var_F2     = byte ptr  -242
    var_caridindex = byte ptr  -240
    var_carids = byte ptr  -238
    local_ef   = byte ptr  -237
    local_ee   = byte ptr  -236
    local_ed   = byte ptr  -235
    local_ec   = byte ptr  -234
    var_rotationdelta = word ptr  -76
    var_4A     = word ptr  -74
    var_48     = word ptr  -72
    var_46     = byte ptr  -70
    var_44     = word ptr  -68
    var_42wnd  = dword ptr -66
    var_3E     = byte ptr  -62
    var_3C     = word ptr  -60
    var_3A     = word ptr  -58
    var_prevcaridindex = byte ptr  -56
    var_36     = word ptr  -54
    var_34     = word ptr  -52
    var_transshape = byte ptr  -50
    var_rotation = word ptr  -30
    var_1C     = byte ptr  -28
    var_1A_rc  = byte ptr  -26
    var_12     = word ptr  -18
    var_10_rc  = byte ptr  -16
    var_carspeed = word ptr   -8
    var_6      = byte ptr   -6
    var_carres = dword ptr  -4
    gameconfig_ = word ptr    6
    material   = word ptr    8
    transmission = word ptr   10
    unk        = word ptr   12

    push    bp
    mov     bp, sp
    sub     sp, 0x10c
    push    di
    push    si
    push    si
    lea     di, [bp+var_transshape]
    mov     si, offset carmenu_carpos
    push    ss
    pop     es
    movsw
    movsw
    movsw
    pop     si
    mov     word ptr [bp-0x2c], offset (game3dshapes+124*22).shape3d_numverts
    mov     word ptr [bp+var_transshape+10], 0x0
    mov     word ptr [bp+var_transshape+12], 0x0
    mov     word ptr [bp+var_transshape+16], 0x7530
    mov     ax, word ptr [slow_video_mgmt]
    mov     word ptr [slow_video_mgmt_copy], ax
    or      ax, ax
    jz      LAB_1000_1c82
    lea     ax, [bp+var_10_rc]
    mov     word ptr [bp+var_transshape+8], ax
    mov     byte ptr [bp+var_transshape+18], 0x8
    jmp     LAB_1000_1c86
LAB_1000_1c82:
    mov     byte ptr [bp+var_transshape+18], 0x0
LAB_1000_1c86:
    mov     ax, 0x2
    push    ax
    call    far ptr ensure_file_exists
    add     sp, 0x2
    mov     ax, offset a_res_0
    push    ax                                 ; int
    mov     ax, offset aCar
    push    ax
    sub     ax, ax
    push    ax                                 ; char *
    call    far ptr file_combine_and_find
    add     sp, 0x6
    mov     word ptr [bp+var_findfile], ax
    or      ax, ax
    jnz     LAB_1000_1cb8
    call    far ptr nullsub_1
    pop     si
    pop     di
    mov     sp, bp
    pop     bp
    retf
LAB_1000_1cb8:
    mov     bx, word ptr [bp+var_findfile]
    mov     al, byte ptr [bx+0x3]
    mov     byte ptr [bp+var_carids], al
    mov     al, byte ptr [bx+0x4]
    mov     byte ptr [bp+local_ef], al
    mov     al, byte ptr [bx+0x5]
    mov     byte ptr [bp+local_ee], al
    mov     al, byte ptr [bx+0x6]
    mov     byte ptr [bp+local_ed], al
    mov     byte ptr [bp+local_ec], 0x0
    mov     byte ptr [bp+var_46], 0x1
LAB_1000_1ce1:
    call    far ptr file_find_next_alt
    mov     word ptr [bp+var_findfile], ax
    or      ax, ax
    jz      LAB_1000_1d44
    mov     al, byte ptr [bp+var_46]
    cbw
    mov     cx, ax
    shl     ax, 0x1
    shl     ax, 0x1
    add     ax, cx
    mov     di, ax
    add     di, bp
    mov     bx, word ptr [bp+var_findfile]
    mov     al, byte ptr [bx+0x3]
    mov     byte ptr [di+0xff12], al
    mov     bx, word ptr [bp+var_findfile]
    mov     al, byte ptr [bx+0x4]
    mov     byte ptr [di+0xff13], al
    mov     bx, word ptr [bp+var_findfile]
    mov     al, byte ptr [bx+0x5]
    mov     byte ptr [di+0xff14], al
    mov     bx, word ptr [bp+var_findfile]
    mov     al, byte ptr [bx+0x6]
    mov     byte ptr [di+0xff15], al
    mov     al, byte ptr [bp+var_46]
    cbw
    mov     di, ax
    shl     di, 0x1
    shl     di, 0x1
    add     di, ax
    mov     byte ptr [bp+di+0xff16], 0x0
    inc     byte ptr [bp+var_46]
    cmp     byte ptr [bp+var_46], 0x20
    jnz     LAB_1000_1ce1
LAB_1000_1d44:
    call    far ptr nullsub_1
    cmp     byte ptr [bp+var_46], 0x1
    jg      LAB_1000_1d52
    jmp     near ptr LAB_1000_1e10
LAB_1000_1d52:
    mov     word ptr [bp+var_4A], 0x0
    jmp     near ptr LAB_1000_1dfb
LAB_1000_1d5a:
    inc     word ptr [bp+var_44]
LAB_1000_1d5d:
    mov     al, byte ptr [bp+var_46]
    cbw
    cmp     ax, word ptr [bp+var_44]
    ja      LAB_1000_1d69
    jmp     near ptr LAB_1000_1df8
LAB_1000_1d69:
    mov     di, word ptr [bp+var_44]
    mov     ax, di
    shl     di, 0x1
    shl     di, 0x1
    add     di, ax
    lea     ax, [bp+di+0xff12]
    push    ax
    mov     di, word ptr [bp+var_4A]
    mov     ax, di
    shl     di, 0x1
    shl     di, 0x1
    add     di, ax
    lea     ax, [bp+di+0xff12]
    push    ax                                 ; char *
    call    far ptr _strcmp
    add     sp, 0x4
    or      ax, ax
    jle     LAB_1000_1d5a
    mov     di, word ptr [bp+var_4A]
    mov     ax, di
    shl     di, 0x1
    shl     di, 0x1
    add     di, ax
    lea     ax, [bp+di+0xff12]
    push    ax
    mov     ax, offset g_res_id
    push    ax                                 ; char *
    call    far ptr _strcpy
    add     sp, 0x4
    mov     di, word ptr [bp+var_44]
    mov     ax, di
    shl     di, 0x1
    shl     di, 0x1
    add     di, ax
    lea     ax, [bp+di+0xff12]
    push    ax
    mov     di, word ptr [bp+var_4A]
    mov     ax, di
    shl     di, 0x1
    shl     di, 0x1
    add     di, ax
    lea     ax, [bp+di+0xff12]
    push    ax                                 ; char *
    call    far ptr _strcpy
    add     sp, 0x4
    mov     ax, offset g_res_id
    push    ax
    mov     di, word ptr [bp+var_44]
    mov     ax, di
    shl     di, 0x1
    shl     di, 0x1
    add     di, ax
    lea     ax, [bp+di+0xff12]
    push    ax                                 ; char *
    call    far ptr _strcpy
    add     sp, 0x4
    jmp     near ptr LAB_1000_1d5a
LAB_1000_1df8:
    inc     word ptr [bp+var_4A]
LAB_1000_1dfb:
    mov     al, byte ptr [bp+var_46]
    cbw
    dec     ax
    cmp     ax, word ptr [bp+var_4A]
    jle     LAB_1000_1e10
    mov     ax, word ptr [bp+var_4A]
    inc     ax
    mov     word ptr [bp+var_44], ax
    jmp     near ptr LAB_1000_1d5d
    db 0x90
LAB_1000_1e10:
    mov     byte ptr [bp+var_caridindex], 0x0
    mov     byte ptr [bp+var_F6], 0x0
    jmp     LAB_1000_1e20
LAB_1000_1e1c:
    inc     byte ptr [bp+var_F6]
LAB_1000_1e20:
    mov     al, byte ptr [bp+var_46]
    cmp     byte ptr [bp+var_F6], al
    jge     LAB_1000_1e68
    mov     al, byte ptr [bp+var_F6]
    cbw
    mov     cx, ax
    shl     ax, 0x1
    shl     ax, 0x1
    add     ax, cx
    mov     di, ax
    add     di, bp
    mov     bx, word ptr [bp+gameconfig_]
    mov     al, byte ptr [di+0xff12]
    cmp     byte ptr [bx], al
    jnz     LAB_1000_1e1c
    mov     al, byte ptr [di+0xff13]
    cmp     byte ptr [bx+0x1], al
    jnz     LAB_1000_1e1c
    mov     al, byte ptr [di+0xff14]
    cmp     byte ptr [bx+0x2], al
    jnz     LAB_1000_1e1c
    mov     al, byte ptr [di+0xff15]
    cmp     byte ptr [bx+0x3], al
    jnz     LAB_1000_1e1c
    mov     al, byte ptr [bp+var_F6]
    mov     byte ptr [bp+var_caridindex], al
LAB_1000_1e68:
    mov     word ptr [waitflag], 0x5a
    mov     byte ptr [bp+var_3E], 0xff
    mov     byte ptr [backlights_paint_override], 0x2d ; default backlights paintjob 2Dh
    mov     ax, offset aSdcsel
    push    ax
    call    far ptr file_load_shape2d_fatal_thunk
    add     sp, 0x2
    mov     word ptr [bp+var_36], ax
    mov     word ptr [bp+var_34], dx
    cmp     word ptr [bp+unk], 0x0
    jnz     LAB_1000_1ea2
    mov     ax, offset aMisc_0
    push    ax
    call    far ptr file_load_resfile
    add     sp, 0x2
    mov     word ptr [miscptr], ax
    mov     word ptr [miscptr+2], dx
LAB_1000_1ea2:
    cmp     word ptr [bp+unk], 0x0
    jnz     LAB_1000_1eab
    jmp     near ptr LAB_1000_1f4a
LAB_1000_1eab:
    mov     word ptr [rect_unk16.rc_right], 0xf0
    cmp     byte ptr [video_flag5_is0], 0x0
    jnz     LAB_1000_1ebb
    jmp     near ptr LAB_1000_1f50
LAB_1000_1ebb:
    mov     bx, word ptr [bp+unk]
    shl     bx, 0x1
    shl     bx, 0x1
    mov     ax, word ptr [bx+oppresources]
    mov     dx, word ptr [bx+oppresources+2]
    mov     word ptr [bp+var_10C], ax
    mov     word ptr [bp+var_10C+2], dx
    mov     ax, 0xf
    push    ax
    les     bx, [bp+var_10C]
    push    word ptr es:[bx+0x2]
    push    word ptr es:[bx]
    call    far ptr sprite_make_wnd
    add     sp, 0x6
    mov     word ptr [bp+var_42wnd], ax
    mov     word ptr [bp+var_42wnd+2], dx
    call    far ptr setup_mcgawnd2
    sub     ax, ax
    push    ax
    call    far ptr sprite_clear_1_color
    add     sp, 0x2
    mov     al, byte ptr [bp+unk]
    add     al, 0x30
    cbw
    push    ax
    push    word ptr [opp_res+2]
    push    word ptr [opp_res]
    call    far ptr nullsub_2
    add     sp, 0x6
    sub     ax, ax
    push    ax
    push    ax
    mov     bx, word ptr [bp+unk]
    shl     bx, 0x1
    shl     bx, 0x1
    push    word ptr [bx+oppresources+2]
    push    word ptr [bx+oppresources]
    call    far ptr sprite_putimage_transparent
    add     sp, 0x8
    sub     ax, ax
    push    ax
    push    ax
    les     bx, [bp+var_42wnd]
    push    word ptr es:[bx+0x2]
    push    word ptr es:[bx]
    call    far ptr sprite_clear_shape_alt
    add     sp, 0x8
    jmp     LAB_1000_1f50
    db 0x90
LAB_1000_1f4a:
    mov     word ptr [rect_unk16.rc_right], 0x140
LAB_1000_1f50:
    mov     byte ptr [bp+var_prevcaridindex], 0xff
    mov     word ptr [bp+var_rotation], 0x0
    mov     byte ptr [bp+var_106], 0x0
    call    far ptr sub_29772
    mov     word ptr [bp+var_rotationdelta], 0x0
    mov     byte ptr [bp+var_F2], 0xff
    mov     ax, 0x64
    push    ax
    mov     ax, 0x140
    push    ax
    mov     ax, 0x11
    push    ax
    mov     ax, 0x24
    push    ax
    call    far ptr set_projection
    add     sp, 0x8
    call    far ptr timer_get_delta_alt
    mov     ax, 0xf
    push    ax
    mov     ax, 0xc8
    push    ax
    mov     ax, 0x140
    push    ax
    call    far ptr sprite_make_wnd
    add     sp, 0x6
    mov     word ptr [wndsprite], ax
    mov     word ptr [wndsprite+2], dx
LAB_1000_1fa5:
    mov     al, byte ptr [bp+var_prevcaridindex]
    cmp     byte ptr [bp+var_caridindex], al
    jnz     LAB_1000_1fb1
    jmp     near ptr LAB_1000_2405
LAB_1000_1fb1:
    cmp     al, 0xff
    jz      LAB_1000_1fc8
    push    word ptr [bp+var_carres+2]
    push    word ptr [bp+var_carres]
    call    far ptr unload_resource
    add     sp, 0x4
    call    far ptr shape3d_free_car_shapes
LAB_1000_1fc8:
    mov     ax, offset gameconfig.game_opponentcarid
    push    ax
    mov     al, byte ptr [bp+var_caridindex]
    cbw
    mov     cx, ax
    shl     ax, 0x1
    shl     ax, 0x1
    add     ax, cx
    add     ax, bp
    sub     ax, 0xee                           ; var_EE = var_carids
    push    ax
    call    far ptr shape3d_load_car_shapes
    add     sp, 0x4
    mov     al, byte ptr [bp+var_caridindex]
    cbw
    mov     cx, ax
    shl     ax, 0x1
    shl     ax, 0x1
    add     ax, cx
    mov     di, ax
    add     di, bp
; aCarcoun[...] = var_carids[...]
    mov     al, byte ptr [di+0xff12]
    mov     byte ptr [(aCarcoun+3)], al
    mov     al, byte ptr [di+0xff13]
    mov     byte ptr [(aCarcoun+4)], al
    mov     al, byte ptr [di+0xff14]
    mov     byte ptr [(aCarcoun+5)], al
    mov     al, byte ptr [di+0xff15]
    mov     byte ptr [(aCarcoun+6)], al
    mov     ax, offset aCarcoun
    push    ax
    call    far ptr file_load_resfile
    add     sp, 0x2
    mov     word ptr [bp+var_carres], ax
    mov     word ptr [bp+var_carres+2], dx
    sub     ax, ax
    push    ax
    push    dx
    push    word ptr [bp+var_carres]
    call    far ptr setup_aero_trackdata
    add     sp, 0x6
    call    far ptr sprite_copy_wnd_to_1_clear
    sub     ax, ax
    push    ax
    push    word ptr [word_407F8]              ; 7
    push    word ptr [word_407F6]              ; 8
    push    word ptr [word_407F4]              ; F
    mov     ax, 0x61
    push    ax
    mov     ax, 0x140
    push    ax
    mov     ax, 0x67
    push    ax
    sub     ax, ax
    push    ax
    push    ax
    push    ax
    call    far ptr draw_button
    add     sp, 0x14
    sub     ax, ax
    push    ax
    push    word ptr [word_407F8]
    push    word ptr [word_407F6]
    push    word ptr [word_407F4]
    mov     ax, 0x55
    push    ax
    mov     ax, 0x46
    push    ax
    mov     ax, 0x6d
    push    ax
    mov     ax, 0x5
    push    ax
    sub     ax, ax
    push    ax
    push    ax
    call    far ptr draw_button
    add     sp, 0x14
    sub     ax, ax
    push    ax
    push    word ptr [word_407F8]
    push    word ptr [word_407F6]
    push    word ptr [word_407F4]
    mov     ax, 0x55
    push    ax
    mov     ax, 0x8c
    push    ax
    mov     ax, 0x6d
    push    ax
    mov     ax, 0x52
    push    ax
    sub     ax, ax
    push    ax
    push    ax
    call    far ptr draw_button
    add     sp, 0x14
    mov     ax, offset aGrap
    push    ax
    push    word ptr [bp+var_34]
    push    word ptr [bp+var_36]
    call    far ptr locate_shape_fatal
    add     sp, 0x6
    push    dx
    push    ax
    call    far ptr sprite_shape_to_1_alt
    add     sp, 0x4
    push    word ptr [fontnptr+2]
    push    word ptr [fontnptr]
    call    far ptr font_set_fontdef2
    add     sp, 0x4
    push    word ptr [dialog_fnt_colour]       ; the graph
    sub     ax, ax
    push    ax
    call    far ptr font_set_colour
    add     sp, 0x4
    mov     ax, 0x73
    push    ax
    mov     ax, 0x9
    push    ax
    mov     ax, offset a150
    push    ax
    call    far ptr font_draw_text
    add     sp, 0x6
    mov     ax, 0x87
    push    ax
    mov     ax, 0x9
    push    ax
    mov     ax, offset a100
    push    ax
    call    far ptr font_draw_text
    add     sp, 0x6
    mov     ax, 0x9b
    push    ax
    mov     ax, 0x9
    push    ax
    mov     ax, offset a50
    push    ax
    call    far ptr font_draw_text
    add     sp, 0x6
    mov     ax, 0xaf
    push    ax
    mov     ax, 0x9
    push    ax
    mov     ax, offset a0
    push    ax
    call    far ptr font_draw_text
    add     sp, 0x6
    mov     ax, 0xb9
    push    ax
    mov     ax, 0x1a
    push    ax
    mov     ax, offset a02040
    push    ax
    call    far ptr font_draw_text
    add     sp, 0x6
    call    far ptr font_set_fontdef
    sub     ax, ax
    push    ax
    push    word ptr [word_407F8]
    push    word ptr [word_407F6]
    push    word ptr [word_407F4]
    mov     ax, 0x10
    push    ax
    mov     ax, 0x56
    push    ax
    mov     ax, word ptr [carmenu_buttons_x1]
    inc     ax
    push    ax
    mov     ax, word ptr [carmenu_buttons_y1]
    inc     ax
    push    ax
    mov     ax, offset aBdo_0
    push    ax
    push    word ptr [miscptr+2]
    push    word ptr [miscptr]
    call    far ptr locate_text_res
    add     sp, 0x6
    push    dx
    push    ax
    call    far ptr draw_button
    add     sp, 0x14
    sub     ax, ax
    push    ax
    push    word ptr [word_407F8]
    push    word ptr [word_407F6]
    push    word ptr [word_407F4]
    mov     ax, 0x10
    push    ax
    mov     ax, 0x56
    push    ax
    mov     ax, word ptr [(carmenu_buttons_x1+1*2)]
    inc     ax
    push    ax
    mov     ax, word ptr [carmenu_buttons_y1]
    inc     ax
    push    ax
    mov     ax, offset aBnx_0
    push    ax
    push    word ptr [miscptr+2]
    push    word ptr [miscptr]
    call    far ptr locate_text_res
    add     sp, 0x6
    push    dx
    push    ax
    call    far ptr draw_button
    add     sp, 0x14
    sub     ax, ax
    push    ax
    push    word ptr [word_407F8]
    push    word ptr [word_407F6]
    push    word ptr [word_407F4]
    mov     ax, 0x10
    push    ax
    mov     ax, 0x56
    push    ax
    mov     ax, word ptr [(carmenu_buttons_x1+2*2)]
    inc     ax
    push    ax
    mov     ax, word ptr [carmenu_buttons_y1]
    inc     ax
    push    ax
    mov     ax, offset aBla_0
    push    ax
    push    word ptr [miscptr+2]
    push    word ptr [miscptr]
    call    far ptr locate_text_res
    add     sp, 0x6
    push    dx
    push    ax
    call    far ptr draw_button
    add     sp, 0x14
    mov     bx, word ptr [bp+transmission]
    cmp     byte ptr [bx], 0x0
    jz      LAB_1000_2226
    mov     ax, offset aBau
    jmp     LAB_1000_2229
LAB_1000_2226:
    mov     ax, offset aBma
LAB_1000_2229:
    push    ax
    push    word ptr [miscptr+2]
    push    word ptr [miscptr]
    call    far ptr locate_text_res
    add     sp, 0x6
    mov     word ptr [bp+var_3C], ax
    mov     word ptr [bp+var_3A], dx
    sub     ax, ax
    push    ax
    push    word ptr [word_407F8]
    push    word ptr [word_407F6]
    push    word ptr [word_407F4]
    mov     ax, 0x10
    push    ax
    mov     ax, 0x56
    push    ax
    mov     ax, word ptr [(carmenu_buttons_x1+3*2)]
    inc     ax
    push    ax
    mov     ax, word ptr [carmenu_buttons_y1]
    inc     ax
    push    ax
    push    dx
    push    word ptr [bp+var_3C]
    call    far ptr draw_button
    add     sp, 0x14
    sub     ax, ax
    push    ax
    push    word ptr [word_407F8]
    push    word ptr [word_407F6]
    push    word ptr [word_407F4]
    mov     ax, 0x10
    push    ax
    mov     ax, 0x56
    push    ax
    mov     ax, word ptr [(carmenu_buttons_x1+4*2)]
    inc     ax
    push    ax
    mov     ax, word ptr [carmenu_buttons_y1]
    inc     ax
    push    ax
    mov     ax, offset aBco
    push    ax
    push    word ptr [miscptr+2]
    push    word ptr [miscptr]
    call    far ptr locate_text_res
    add     sp, 0x6
    push    dx
    push    ax
    call    far ptr draw_button
    add     sp, 0x14
    mov     ax, word ptr [framespersec]
    mov     word ptr [bp+var_12], ax
    mov     word ptr [framespersec], 0x14
    mov     ax, 0xfffe
    push    ax
    call    far ptr init_game_state
    add     sp, 0x2
    mov     byte ptr [state.playerstate.car_transmission], 0x1
    mov     word ptr [bp+var_4A], 0x0
LAB_1000_22ce:
    mov     ax, offset simd_player
    push    ax
    mov     ax, offset state.playerstate.car_posWorld1.lx
    push    ax
    sub     ax, ax
    push    ax
    mov     ax, 0x1
    push    ax
    call    far ptr update_car_speed
    add     sp, 0x8
    mov     ax, word ptr [state.playerstate.car_speed]
    mov     cl, 0x8
    shr     ax, cl
    mov     word ptr [bp+var_carspeed], ax
    mov     ax, 0x96
    cwd
    push    dx
    push    ax
    mov     ax, word ptr [bp+var_carspeed]
    cwd
    mov     cl, 0x6
LAB_1000_22fb:
    shl     ax, 0x1
    rcl     dx, 0x1
    dec     cl
    jnz     LAB_1000_22fb
    push    dx
    push    ax
    call    far ptr __aFuldiv
    sub     ax, 0xb5
    neg     ax
    mov     word ptr [bp+var_48], ax
    cmp     ax, 0x75
    jc      LAB_1000_2344
    mov     ax, 0x26
    imul    word ptr [bp+var_4A]
    sub     dx, dx
    mov     cx, 0x320
    div     cx
    add     ax, 0x1c
    mov     word ptr [bp+var_44], ax
    push    word ptr [performGraphColor]
    push    word ptr [bp+var_48]
    push    ax
    call    far ptr putpixel_single_maybe
    add     sp, 0x6
    inc     word ptr [bp+var_4A]
    cmp     word ptr [bp+var_4A], 0x320
    jl      LAB_1000_22ce
; 320h = 20 * 40 iterations. 
; That is the number of 
; timesteps needed to draw 
; the graph on car selection 
; menu. 
;   
LAB_1000_2344:
    mov     ax, word ptr [bp+var_12]
    mov     word ptr [framespersec], ax
    push    word ptr [fontnptr+2]
    push    word ptr [fontnptr]
    call    far ptr font_set_fontdef2
    add     sp, 0x4
    mov     ax, offset aDes_1
    push    ax
    push    word ptr [bp+var_carres+2]
    push    word ptr [bp+var_carres]
    call    far ptr locate_text_res
    add     sp, 0x6
    mov     word ptr [bp+var_FC], ax
    mov     word ptr [bp+var_FC+2], dx
    mov     word ptr [bp+var_44], 0x0
    mov     word ptr [bp+var_48], 0x74
LAB_1000_237e:
    les     bx, [bp+var_FC]
    inc     word ptr [bp+var_FC]
    mov     al, byte ptr es:[bx]
    mov     byte ptr [bp+var_1C], al
    cmp     al, 0x5d
    jnz     LAB_1000_23be
    cmp     word ptr [bp+var_44], 0x0
    jz      LAB_1000_23b1
    mov     bx, word ptr [bp+var_44]
    mov     byte ptr [bx+0xac74], 0x0
    push    word ptr [bp+var_48]
    mov     ax, 0x58
    push    ax
    mov     ax, offset g_res_id
    push    ax
    call    far ptr font_draw_text
    add     sp, 0x6
LAB_1000_23b1:
    mov     word ptr [bp+var_44], 0x0
    mov     ax, word ptr [fontdef_unk_0E]
    add     word ptr [bp+var_48], ax
    jmp     LAB_1000_23cb
LAB_1000_23be:
    mov     bx, word ptr [bp+var_44]
    inc     word ptr [bp+var_44]
    mov     al, byte ptr [bp+var_1C]
    mov     byte ptr [bx+g_res_id], al
LAB_1000_23cb:
    les     bx, [bp+var_FC]
    cmp     byte ptr es:[bx], 0x0
    jnz     LAB_1000_237e
    call    far ptr font_set_fontdef
    call    far ptr timer_get_delta_alt
    mov     byte ptr [bp+var_F2], 0xff
    mov     word ptr [bp+var_104_rc], 0x0
    mov     word ptr [bp+var_104_rc+2], 0x140
    mov     word ptr [bp+var_104_rc+4], 0x0
    mov     word ptr [bp+var_104_rc+6], 0xc8
    mov     byte ptr [bp+var_108], 0x0
    mov     byte ptr [bp+var_6], 0x3
LAB_1000_2405:
    mov     ax, word ptr [bp+var_rotationdelta]
    add     word ptr [bp+var_rotation], ax
    mov     al, byte ptr [bp+var_6]
    cbw
    or      ax, ax
    jz      LAB_1000_2423
    cmp     ax, 0x1
    jnz     LAB_1000_241b
    jmp     near ptr LAB_1000_25fe
LAB_1000_241b:
    cmp     ax, 0x3
    jz      LAB_1000_2423
    jmp     near ptr LAB_1000_24de
LAB_1000_2423:
    push    word ptr [carmenu_carpos.vz]
    push    word ptr [carmenu_carpos.vy]
    call    far ptr polarAngle
    add     sp, 0x4
    mov     word ptr [bp+var_carpospolarangle], ax
    cmp     word ptr [slow_video_mgmt_copy], 0x0
    jz      LAB_1000_2448
    push    si
    lea     di, [bp+var_10_rc]
    mov     si, offset cliprect_unk
    jmp     LAB_1000_244f
    db 0x90
LAB_1000_2448:
    push    si
    lea     di, [bp+var_10_rc]
    mov     si, offset carmenu_cliprect
LAB_1000_244f:
    push    ss
    pop     es
    movsw
    movsw
    movsw
    movsw
    pop     si
    sub     ax, ax
    push    ax
    mov     ax, offset carmenu_cliprect
    push    ax
    sub     ax, ax
    push    ax
    push    word ptr [bp+var_carpospolarangle]
    push    ax
    call    far ptr select_cliprect_rotate
    add     sp, 0xa
    mov     bx, word ptr [bp+material]
    mov     al, byte ptr [(game3dshapes+124*22).shape3d_numpaints]
    cmp     byte ptr [bx], al
    jl      LAB_1000_247a
    mov     byte ptr [bx], 0x0
LAB_1000_247a:
    mov     ax, word ptr [bp+var_rotation]
    mov     word ptr [bp+var_transshape+14], ax
    mov     bx, word ptr [bp+material]
    mov     al, byte ptr [bx]
    mov     byte ptr [bp+var_transshape+19], al
    lea     ax, [bp+var_transshape]
    push    ax
    call    far ptr transformed_shape_op
    add     sp, 0x2
    mov     al, byte ptr [bp+var_prevcaridindex]
    cmp     byte ptr [bp+var_caridindex], al
    jnz     LAB_1000_24a6
    mov     word ptr [rect_unk16.rc_bottom], 0x5f
    jmp     LAB_1000_24ac
    db 0x90
LAB_1000_24a6:
    mov     word ptr [rect_unk16.rc_bottom], 0xc8
LAB_1000_24ac:
    mov     ax, offset rect_unk16
    push    ax
    lea     ax, [bp+var_10_rc]
    push    ax
    call    far ptr rect_intersect
    add     sp, 0x4
    lea     ax, [bp+var_1A_rc]
    push    ax
    lea     ax, [bp+var_104_rc]
    push    ax
    lea     ax, [bp+var_10_rc]
    push    ax
    call    far ptr rect_union
    add     sp, 0x6
    cmp     byte ptr [bp+var_6], 0x3
    jnz     LAB_1000_24da
    jmp     near ptr LAB_1000_25fe
LAB_1000_24da:
    mov     byte ptr [bp+var_6], 0x1
LAB_1000_24de:
    mov     al, byte ptr [bp+var_F2]
    cmp     byte ptr [bp+var_106], al
    jz      LAB_1000_2541
    cmp     al, 0xff
    jz      LAB_1000_2534
    call    far ptr sprite_copy_2_to_1_2
    mov     ax, word ptr [(carmenu_buttons_x2+4*2)]
    inc     ax
    push    ax
    push    word ptr [carmenu_buttons_x1]
    mov     ax, word ptr [carmenu_buttons_y2]
    add     ax, word ptr [video_flag2_is1]
    and     ax, word ptr [video_flag3_isFFFF]
    push    ax
    push    word ptr [carmenu_buttons_y1]
    call    far ptr sprite_set_1_size
    add     sp, 0x8
    call    far ptr mouse_draw_opaque_check
    les     bx, [wndsprite]
    push    word ptr es:[bx+0x2]
    push    word ptr es:[bx]
    call    far ptr sprite_putimage
    add     sp, 0x4
    call    far ptr mouse_draw_transparent_check
    call    far ptr sprite_copy_2_to_1_2
LAB_1000_2534:
    call    far ptr sub_29772
    mov     al, byte ptr [bp+var_106]
    mov     byte ptr [bp+var_F2], al
LAB_1000_2541:
    call    far ptr sprite_copy_2_to_1_2
    push    word ptr [word_407D0]
    push    word ptr [word_407CE]
    mov     ax, offset carmenu_buttons_x2
    push    ax
    mov     ax, offset carmenu_buttons_x1
    push    ax
    mov     ax, offset carmenu_buttons_y2
    push    ax
    mov     ax, offset carmenu_buttons_y1
    push    ax
    mov     al, byte ptr [bp+var_106]
    cbw
    push    ax
    call    far ptr mouse_timer_sprite_unk
    add     sp, 0xe
    mov     word ptr [bp+var_rotationdelta], ax
    add     word ptr [idle_counter], ax
    cmp     word ptr [idle_counter], 0x2ee0
    jle     LAB_1000_2585
    mov     word ptr [idle_counter], 0x0
    inc     byte ptr [idle_expired]
LAB_1000_2585:
    push    word ptr [bp+var_rotationdelta]
    call    far ptr input_checking
    add     sp, 0x2
    mov     si, ax
    mov     ax, offset carmenu_buttons_x2
    push    ax
    mov     ax, offset carmenu_buttons_x1
    push    ax
    mov     ax, offset carmenu_buttons_y2
    push    ax
    mov     ax, offset carmenu_buttons_y1
    push    ax
    mov     ax, 0x5
    push    ax
    call    far ptr mouse_multi_hittest
    add     sp, 0xa
    mov     byte ptr [bp+var_F6], al
    cmp     al, 0xff
    jz      LAB_1000_25ba
    mov     byte ptr [bp+var_106], al
LAB_1000_25ba:
    cmp     byte ptr [idle_expired], 0x0
    jz      LAB_1000_25c9
    mov     byte ptr [bp+var_106], 0x0
    mov     si, 0xd
LAB_1000_25c9:
    or      si, si
    jnz     LAB_1000_25d0
    jmp     near ptr LAB_1000_1fa5
LAB_1000_25d0:
    mov     ax, si
    cmp     ax, 0xd
    jnz     LAB_1000_25da
    jmp     near ptr LAB_1000_2732
LAB_1000_25da:
    cmp     ax, 0x1b
    jnz     LAB_1000_25e2
    jmp     near ptr LAB_1000_2732
LAB_1000_25e2:
    cmp     ax, 0x20
    jnz     LAB_1000_25ea
    jmp     near ptr LAB_1000_2732
LAB_1000_25ea:
    cmp     ax, 0x4800
    jnz     LAB_1000_25f2
    jmp     near ptr LAB_1000_2910
LAB_1000_25f2:
    cmp     ax, 0x5000
    jnz     LAB_1000_25fa
    jmp     near ptr LAB_1000_2926
LAB_1000_25fa:
    jmp     near ptr LAB_1000_1fa5
    db 0x90
LAB_1000_25fe:
    mov     byte ptr [bp+var_6], 0x0
    mov     byte ptr [bp+var_108], 0x1
    call    far ptr sprite_copy_wnd_to_1
    push    word ptr [bp+var_1A_rc+6]
    push    word ptr [bp+var_1A_rc+4]
    push    word ptr [bp+var_1A_rc+2]
    push    word ptr [bp+var_1A_rc]
    call    far ptr sprite_set_1_size
    add     sp, 0x8
    mov     ax, offset aStop_1
    push    ax
    push    word ptr [bp+var_34]
    push    word ptr [bp+var_36]
    call    far ptr locate_shape_fatal
    add     sp, 0x6
    push    dx
    push    ax
    call    far ptr sprite_putimage
    add     sp, 0x4
    call    far ptr get_a_poly_info
    call    far ptr sprite_copy_wnd_to_1
    push    word ptr [bp+var_1A_rc+6]
    push    word ptr [bp+var_1A_rc+4]
    push    word ptr [bp+var_1A_rc+2]
    push    word ptr [bp+var_1A_rc]
    call    far ptr sprite_set_1_size
    add     sp, 0x8
    push    si
    lea     di, [bp+var_104_rc]
    lea     si, [bp+var_10_rc]
    push    ss
    pop     es
    movsw
    movsw
    movsw
    movsw
    pop     si
    cmp     word ptr [bp+unk], 0x0
    jz      LAB_1000_26d1
    mov     al, byte ptr [bp+var_prevcaridindex]
    cmp     byte ptr [bp+var_caridindex], al
    jz      LAB_1000_26d1
    call    far ptr sprite_copy_wnd_to_1
    cmp     byte ptr [video_flag5_is0], 0x0
    jnz     LAB_1000_26b8
    mov     al, byte ptr [bp+unk]
    add     al, 0x30
    cbw
    push    ax
    push    word ptr [opp_res+2]
    push    word ptr [opp_res]
    call    far ptr nullsub_2
    add     sp, 0x6
    sub     ax, ax
    push    ax
    mov     ax, 0xf0
    push    ax
    mov     bx, word ptr [bp+unk]
    shl     bx, 0x1
    shl     bx, 0x1
    push    word ptr [bx+oppresources+2]
    push    word ptr [bx+oppresources]
    call    far ptr sprite_putimage_transparent
    jmp     LAB_1000_26ce
LAB_1000_26b8:
    sub     ax, ax
    push    ax
    mov     ax, 0xf0
    push    ax
    les     bx, [bp+var_42wnd]
    push    word ptr es:[bx+0x2]
    push    word ptr es:[bx]
    call    far ptr sprite_putimage_and_alt
LAB_1000_26ce:
    add     sp, 0x8
LAB_1000_26d1:
    call    far ptr sprite_copy_2_to_1_2
    push    word ptr [bp+var_1A_rc+6]
    push    word ptr [bp+var_1A_rc+4]
    push    word ptr [bp+var_1A_rc+2]
    push    word ptr [bp+var_1A_rc]
    call    far ptr sprite_set_1_size
    add     sp, 0x8
    call    far ptr mouse_draw_opaque_check
    cmp     byte ptr [bp+var_3E], 0xfe
    jz      LAB_1000_2710
    mov     al, byte ptr [bp+var_3E]
    cbw
    push    ax
    push    word ptr [wndsprite+2]
    push    word ptr [wndsprite]
    call    far ptr sprite_blit_to_video
    add     sp, 0x6
    mov     byte ptr [bp+var_3E], 0xfe
    jmp     LAB_1000_2723
LAB_1000_2710:
    les     bx, [wndsprite]
    push    word ptr es:[bx+0x2]
    push    word ptr es:[bx]
    call    far ptr sprite_putimage
    add     sp, 0x4
LAB_1000_2723:
    call    far ptr mouse_draw_transparent_check
    mov     al, byte ptr [bp+var_caridindex]
    mov     byte ptr [bp+var_prevcaridindex], al
    jmp     near ptr LAB_1000_24de
LAB_1000_2732:
    mov     al, byte ptr [bp+var_106]
    cbw
    or      ax, ax
    jz      _menu_done
    cmp     ax, 0x1
    jnz     LAB_1000_2743
    jmp     near ptr _menu_nextcar
LAB_1000_2743:
    cmp     ax, 0x2
    jnz     LAB_1000_274b
    jmp     near ptr _menu_prevcar
LAB_1000_274b:
    cmp     ax, 0x3
    jnz     LAB_1000_2753
    jmp     near ptr _menu_transmission
LAB_1000_2753:
    cmp     ax, 0x4
    jnz     LAB_1000_275b
    jmp     near ptr _menu_color
LAB_1000_275b:
    jmp     near ptr LAB_1000_1fa5
_menu_done:
    cmp     byte ptr [bp+var_108], 0x0
    jnz     LAB_1000_2768
    jmp     near ptr LAB_1000_1fa5
LAB_1000_2768:
    push    word ptr [wndsprite+2]
    push    word ptr [wndsprite]
    call    far ptr sprite_free_wnd
    add     sp, 0x4
    push    word ptr [bp+var_carres+2]
    push    word ptr [bp+var_carres]
    call    far ptr unload_resource
    add     sp, 0x4
    call    far ptr shape3d_free_car_shapes
    cmp     word ptr [bp+unk], 0x0
    jz      LAB_1000_27a6
    cmp     byte ptr [video_flag5_is0], 0x0
    jz      LAB_1000_27a6
    push    word ptr [bp+var_42wnd+2]
    push    word ptr [bp+var_42wnd]
    call    far ptr sprite_free_wnd
    add     sp, 0x4
LAB_1000_27a6:
    cmp     word ptr [bp+unk], 0x0
    jnz     LAB_1000_27bc
    push    word ptr [miscptr+2]
    push    word ptr [miscptr]
    call    far ptr unload_resource
    add     sp, 0x4
LAB_1000_27bc:
    push    word ptr [bp+var_34]
    push    word ptr [bp+var_36]
    call    far ptr mmgr_free
    add     sp, 0x4
    call    far ptr mouse_draw_opaque_check
    mov     al, byte ptr [bp+var_caridindex]
    cbw
    mov     di, ax
    shl     di, 0x1
    shl     di, 0x1
    add     di, ax
    mov     al, byte ptr [bp+di+0xff12]
    mov     bx, word ptr [bp+gameconfig_]
    mov     byte ptr [bx], al
    mov     al, byte ptr [bp+var_caridindex]
    cbw
    mov     di, ax
    shl     di, 0x1
    shl     di, 0x1
    add     di, ax
    mov     al, byte ptr [bp+di+0xff13]
    mov     bx, word ptr [bp+gameconfig_]
    mov     byte ptr [bx+0x1], al
    mov     al, byte ptr [bp+var_caridindex]
    cbw
    mov     di, ax
    shl     di, 0x1
    shl     di, 0x1
    add     di, ax
    mov     al, byte ptr [bp+di+0xff14]
    mov     bx, word ptr [bp+gameconfig_]
    mov     byte ptr [bx+0x2], al
    mov     al, byte ptr [bp+var_caridindex]
    cbw
    mov     di, ax
    shl     di, 0x1
    shl     di, 0x1
    add     di, ax
    mov     al, byte ptr [bp+di+0xff15]
    mov     bx, word ptr [bp+gameconfig_]
    mov     byte ptr [bx+0x3], al
    mov     byte ptr [idle_expired], 0x0
    pop     si
    pop     di
    mov     sp, bp
    pop     bp
    retf
    db 0x90
_menu_nextcar:
    inc     byte ptr [bp+var_caridindex]
    mov     al, byte ptr [bp+var_46]
    cmp     byte ptr [bp+var_caridindex], al
    jz      LAB_1000_2846
    jmp     near ptr LAB_1000_1fa5
LAB_1000_2846:
    mov     byte ptr [bp+var_caridindex], 0x0
    jmp     near ptr LAB_1000_1fa5
_menu_prevcar:
    dec     byte ptr [bp+var_caridindex]
    js      LAB_1000_2857
    jmp     near ptr LAB_1000_1fa5
LAB_1000_2857:
    mov     al, byte ptr [bp+var_46]
    dec     al
    mov     byte ptr [bp+var_caridindex], al
    jmp     near ptr LAB_1000_1fa5
    db 0x90
_menu_transmission:
    mov     bx, word ptr [bp+transmission]
    xor     byte ptr [bx], 0x1
    call    far ptr sprite_copy_wnd_to_1
    mov     bx, word ptr [bp+transmission]
    cmp     byte ptr [bx], 0x0
    jz      LAB_1000_287c
    mov     ax, offset aBau_0
    jmp     LAB_1000_287f
LAB_1000_287c:
    mov     ax, offset aBma_0
LAB_1000_287f:
    push    ax
    push    word ptr [miscptr+2]
    push    word ptr [miscptr]
    call    far ptr locate_text_res
    add     sp, 0x6
    mov     word ptr [bp+var_3C], ax
    mov     word ptr [bp+var_3A], dx
    sub     ax, ax
    push    ax
    push    word ptr [word_407F8]
    push    word ptr [word_407F6]
    push    word ptr [word_407F4]
    mov     ax, 0x10
    push    ax
    mov     ax, 0x56
    push    ax
    mov     ax, word ptr [(carmenu_buttons_x1+3*2)]
    inc     ax
    push    ax
    mov     ax, word ptr [carmenu_buttons_y1]
    inc     ax
    push    ax
    push    dx
    push    word ptr [bp+var_3C]
    call    far ptr draw_button
    add     sp, 0x14
    call    far ptr sprite_copy_2_to_1_2
    call    far ptr mouse_draw_opaque_check
    sub     ax, ax
    push    ax
    push    word ptr [word_407F8]
    push    word ptr [word_407F6]
    push    word ptr [word_407F4]
    mov     ax, 0x10
    push    ax
    mov     ax, 0x56
    push    ax
    mov     ax, word ptr [(carmenu_buttons_x1+3*2)]
    inc     ax
    push    ax
    mov     ax, word ptr [carmenu_buttons_y1]
    inc     ax
    push    ax
    push    word ptr [bp+var_3A]
    push    word ptr [bp+var_3C]
    call    far ptr draw_button
    add     sp, 0x14
    call    far ptr mouse_draw_transparent_check
    jmp     near ptr LAB_1000_1fa5
_menu_color:
    mov     bx, word ptr [bp+material]
    inc     byte ptr [bx]                      ; change color/material
    mov     byte ptr [bp+var_6], 0x3
    jmp     near ptr LAB_1000_1fa5
LAB_1000_2910:
    cmp     byte ptr [bp+var_106], 0x0
    jz      LAB_1000_291e
    dec     byte ptr [bp+var_106]
    jmp     near ptr LAB_1000_1fa5
LAB_1000_291e:
    mov     byte ptr [bp+var_106], 0x4
    jmp     near ptr LAB_1000_1fa5
LAB_1000_2926:
    cmp     byte ptr [bp+var_106], 0x4
    jge     LAB_1000_2934
    inc     byte ptr [bp+var_106]
    jmp     near ptr LAB_1000_1fa5
LAB_1000_2934:
    mov     byte ptr [bp+var_106], 0x0
    jmp     near ptr LAB_1000_1fa5
run_car_menu_asm_ endp

; void __cdecl16far run_opponent_menu(void)
run_opponent_menu_asm_ proc far
    var_1E     = byte ptr  -30
    var_1C     = byte ptr  -28
    var_1A     = dword ptr -26
    var_16     = byte ptr  -22
    var_14     = byte ptr  -20
    var_10     = word ptr  -16
    var_E      = word ptr  -14
    var_C      = word ptr  -12
    var_A      = word ptr  -10
    var_8      = word ptr   -8
    var_6      = byte ptr   -6
    var_4      = byte ptr   -4
    var_2      = byte ptr   -2

    push    bp
    mov     bp, sp
    sub     sp, 0x1e
    push    si
    mov     ax, 0x4
    push    ax
    call    far ptr ensure_file_exists
    add     sp, 0x2
    mov     ax, offset aMisc
    push    ax
    call    far ptr file_load_resfile
    add     sp, 0x2
    mov     word ptr [miscptr], ax
    mov     word ptr [miscptr+2], dx
    mov     ax, offset aSdosel
    push    ax                                 ; char *
    mov     ax, 0x8
    push    ax                                 ; int
    call    far ptr file_load_resource
    add     sp, 0x4
    mov     word ptr [opp_res], ax
    mov     word ptr [opp_res+2], dx
    mov     ax, offset oppresources
    push    ax
    mov     ax, offset aOpp0opp1opp2op
    push    ax
    push    dx
    push    word ptr [opp_res]
    call    far ptr locate_many_resources
    add     sp, 0x8
    mov     byte ptr [bp+var_1C], 0x0
    mov     byte ptr [bp+var_6], 0x0
    mov     byte ptr [bp+var_1E], 0xff
    mov     byte ptr [bp+var_4], 0xff
    call    far ptr sub_29772
LAB_1000_29a3:
    call    far ptr mouse_draw_transparent_check
LAB_1000_29a8:
    mov     al, byte ptr [gameconfig.game_opponenttype]
    cmp     byte ptr [bp+var_1E], al
    jnz     LAB_1000_29b3
    jmp     near ptr LAB_1000_2cfb
LAB_1000_29b3:
    cmp     byte ptr [bp+var_1E], 0xff
    jz      LAB_1000_29dd
    push    word ptr [wndsprite+2]
    push    word ptr [wndsprite]
    call    far ptr sprite_free_wnd
    add     sp, 0x4
    cmp     byte ptr [bp+var_6], 0x0
    jz      LAB_1000_29dd
    push    word ptr [bp+var_A]
    push    word ptr [bp+var_C]
    call    far ptr unload_resource
    add     sp, 0x4
LAB_1000_29dd:
    mov     ax, 0x4
    push    ax
    call    far ptr ensure_file_exists
    add     sp, 0x2
    cmp     byte ptr [gameconfig.game_opponenttype], 0x0
    jz      LAB_1000_2a10
    mov     al, byte ptr [gameconfig.game_opponenttype]
    add     al, 0x30
    mov     byte ptr [aOpp1_3], al
    mov     ax, offset aOpp1
    push    ax
    call    far ptr file_load_resfile
    add     sp, 0x2
    mov     word ptr [bp+var_C], ax
    mov     word ptr [bp+var_A], dx
    mov     byte ptr [bp+var_6], 0x1
    jmp     LAB_1000_2a14
LAB_1000_2a10:
    mov     byte ptr [bp+var_6], 0x0
LAB_1000_2a14:
    mov     ax, 0xf
    push    ax
    mov     ax, 0xc8
    push    ax
    mov     ax, 0x140
    push    ax
    call    far ptr sprite_make_wnd
    add     sp, 0x6
    mov     word ptr [wndsprite], ax
    mov     word ptr [wndsprite+2], dx
    mov     al, byte ptr [gameconfig.game_opponenttype]
    mov     byte ptr [bp+var_1E], al
    mov     byte ptr [bp+var_14], 0xff
    cmp     byte ptr [video_flag5_is0], 0x0
    jnz     LAB_1000_2a48
    call    far ptr sprite_copy_wnd_to_1
    jmp     LAB_1000_2a4d
    db 0x90
LAB_1000_2a48:
    call    far ptr setup_mcgawnd2
LAB_1000_2a4d:
    sub     ax, ax
    push    ax
    call    far ptr sprite_clear_1_color
    add     sp, 0x2
    mov     ax, 0x37
    push    ax
    push    word ptr [opp_res+2]
    push    word ptr [opp_res]
    call    far ptr nullsub_2
    add     sp, 0x6
    mov     ax, offset aScrn_0
    push    ax
    push    word ptr [opp_res+2]
    push    word ptr [opp_res]
    call    far ptr locate_shape_fatal
    add     sp, 0x6
    push    dx
    push    ax
    call    far ptr sub_34526
    add     sp, 0x4
    sub     ax, ax
    push    ax
    push    word ptr [word_407F8]
    push    word ptr [word_407F6]
    push    word ptr [word_407F4]
    mov     ax, 0x12
    push    ax
    mov     ax, 0x36
    push    ax
    mov     ax, word ptr [opponentmenu_buttons_y1]
    inc     ax
    push    ax
    mov     ax, 0x15
    push    ax
    mov     ax, offset aBla
    push    ax
    push    word ptr [miscptr+2]
    push    word ptr [miscptr]
    call    far ptr locate_text_res
    add     sp, 0x6
    push    dx
    push    ax
    call    far ptr draw_button
    add     sp, 0x14
    sub     ax, ax
    push    ax
    push    word ptr [word_407F8]
    push    word ptr [word_407F6]
    push    word ptr [word_407F4]
    mov     ax, 0x12
    push    ax
    mov     ax, 0x36
    push    ax
    mov     ax, word ptr [opponentmenu_buttons_y1]
    inc     ax
    push    ax
    mov     ax, 0x4d
    push    ax
    mov     ax, offset aBnx
    push    ax
    push    word ptr [miscptr+2]
    push    word ptr [miscptr]
    call    far ptr locate_text_res
    add     sp, 0x6
    push    dx
    push    ax
    call    far ptr draw_button
    add     sp, 0x14
    sub     ax, ax
    push    ax
    push    word ptr [word_407F8]
    push    word ptr [word_407F6]
    push    word ptr [word_407F4]
    mov     ax, 0x12
    push    ax
    mov     ax, 0x36
    push    ax
    mov     ax, word ptr [opponentmenu_buttons_y1]
    inc     ax
    push    ax
    mov     ax, 0x85
    push    ax
    mov     ax, offset aBcl
    push    ax
    push    word ptr [miscptr+2]
    push    word ptr [miscptr]
    call    far ptr locate_text_res
    add     sp, 0x6
    push    dx
    push    ax
    call    far ptr draw_button
    add     sp, 0x14
    sub     ax, ax
    push    ax
    push    word ptr [word_407F8]
    push    word ptr [word_407F6]
    push    word ptr [word_407F4]
    mov     ax, 0x12
    push    ax
    mov     ax, 0x36
    push    ax
    mov     ax, word ptr [opponentmenu_buttons_y1]
    inc     ax
    push    ax
    mov     ax, 0xbd
    push    ax
    mov     ax, offset aBca
    push    ax
    push    word ptr [miscptr+2]
    push    word ptr [miscptr]
    call    far ptr locate_text_res
    add     sp, 0x6
    push    dx
    push    ax
    call    far ptr draw_button
    add     sp, 0x14
    sub     ax, ax
    push    ax
    push    word ptr [word_407F8]
    push    word ptr [word_407F6]
    push    word ptr [word_407F4]
    mov     ax, 0x12
    push    ax
    mov     ax, 0x36
    push    ax
    mov     ax, word ptr [opponentmenu_buttons_y1]
    inc     ax
    push    ax
    mov     ax, 0xf5
    push    ax
    mov     ax, offset aBdo
    push    ax
    push    word ptr [miscptr+2]
    push    word ptr [miscptr]
    call    far ptr locate_text_res
    add     sp, 0x6
    push    dx
    push    ax
    call    far ptr draw_button
    add     sp, 0x14
    mov     al, byte ptr [gameconfig.game_opponenttype]
    add     al, 0x30
    cbw
    push    ax
    push    word ptr [opp_res+2]
    push    word ptr [opp_res]
    call    far ptr nullsub_2
    add     sp, 0x6
    mov     al, byte ptr [gameconfig.game_opponenttype]
    cbw
    mov     bx, ax
    shl     bx, 0x1
    shl     bx, 0x1
    push    word ptr [bx+oppresources+2]
    push    word ptr [bx+oppresources]
    call    far ptr sub_34526
    add     sp, 0x4
    mov     ax, 0x37
    push    ax
    push    word ptr [opp_res+2]
    push    word ptr [opp_res]
    call    far ptr nullsub_2
    add     sp, 0x6
    mov     ax, offset aClip
    push    ax
    push    word ptr [opp_res+2]
    push    word ptr [opp_res]
    call    far ptr locate_shape_fatal
    add     sp, 0x6
    push    dx
    push    ax
    call    far ptr sub_34526
    add     sp, 0x4
    cmp     byte ptr [video_flag5_is0], 0x0
    jz      LAB_1000_2c46
    sub     ax, ax
    push    ax
    push    ax
    les     bx, [wndsprite]
    push    word ptr es:[bx+0x2]
    push    word ptr es:[bx]
    call    far ptr sprite_clear_shape_alt
    add     sp, 0x8
    call    far ptr sprite_copy_wnd_to_1
LAB_1000_2c46:
    cmp     byte ptr [gameconfig.game_opponenttype], 0x0
    jz      LAB_1000_2c5a
    mov     ax, offset aDes_0
    push    ax
    push    word ptr [bp+var_A]
    push    word ptr [bp+var_C]
    jmp     LAB_1000_2c66
    db 0x90
LAB_1000_2c5a:
    mov     ax, offset aRac
    push    ax
    push    word ptr [miscptr+2]
    push    word ptr [miscptr]
LAB_1000_2c66:
    call    far ptr locate_text_res
    add     sp, 0x6
    mov     word ptr [bp+var_1A], ax
    mov     word ptr [bp+var_1A+2], dx
    push    word ptr [fontnptr+2]
    push    word ptr [fontnptr]
    call    far ptr font_set_fontdef2
    add     sp, 0x4
    push    word ptr [dialog_fnt_colour]
    sub     ax, ax
    push    ax
    call    far ptr font_set_colour
    add     sp, 0x4
    mov     word ptr [bp+var_8], 0x0
    mov     word ptr [bp+var_E], 0x0
LAB_1000_2c9d:
    les     bx, [bp+var_1A]
    inc     word ptr [bp+var_1A]
    mov     al, byte ptr es:[bx]
    mov     byte ptr [bp+var_2], al
    cmp     al, 0x5d
    jnz     LAB_1000_2ce0
    cmp     word ptr [bp+var_8], 0x0
    jz      LAB_1000_2cd2
    mov     bx, word ptr [bp+var_8]
    mov     byte ptr [bx+g_res_id], 0x0
    mov     ax, word ptr [bp+var_E]
    add     ax, 0x21
    push    ax
    mov     ax, 0xc
    push    ax
    mov     ax, offset g_res_id
    push    ax
    call    far ptr font_draw_text
    add     sp, 0x6
LAB_1000_2cd2:
    mov     word ptr [bp+var_8], 0x0
    mov     ax, word ptr [fontdef_unk_0E]
    add     word ptr [bp+var_E], ax
    jmp     LAB_1000_2ced
    db 0x90
LAB_1000_2ce0:
    mov     bx, word ptr [bp+var_8]
    inc     word ptr [bp+var_8]
    mov     al, byte ptr [bp+var_2]
    mov     byte ptr [bx+g_res_id], al
LAB_1000_2ced:
    les     bx, [bp+var_1A]
    cmp     byte ptr es:[bx], 0x0
    jnz     LAB_1000_2c9d
    call    far ptr font_set_fontdef
LAB_1000_2cfb:
    mov     al, byte ptr [bp+var_14]
    cmp     byte ptr [bp+var_1C], al
    jz      LAB_1000_2d2c
    mov     al, byte ptr [bp+var_1C]
    mov     byte ptr [bp+var_14], al
    mov     al, byte ptr [bp+var_4]
    cbw
    push    ax
    push    word ptr [wndsprite+2]
    push    word ptr [wndsprite]
    call    far ptr sprite_blit_to_video
    add     sp, 0x6
    mov     byte ptr [bp+var_4], 0xfe
    call    far ptr timer_get_delta_alt
    call    far ptr sub_29772
LAB_1000_2d2c:
    push    word ptr [word_407D0]
    push    word ptr [word_407CE]
    mov     ax, 0x462
    push    ax
    mov     ax, 0x458
    push    ax
    mov     ax, 0x44e
    push    ax
    mov     ax, 0x444
    push    ax
    mov     al, byte ptr [bp+var_1C]
    cbw
    push    ax
    call    far ptr mouse_timer_sprite_unk
    add     sp, 0xe
    mov     word ptr [bp+var_10], ax
    push    ax
    call    far ptr input_checking
    add     sp, 0x2
    mov     si, ax
    mov     ax, offset opponentmenu_buttons_y2
    push    ax
    mov     ax, offset opponentmenu_buttons_y1
    push    ax
    mov     ax, offset opponentmenu_buttons_x2
    push    ax
    mov     ax, offset opponentmenu_buttons_x1
    push    ax
    mov     ax, 0x5
    push    ax
    call    far ptr mouse_multi_hittest
    add     sp, 0xa
    mov     byte ptr [bp+var_16], al
    cmp     al, 0xff
    jz      LAB_1000_2d93
    cmp     byte ptr [gameconfig.game_opponenttype], 0x0
    jnz     LAB_1000_2d8d
    cmp     al, 0x3
    jz      LAB_1000_2d93
LAB_1000_2d8d:
    mov     al, byte ptr [bp+var_16]
    mov     byte ptr [bp+var_1C], al
LAB_1000_2d93:
    or      si, si
    jnz     LAB_1000_2d9a
    jmp     near ptr LAB_1000_29a8
LAB_1000_2d9a:
    mov     ax, si
    cmp     ax, 0xd
    jz      LAB_1000_2dbe
    cmp     ax, 0x1b
    jz      LAB_1000_2dbe
    cmp     ax, 0x20
    jz      LAB_1000_2dbe
    cmp     ax, 0x4b00
    jnz     LAB_1000_2db3
    jmp     near ptr LAB_1000_2ef6
LAB_1000_2db3:
    cmp     ax, 0x4d00
    jnz     LAB_1000_2dbb
    jmp     near ptr LAB_1000_2f20
LAB_1000_2dbb:
    jmp     near ptr LAB_1000_29a8
LAB_1000_2dbe:
    mov     al, byte ptr [bp+var_1C]
    cbw
    or      ax, ax
    jz      LAB_1000_2de0
    cmp     ax, 0x1
    jz      LAB_1000_2df6
    cmp     ax, 0x2
    jz      LAB_1000_2e0c
    cmp     ax, 0x3
    jz      LAB_1000_2e14
    cmp     ax, 0x4
    jnz     LAB_1000_2ddd
    jmp     near ptr LAB_1000_2e6a
LAB_1000_2ddd:
    jmp     near ptr LAB_1000_29a8
LAB_1000_2de0:
    dec     byte ptr [gameconfig.game_opponenttype]
    cmp     byte ptr [gameconfig.game_opponenttype], 0x1
    jl      LAB_1000_2dee
    jmp     near ptr LAB_1000_29a8
LAB_1000_2dee:
    mov     byte ptr [gameconfig.game_opponenttype], 0x6
    jmp     near ptr LAB_1000_29a8
LAB_1000_2df6:
    inc     byte ptr [gameconfig.game_opponenttype]
    cmp     byte ptr [gameconfig.game_opponenttype], 0x7
    jz      LAB_1000_2e04
    jmp     near ptr LAB_1000_29a8
LAB_1000_2e04:
    mov     byte ptr [gameconfig.game_opponenttype], 0x1
    jmp     near ptr LAB_1000_29a8
LAB_1000_2e0c:
    mov     byte ptr [gameconfig.game_opponenttype], 0x0
    jmp     near ptr LAB_1000_29a8
LAB_1000_2e14:
    cmp     byte ptr [gameconfig.game_opponenttype], 0x0
    jnz     LAB_1000_2e1e
    jmp     near ptr LAB_1000_29a8
LAB_1000_2e1e:
    call    far ptr check_input
    call    far ptr mouse_draw_opaque_check
    push    word ptr [wndsprite+2]
    push    word ptr [wndsprite]
    call    far ptr sprite_free_wnd
    add     sp, 0x4
    push    word ptr [bp+var_A]
    push    word ptr [bp+var_C]
    call    far ptr unload_resource
    add     sp, 0x4
    call    far ptr show_waiting
    mov     al, byte ptr [gameconfig.game_opponenttype]
    cbw
    push    ax
    mov     ax, offset gameconfig.game_opponenttransmission
    push    ax
    mov     ax, offset gameconfig.game_opponentmaterial
    push    ax
    mov     ax, offset gameconfig.game_opponentcarid
    push    ax
    push    cs
    call    near ptr run_car_menu
    add     sp, 0x8
    mov     byte ptr [bp+var_1E], 0xff
    jmp     near ptr LAB_1000_29a3
LAB_1000_2e6a:
    cmp     byte ptr [gameconfig.game_opponenttype], 0x0
    jz      LAB_1000_2ea2
    cmp     byte ptr [gameconfig.game_opponentcarid], 0xff
    jnz     LAB_1000_2ea7
    mov     al, byte ptr [gameconfig]
    mov     byte ptr [gameconfig.game_opponentcarid], al
    mov     al, byte ptr [gameconfig.(game_playercarid+1)]
    mov     byte ptr [gameconfig.(game_opponentcarid+1)], al
    mov     al, byte ptr [gameconfig.(game_playercarid+2)]
    mov     byte ptr [gameconfig.(game_opponentcarid+2)], al
    mov     al, byte ptr [gameconfig.(game_playercarid+3)]
    mov     byte ptr [gameconfig.(game_opponentcarid+3)], al
    mov     al, byte ptr [gameconfig.game_playermaterial]
    and     al, 0x1
    xor     al, 0x1
    mov     byte ptr [gameconfig.game_opponentmaterial], al
    mov     byte ptr [gameconfig.game_opponenttransmission], 0x0
    jmp     LAB_1000_2ea7
    db 0x90
LAB_1000_2ea2:
    mov     byte ptr [gameconfig.game_opponentcarid], 0xff
LAB_1000_2ea7:
    push    word ptr [wndsprite+2]
    push    word ptr [wndsprite]
    call    far ptr sprite_free_wnd
    add     sp, 0x4
    cmp     byte ptr [bp+var_6], 0x0
    jz      LAB_1000_2ecb
    push    word ptr [bp+var_A]
    push    word ptr [bp+var_C]
    call    far ptr unload_resource
    add     sp, 0x4
LAB_1000_2ecb:
    push    word ptr [opp_res+2]
    push    word ptr [opp_res]
    call    far ptr mmgr_free
    add     sp, 0x4
    push    word ptr [miscptr+2]
    push    word ptr [miscptr]
    call    far ptr unload_resource
    add     sp, 0x4
    call    far ptr mouse_draw_opaque_check
    pop     si
    mov     sp, bp
    pop     bp
    retf
    db 0x90
LAB_1000_2ef6:
    cmp     byte ptr [bp+var_1C], 0x0
    jz      LAB_1000_2f02
    dec     byte ptr [bp+var_1C]
    jmp     LAB_1000_2f06
    db 0x90
LAB_1000_2f02:
    mov     byte ptr [bp+var_1C], 0x4
LAB_1000_2f06:
    cmp     byte ptr [gameconfig.game_opponenttype], 0x0
    jz      LAB_1000_2f10
    jmp     near ptr LAB_1000_29a8
LAB_1000_2f10:
    cmp     byte ptr [bp+var_1C], 0x3
    jz      LAB_1000_2f19
    jmp     near ptr LAB_1000_29a8
LAB_1000_2f19:
    dec     byte ptr [bp+var_1C]
    jmp     near ptr LAB_1000_29a8
    db 0x90
LAB_1000_2f20:
    cmp     byte ptr [bp+var_1C], 0x4
    jge     LAB_1000_2f2c
    inc     byte ptr [bp+var_1C]
    jmp     LAB_1000_2f30
    db 0x90
LAB_1000_2f2c:
    mov     byte ptr [bp+var_1C], 0x0
LAB_1000_2f30:
    cmp     byte ptr [gameconfig.game_opponenttype], 0x0
    jz      LAB_1000_2f3a
    jmp     near ptr LAB_1000_29a8
LAB_1000_2f3a:
    cmp     byte ptr [bp+var_1C], 0x3
    jz      LAB_1000_2f43
    jmp     near ptr LAB_1000_29a8
LAB_1000_2f43:
    inc     byte ptr [bp+var_1C]
    jmp     near ptr LAB_1000_29a8
run_opponent_menu_asm_ endp
    db 0x90

; byte __cdecl16far run_option_menu(void)
run_option_menu_asm_ proc far
    var_6      = byte ptr   -6
    var_4      = byte ptr   -4
    var_2      = byte ptr   -2

    push    bp
    mov     bp, sp
    sub     sp, 0x6
    mov     ax, offset aMisc_1
    push    ax
    call    far ptr file_load_resfile
    add     sp, 0x2
    mov     word ptr [miscptr], ax
    mov     word ptr [miscptr+2], dx
    call    far ptr sprite_copy_2_to_1_2
    push    word ptr [word_407FA]
    call    far ptr sprite_clear_1_color
    add     sp, 0x2
    mov     ax, offset aGstu
    push    ax
    push    word ptr [miscptr+2]
    push    word ptr [miscptr]
    call    far ptr locate_shape_alt
    add     sp, 0x6
    push    dx
    push    ax
    mov     ax, offset g_res_id
    push    ax
    call    far ptr copy_string
    add     sp, 0x6
    sub     ax, ax
    push    ax
    push    word ptr [dialog_fnt_colour]
    mov     ax, 0x6
    push    ax
    mov     ax, offset g_res_id
    push    ax
    call    far ptr font_op2_alt
    add     sp, 0x2
    push    ax
    mov     ax, offset g_res_id
    push    ax
    call    far ptr intro_draw_text
    add     sp, 0xa
    mov     ax, offset aGver
    push    ax
    push    word ptr [miscptr+2]
    push    word ptr [miscptr]
    call    far ptr locate_shape_alt
    add     sp, 0x6
    push    dx
    push    ax
    mov     ax, offset g_res_id
    push    ax
    call    far ptr copy_string
    add     sp, 0x6
    sub     ax, ax
    push    ax
    push    word ptr [dialog_fnt_colour]
    mov     ax, 0x10
    push    ax
    mov     ax, offset g_res_id
    push    ax
    call    far ptr font_op2_alt
    add     sp, 0x2
    push    ax
    mov     ax, offset g_res_id
    push    ax
    call    far ptr intro_draw_text
    add     sp, 0xa
    mov     byte ptr [bp+var_4], 0x1
LAB_1000_3004:
    sub     ax, ax
    push    ax
    push    ax
    push    word ptr [dialogarg2]
    mov     ax, 0xffff
    push    ax
    push    ax
    mov     ax, offset aMop
    push    ax
    push    word ptr [miscptr+2]
    push    word ptr [miscptr]
    call    far ptr locate_text_res
    add     sp, 0x6
    push    dx
    push    ax
    mov     ax, 0x1
    push    ax
    mov     ax, 0x2
    push    ax
    call    far ptr show_dialog
    add     sp, 0x12
    mov     byte ptr [bp+var_2], al
    cbw
    sub     ax, 0xffff
    cmp     ax, 0x7
    jbe     LAB_1000_3046
    jmp     near ptr default
LAB_1000_3046:
    add     ax, ax
    xchg    ax, bx
switchD:
    jmp     word ptr cs:[bx+off_1314A]
caseD_0:
    cmp     byte ptr [byte_3B8F2], 0x0
    jz      LAB_1000_305c
    mov     byte ptr [bp-0x6], 0x2
    jmp     LAB_1000_306e
    db 0x90
LAB_1000_305c:
    cmp     byte ptr [byte_3FE00], 0x0
    jz      LAB_1000_306a
    mov     byte ptr [bp-0x6], 0x1
    jmp     LAB_1000_306e
    db 0x90
LAB_1000_306a:
    mov     byte ptr [bp-0x6], 0x0
LAB_1000_306e:
    mov     al, byte ptr [bp-0x6]
    cbw
    push    ax
    sub     ax, ax
    push    ax
    push    word ptr [performGraphColor]
    mov     ax, 0xffff
    push    ax
    push    ax
    mov     ax, offset aMid
    push    ax
    push    word ptr [miscptr+2]
    push    word ptr [miscptr]
    call    far ptr locate_text_res
    add     sp, 0x6
    push    dx
    push    ax
    mov     ax, 0x1
    push    ax
    mov     ax, 0x2
    push    ax
    call    far ptr show_dialog
    add     sp, 0x12
    mov     byte ptr [bp-0x2], al
    cbw
    or      ax, ax
    jz      LAB_1000_30ba
    cmp     ax, 0x1
    jz      LAB_1000_30c2
    cmp     ax, 0x2
    jz      LAB_1000_30ca
    jmp     near ptr default
LAB_1000_30ba:
    call    far ptr do_key_restext
    jmp     near ptr default
LAB_1000_30c2:
    call    far ptr do_joy_restext
    jmp     near ptr default
LAB_1000_30ca:
    call    far ptr do_mou_restext
    jmp     near ptr default
caseD_1:
    call    far ptr do_mof_restext
    jmp     near ptr default
caseD_2:
    call    far ptr do_sonsof_restext
    jmp     default
    db 0x90
caseD_3:
    mov     ax, offset aRep_0
    push    ax
    push    word ptr [mainresptr+2]
    push    word ptr [mainresptr]
    call    far ptr locate_text_res
    add     sp, 0x6
    push    dx                                 ; int
    push    ax                                 ; int
    mov     ax, offset a_rpl_0
    push    ax                                 ; int
    mov     ax, offset aDefault_1
    push    ax
    mov     ax, offset byte_3B85E
    push    ax                                 ; char *
    call    far ptr do_fileselect_dialog
    add     sp, 0xa
    mov     byte ptr [bp-0x6], al
    or      al, al
    jz      default
    mov     word ptr [waitflag], 0x96
    call    far ptr show_waiting
    mov     ax, offset aDefault_1
    push    ax
    mov     ax, offset byte_3B85E
    push    ax                                 ; char *
    call    far ptr file_load_replay
    add     sp, 0x4
    mov     byte ptr [bp-0x4], 0x1
    jmp     LAB_1000_3163
caseD_4:
    call    far ptr show_graphic_levels_menu
    jmp     default
    db 0x90
caseD_5_:
    call    far ptr do_dos_restext
    jmp     default
    db 0x90
caseD_ff:
    mov     byte ptr [bp-0x4], 0x0
    jmp     default
off_1314A:
    dw caseD_ff
    dw caseD_0
    dw caseD_1
    dw caseD_2
    dw caseD_3
    dw caseD_4
    dw caseD_5_
    dw caseD_ff
default:
    cmp     byte ptr [bp+var_4], 0x0
    jz      LAB_1000_3163
    jmp     near ptr LAB_1000_3004
LAB_1000_3163:
    push    word ptr [miscptr+2]
    push    word ptr [miscptr]
    call    far ptr unload_resource
    mov     al, byte ptr [bp+var_4]
    cbw
    mov     sp, bp
    pop     bp
    retf
run_option_menu_asm_ endp

; int __cdecl16far end_hiscore(void)
end_hiscore_asm_ proc far
    var_9E     = word ptr  -158
    var_9C     = word ptr  -156
    var_9A     = byte ptr  -154
    var_98     = byte ptr  -152
    var_selectedmenu = byte ptr  -146
    var_90     = word ptr  -144
    var_8E     = byte ptr  -142
    var_8C     = word ptr  -140
    var_8A     = word ptr  -138
    var_88     = word ptr  -136
    var_86     = dword ptr -134
    var_menuhit = byte ptr  -130
    var_80     = word ptr  -128
    var_7E     = word ptr  -126
    var_7C     = word ptr  -124
    var_7A     = word ptr  -122
    var_78     = byte ptr  -120
    var_72     = word ptr  -114
    var_70     = word ptr  -112
    var_6E     = byte ptr  -110
    var_6C     = byte ptr  -108
    var_6A     = byte ptr  -106
    var_68     = word ptr  -104
    var_66     = word ptr  -102
    var_64     = byte ptr  -100
    var_62     = byte ptr  -98
    var_5C     = word ptr  -92
    var_5A     = word ptr  -90
    var_58     = word ptr  -88
    var_56     = dword ptr -86
    var_52     = byte ptr  -82
    var_50     = word ptr  -80
    var_4E     = word ptr  -78
    var_4C     = word ptr  -76
    var_4A     = dword ptr -74
    var_46     = dword ptr -70
    var_42     = word ptr  -66
    var_40     = word ptr  -64
    var_3E     = byte ptr  -62
    var_3C     = byte ptr  -60
    var_1C     = word ptr  -28
    var_1A     = word ptr  -26
    var_18     = byte ptr  -24
    var_16     = byte ptr  -22
    var_14     = byte ptr  -20
    var_12     = byte ptr  -18
    var_11     = byte ptr  -17
    var_10     = byte ptr  -16

    push    bp
    mov     bp, sp
    sub     sp, 0x9e
    push    di
    push    si
    mov     ax, 0x4
    push    ax
    call    far ptr ensure_file_exists
    add     sp, 0x2
    mov     ax, offset aMisc_2
    push    ax
    call    far ptr file_load_resfile
    add     sp, 0x2
    mov     word ptr [bp+var_4E], ax
    mov     word ptr [bp+var_4C], dx
    cmp     byte ptr [gameconfig.game_opponenttype], 0x0
    jz      LAB_1000_31c0
    mov     al, byte ptr [gameconfig.game_opponenttype]
    add     al, 0x30
    mov     byte ptr [aOpp1_3], al
    mov     ax, offset aOpp1
    push    ax
    call    far ptr file_load_resfile
    add     sp, 0x2
    mov     word ptr [bp+var_68], ax
    mov     word ptr [bp+var_66], dx
LAB_1000_31c0:
    mov     ax, 0xf
    push    ax
    mov     ax, 0xc8
    push    ax
    mov     ax, 0x140
    push    ax
    call    far ptr sprite_make_wnd
    add     sp, 0x6
    mov     word ptr [wndsprite], ax
    mov     word ptr [wndsprite+2], dx
    cmp     byte ptr [video_flag5_is0], 0x0
    jz      LAB_1000_31fc
    mov     ax, 0xf
    push    ax
    mov     ax, 0x64
    push    ax
    mov     ax, 0xc8
    push    ax
    call    far ptr sprite_make_wnd
    add     sp, 0x6
    mov     word ptr [bp+var_46], ax
    mov     word ptr [bp+var_46+2], dx
LAB_1000_31fc:
    mov     byte ptr [bp+var_52], 0xff
    call    far ptr sprite_copy_wnd_to_1_clear
    sub     ax, ax
    push    ax
    push    word ptr [word_407F8]
    push    word ptr [word_407F6]
    push    word ptr [word_407F4]
    mov     ax, 0x64
    push    ax
    mov     ax, 0x140
    push    ax
    sub     ax, ax
    push    ax
    push    ax
    push    ax
    push    ax
    call    far ptr draw_button
    add     sp, 0x14
    sub     ax, ax
    push    ax
    push    word ptr [word_407F8]
    push    word ptr [word_407F6]
    push    word ptr [word_407F4]
    mov     ax, 0x63
    push    ax
    mov     ax, 0x140
    push    ax
    mov     ax, 0x65
    push    ax
    sub     ax, ax
    push    ax
    push    ax
    push    ax
    call    far ptr draw_button
    add     sp, 0x14
    mov     word ptr [bp+var_70], 0x6b
    mov     ax, offset aElt
    push    ax
    push    word ptr [bp+var_4C]
    push    word ptr [bp+var_4E]
    call    far ptr locate_text_res
    add     sp, 0x6
    push    dx
    push    ax
    mov     ax, offset g_res_id
    push    ax
    call    far ptr copy_string
    add     sp, 0x6
    cmp     word ptr [gState_total_finish_time], 0x0
    jnz     LAB_1000_3281
    jmp     near ptr LAB_1000_3354
LAB_1000_3281:
    mov     ax, 0x1
    push    ax                                 ; int
    mov     ax, word ptr [gState_total_finish_time]
    sub     ax, word ptr [gState_penalty]
    push    ax
    lea     ax, [bp+var_12]
    push    ax                                 ; char *
    call    far ptr format_frame_as_string
    add     sp, 0x6
    lea     ax, [bp+var_12]
    push    ax
    mov     ax, offset g_res_id
    push    ax                                 ; char *
    call    far ptr _strcat
    add     sp, 0x4
    test    byte ptr [byte_43966], 0x2
    jz      LAB_1000_32dc
    mov     ax, offset aCon
    push    ax
    push    word ptr [bp+var_4C]
    push    word ptr [bp+var_4E]
    call    far ptr locate_text_res
    add     sp, 0x6
    push    dx
    push    ax
    mov     ax, offset g_res_id
    push    ax                                 ; char *
    call    far ptr _strlen
    add     sp, 0x2
    add     ax, offset g_res_id
    push    ax
    call    far ptr copy_string
    add     sp, 0x6
LAB_1000_32dc:
    sub     ax, ax
    push    ax
    push    word ptr [dialog_fnt_colour]
    push    word ptr [bp+var_70]
    mov     ax, offset g_res_id
    push    ax
    call    far ptr font_op2_alt
    add     sp, 0x2
    push    ax
    mov     ax, offset g_res_id
    push    ax
    call    far ptr hiscore_draw_text
    add     sp, 0xa
    add     word ptr [bp+var_70], 0xa
    cmp     word ptr [gState_penalty], 0x0
    jnz     LAB_1000_330d
    jmp     near ptr LAB_1000_33a7
; Penalty time:  
LAB_1000_330d:
    mov     ax, offset aPpt
    push    ax
    push    word ptr [bp+var_4C]
    push    word ptr [bp+var_4E]
    call    far ptr locate_text_res
    add     sp, 0x6
    push    dx
    push    ax
    mov     ax, offset g_res_id
    push    ax
    call    far ptr copy_string
    add     sp, 0x6
    mov     ax, 0x1
    push    ax                                 ; int
    push    word ptr [gState_penalty]
    lea     ax, [bp+var_12]
    push    ax                                 ; char *
    call    far ptr format_frame_as_string
    add     sp, 0x6
    lea     ax, [bp+var_12]
    push    ax
    mov     ax, offset g_res_id
    push    ax                                 ; char *
    call    far ptr _strcat
    add     sp, 0x4
    jmp     LAB_1000_3380
    db 0x90
LAB_1000_3354:
    mov     ax, offset aDnf
    push    ax
    push    word ptr [bp+var_4C]
    push    word ptr [bp+var_4E]
    call    far ptr locate_text_res
    add     sp, 0x6
    push    dx
    push    ax
    mov     ax, offset g_res_id
    push    ax                                 ; char *
    call    far ptr _strlen
    add     sp, 0x2
    add     ax, offset g_res_id
    push    ax
    call    far ptr copy_string
    add     sp, 0x6
LAB_1000_3380:
    sub     ax, ax
    push    ax
    push    word ptr [dialog_fnt_colour]
    push    word ptr [bp+var_70]
    mov     ax, offset g_res_id
    push    ax
    call    far ptr font_op2_alt
    add     sp, 0x2
    push    ax
    mov     ax, offset g_res_id
    push    ax
    call    far ptr hiscore_draw_text
    add     sp, 0xa
    add     word ptr [bp+var_70], 0xa
LAB_1000_33a7:
    mov     byte ptr [bp+var_18], 0x2
    cmp     byte ptr [gameconfig.game_opponenttype], 0x0
    jnz     LAB_1000_33b5
    jmp     near ptr LAB_1000_34dc
LAB_1000_33b5:
    cmp     word ptr [gState_144], 0x0
    jnz     LAB_1000_340c
    mov     ax, offset aOlt
    push    ax
    push    word ptr [bp+var_4C]
    push    word ptr [bp+var_4E]
    call    far ptr locate_text_res
    add     sp, 0x6
    push    dx
    push    ax
    mov     ax, offset g_res_id
    push    ax
    call    far ptr copy_string
    add     sp, 0x6
    mov     ax, offset aDnf_0
    push    ax
    push    word ptr [bp+var_4C]
    push    word ptr [bp+var_4E]
    call    far ptr locate_text_res
    add     sp, 0x6
    push    dx
    push    ax
    mov     ax, offset g_res_id
    push    ax                                 ; char *
    call    far ptr _strlen
    add     sp, 0x2
    add     ax, offset g_res_id
    push    ax
    call    far ptr copy_string
    add     sp, 0x6
    jmp     near ptr LAB_1000_34aa
    db 0x90
LAB_1000_340c:
    cmp     word ptr [gState_total_finish_time], 0x0
    jz      LAB_1000_341c
    mov     ax, word ptr [gState_total_finish_time]
    cmp     word ptr [gState_144], ax
    jnc     LAB_1000_3466
LAB_1000_341c:
    mov     ax, offset aOwt
    push    ax
    push    word ptr [bp+var_4C]
    push    word ptr [bp+var_4E]
    call    far ptr locate_text_res
    add     sp, 0x6
    push    dx
    push    ax
    mov     ax, offset g_res_id
    push    ax
    call    far ptr copy_string
    add     sp, 0x6
    mov     ax, 0x1
    push    ax                                 ; int
    push    word ptr [gState_144]
    lea     ax, [bp+var_12]
    push    ax                                 ; char *
    call    far ptr format_frame_as_string
    add     sp, 0x6
    lea     ax, [bp+var_12]
    push    ax
    mov     ax, offset g_res_id
    push    ax                                 ; char *
    call    far ptr _strcat
    add     sp, 0x4
    mov     byte ptr [bp+var_18], 0x1
    jmp     LAB_1000_34b5
LAB_1000_3466:
    mov     ax, offset aOlt_0
    push    ax
    push    word ptr [bp+var_4C]
    push    word ptr [bp+var_4E]
    call    far ptr locate_text_res
    add     sp, 0x6
    push    dx
    push    ax
    mov     ax, offset g_res_id
    push    ax
    call    far ptr copy_string
    add     sp, 0x6
    mov     ax, 0x1
    push    ax                                 ; int
    push    word ptr [gState_144]
    lea     ax, [bp+var_12]
    push    ax                                 ; char *
    call    far ptr format_frame_as_string
    add     sp, 0x6
    lea     ax, [bp+var_12]
    push    ax
    mov     ax, offset g_res_id
    push    ax                                 ; char *
    call    far ptr _strcat
    add     sp, 0x4
LAB_1000_34aa:
    cmp     word ptr [gState_total_finish_time], 0x0
    jz      LAB_1000_34b5
    mov     byte ptr [bp+var_18], 0x0
LAB_1000_34b5:
    sub     ax, ax
    push    ax
    push    word ptr [dialog_fnt_colour]
    push    word ptr [bp+var_70]
    mov     ax, offset g_res_id
    push    ax
    call    far ptr font_op2_alt
    add     sp, 0x2
    push    ax
    mov     ax, offset g_res_id
    push    ax
    call    far ptr hiscore_draw_text
    add     sp, 0xa
    add     word ptr [bp+var_70], 0xa
LAB_1000_34dc:
    cmp     byte ptr [bp+var_18], 0x0
    jnz     LAB_1000_34f0
; Loading endrace music...  
    mov     ax, offset aVict
    push    ax
    mov     ax, offset aSkidms_1
    push    ax
    mov     ax, offset aSkidvict
    jmp     LAB_1000_34fb
    db 0x90
LAB_1000_34f0:
    mov     ax, offset aOver
    push    ax
    mov     ax, offset aSkidms_2
    push    ax
    mov     ax, offset aSkidover
LAB_1000_34fb:
    push    ax                                 ; char *
    call    far ptr file_load_audiores
    add     sp, 0x6
    mov     al, byte ptr [gameconfig.game_opponenttype]
    mov     byte ptr [bp+var_16], al
    cmp     byte ptr [bp+var_18], 0x2
    jnz     LAB_1000_351d
    mov     ax, word ptr [gState_pEndFrame]
    cmp     word ptr [gState_oEndFrame], ax
    jz      LAB_1000_351d
    mov     byte ptr [bp+var_16], 0x0
; This is a very useful function for 
; analysis - it is now printing the 
; replays stats at the eval screen.  
LAB_1000_351d:
    mov     ax, offset aAvs
    push    ax
    push    word ptr [bp+var_4C]
    push    word ptr [bp+var_4E]
    call    far ptr locate_text_res
    add     sp, 0x6
    push    dx
    push    ax
    mov     ax, offset g_res_id
    push    ax
    call    far ptr copy_string
    add     sp, 0x6
    mov     ax, word ptr [gState_pEndFrame]
    add     ax, word ptr [elapsed_time1]
    jz      LAB_1000_356a
    mov     ax, word ptr [gState_pEndFrame]
    add     ax, word ptr [elapsed_time1]
    sub     cx, cx
    push    cx
    push    ax
    push    word ptr [gState_travDist+2]
    push    word ptr [gState_travDist]
    call    far ptr __aFuldiv
    mov     al, ah
    mov     ah, dl
    mov     dl, dh
    sub     dh, dh
    mov     di, ax
    jmp     LAB_1000_356c
LAB_1000_356a:
    sub     di, di
LAB_1000_356c:
    mov     ax, 0x3
    push    ax                                 ; int
    sub     ax, ax
    push    ax                                 ; int
    push    di
    lea     ax, [bp+var_12]
    push    ax                                 ; char *
    call    far ptr string_fmt_int
    add     sp, 0x8
    lea     ax, [bp+var_12]
    push    ax
    mov     ax, offset g_res_id
    push    ax                                 ; char *
    call    far ptr _strcat
    add     sp, 0x4
    mov     ax, offset aMph
    push    ax
    push    word ptr [bp+var_4C]
    push    word ptr [bp+var_4E]
    call    far ptr locate_text_res
    add     sp, 0x6
    push    dx
    push    ax
    mov     ax, offset g_res_id
    push    ax                                 ; char *
    call    far ptr _strlen
    add     sp, 0x2
    add     ax, offset g_res_id
    push    ax
    call    far ptr copy_string
    add     sp, 0x6
    sub     ax, ax
    push    ax
    push    word ptr [dialog_fnt_colour]
    push    word ptr [bp+var_70]
    mov     ax, offset g_res_id
    push    ax
    call    far ptr font_op2_alt
    add     sp, 0x2
    push    ax
    mov     ax, offset g_res_id
    push    ax
    call    far ptr hiscore_draw_text
    add     sp, 0xa
    add     word ptr [bp+var_70], 0xa
    cmp     word ptr [gState_impactSpeed], 0x0
    jnz     LAB_1000_35ed
    jmp     near ptr LAB_1000_368b
LAB_1000_35ed:
    mov     ax, offset aImp
    push    ax
    push    word ptr [bp+var_4C]
    push    word ptr [bp+var_4E]
    call    far ptr locate_text_res
    add     sp, 0x6
    push    dx
    push    ax
    mov     ax, offset g_res_id
    push    ax
    call    far ptr copy_string
    add     sp, 0x6
    mov     ax, 0x3
    push    ax                                 ; int
    sub     ax, ax
    push    ax                                 ; int
    mov     ax, word ptr [gState_impactSpeed]
    mov     cl, 0x8
    shr     ax, cl
    push    ax
    lea     ax, [bp+var_12]
    push    ax                                 ; char *
    call    far ptr string_fmt_int
    add     sp, 0x8
    lea     ax, [bp+var_12]
    push    ax
    mov     ax, offset g_res_id
    push    ax                                 ; char *
    call    far ptr _strcat
    add     sp, 0x4
    mov     ax, offset aMph_0
    push    ax
    push    word ptr [bp+var_4C]
    push    word ptr [bp+var_4E]
    call    far ptr locate_text_res
    add     sp, 0x6
    push    dx
    push    ax
    mov     ax, offset g_res_id
    push    ax                                 ; char *
    call    far ptr _strlen
    add     sp, 0x2
    add     ax, offset g_res_id
    push    ax
    call    far ptr copy_string
    add     sp, 0x6
    sub     ax, ax
    push    ax
    push    word ptr [dialog_fnt_colour]
    push    word ptr [bp+var_70]
    mov     ax, offset g_res_id
    push    ax
    call    far ptr font_op2_alt
    add     sp, 0x2
    push    ax
    mov     ax, offset g_res_id
    push    ax
    call    far ptr hiscore_draw_text
    add     sp, 0xa
    add     word ptr [bp+var_70], 0xa
LAB_1000_368b:
    mov     ax, offset aTop
    push    ax
    push    word ptr [bp+var_4C]
    push    word ptr [bp+var_4E]
    call    far ptr locate_text_res
    add     sp, 0x6
    push    dx
    push    ax
    mov     ax, offset g_res_id
    push    ax
    call    far ptr copy_string
    add     sp, 0x6
    mov     ax, 0x3
    push    ax                                 ; int
    sub     ax, ax
    push    ax                                 ; int
    mov     ax, word ptr [gState_topSpeed]
    mov     cl, 0x8
    shr     ax, cl
    push    ax
    lea     ax, [bp+var_12]
    push    ax                                 ; char *
    call    far ptr string_fmt_int
    add     sp, 0x8
    lea     ax, [bp+var_12]
    push    ax
    mov     ax, offset g_res_id
    push    ax                                 ; char *
    call    far ptr _strcat
    add     sp, 0x4
    mov     ax, offset aMph_1
    push    ax
    push    word ptr [bp+var_4C]
    push    word ptr [bp+var_4E]
    call    far ptr locate_text_res
    add     sp, 0x6
    push    dx
    push    ax
    mov     ax, offset g_res_id
    push    ax                                 ; char *
    call    far ptr _strlen
    add     sp, 0x2
    add     ax, offset g_res_id
    push    ax
    call    far ptr copy_string
    add     sp, 0x6
    sub     ax, ax
    push    ax
    push    word ptr [dialog_fnt_colour]
    push    word ptr [bp+var_70]
    mov     ax, offset g_res_id
    push    ax
    call    far ptr font_op2_alt
    add     sp, 0x2
    push    ax
    mov     ax, offset g_res_id
    push    ax
    call    far ptr hiscore_draw_text
    add     sp, 0xa
    add     word ptr [bp+var_70], 0xa
    cmp     word ptr [gState_jumpCount], 0x0
    jz      LAB_1000_379a
    mov     ax, offset aJum
    push    ax
    push    word ptr [bp+var_4C]
    push    word ptr [bp+var_4E]
    call    far ptr locate_text_res
    add     sp, 0x6
    push    dx
    push    ax
    mov     ax, offset g_res_id
    push    ax
    call    far ptr copy_string
    add     sp, 0x6
    mov     ax, 0x3
    push    ax                                 ; int
    sub     ax, ax
    push    ax                                 ; int
    push    word ptr [gState_jumpCount]
    lea     ax, [bp+var_12]
    push    ax                                 ; char *
    call    far ptr string_fmt_int
    add     sp, 0x8
    lea     ax, [bp+var_12]
    push    ax
    mov     ax, offset g_res_id
    push    ax                                 ; char *
    call    far ptr _strcat
    add     sp, 0x4
    sub     ax, ax
    push    ax
    push    word ptr [dialog_fnt_colour]
    push    word ptr [bp+var_70]
    mov     ax, offset g_res_id
    push    ax
    call    far ptr font_op2_alt
    add     sp, 0x2
    push    ax
    mov     ax, offset g_res_id
    push    ax
    call    far ptr hiscore_draw_text
    add     sp, 0xa
LAB_1000_379a:
    cmp     byte ptr [bp+var_16], 0x0
    jnz     LAB_1000_37a3
    jmp     near ptr LAB_1000_38ff
LAB_1000_37a3:
    test    byte ptr [byte_43966], 0x4
    jz      LAB_1000_37ad
    jmp     near ptr LAB_1000_384b
LAB_1000_37ad:
    mov     ax, word ptr [word_40D40]
    mov     word ptr [word_40D3A], ax
    mov     ax, word ptr [end_hiscore_random]
    mov     word ptr [word_40D3C], ax
    mov     ax, word ptr [word_40D44]
    mov     word ptr [word_40D3E], ax
    call    far ptr get_super_random
    cwd
    mov     cx, 0x3
    idiv    cx
    mov     word ptr [word_40D40], dx
    mov     ax, word ptr [word_40D3A]
    cmp     dx, ax
    jnz     LAB_1000_37e0
    mov     bx, dx
    shl     bx, 0x1
    mov     ax, word ptr [bx+word_3BCDE]
    mov     word ptr [word_40D40], ax
LAB_1000_37e0:
    call    far ptr get_super_random
    cwd
    mov     cx, 0x3
    idiv    cx
    mov     word ptr [word_40D44], dx
    mov     ax, word ptr [word_40D3E]
    cmp     dx, ax
    jnz     LAB_1000_3801
    mov     bx, dx
    shl     bx, 0x1
    mov     ax, word ptr [bx+word_3BCDE]
    mov     word ptr [word_40D44], ax
LAB_1000_3801:
    cmp     byte ptr [bp+var_18], 0x1
    jnz     LAB_1000_382a
    cmp     word ptr [gState_total_finish_time], 0x0
    jz      LAB_1000_381e
    call    far ptr get_super_random
    cwd
    mov     cx, 0x2
    idiv    cx
    add     dx, cx
    jmp     LAB_1000_3835
    db 0x90
LAB_1000_381e:
    call    far ptr get_super_random
    cwd
    mov     cx, 0x2
    jmp     LAB_1000_3833
    db 0x90
LAB_1000_382a:
    call    far ptr get_super_random
    cwd
    mov     cx, 0x4
LAB_1000_3833:
    idiv    cx
LAB_1000_3835:
    mov     word ptr [end_hiscore_random], dx
    mov     ax, word ptr [word_40D3C]
    cmp     dx, ax
    jnz     LAB_1000_384b
    mov     bx, dx
    shl     bx, 0x1
    mov     ax, word ptr [bx+word_3BCE4]
    mov     word ptr [end_hiscore_random], ax
LAB_1000_384b:
    cmp     byte ptr [bp+var_18], 0x1
    jnz     LAB_1000_38b6
    mov     al, byte ptr [gameconfig.game_opponenttype]
    add     al, 0x30
    mov     byte ptr [aOpp2win_3], al
    mov     ax, offset aOpp2win
    push    ax                                 ; char *
    mov     ax, 0x3
    push    ax                                 ; int
    call    far ptr file_load_resource
    add     sp, 0x4
    mov     word ptr [bp+var_1C], ax
    mov     word ptr [bp+var_1A], dx
    mov     ax, offset aWinn
    push    ax
    push    word ptr [bp+var_66]
    push    word ptr [bp+var_68]
    call    far ptr locate_shape_alt
    add     sp, 0x6
    mov     word ptr [bp+var_5A], ax
    mov     word ptr [bp+var_58], dx
    cmp     word ptr [gState_total_finish_time], 0x0
    jz      LAB_1000_38a0
    call    far ptr get_kevinrandom
    add     ax, word ptr [gState_frame]
    and     ax, 0x1
    add     ax, 0x2
    jmp     LAB_1000_38ac
    db 0x90
LAB_1000_38a0:
    call    far ptr get_kevinrandom
    add     ax, word ptr [gState_frame]
    and     ax, 0x1
LAB_1000_38ac:
    mov     word ptr [end_hiscore_random], ax
    mov     byte ptr [bp+var_6A], 0x76
    jmp     LAB_1000_38ff
    db 0x90
LAB_1000_38b6:
    mov     al, byte ptr [gameconfig.game_opponenttype]
    add     al, 0x30
    mov     byte ptr [aOpp2lose_3], al
    mov     ax, offset aOpp2lose
    push    ax                                 ; char *
    mov     ax, 0x3
    push    ax                                 ; int
    call    far ptr file_load_resource
    add     sp, 0x4
    mov     word ptr [bp+var_1C], ax
    mov     word ptr [bp+var_1A], dx
    mov     ax, offset aLose
    push    ax
    push    word ptr [bp+var_66]
    push    word ptr [bp+var_68]
    call    far ptr locate_shape_alt
    add     sp, 0x6
    mov     word ptr [bp+var_5A], ax
    mov     word ptr [bp+var_58], dx
    call    far ptr get_kevinrandom
    add     ax, word ptr [gState_frame]
    and     ax, 0x3
    mov     word ptr [end_hiscore_random], ax
    mov     byte ptr [bp+var_6A], 0x64
LAB_1000_38ff:
    mov     byte ptr [bp+var_6E], 0x0
    mov     ax, offset g_path_buf
    push    ax                                 ; char *
    mov     ax, offset a_trk_5
    push    ax                                 ; int
    mov     ax, offset gameconfig.game_trackname
    push    ax
    mov     ax, offset byte_3B80C
    push    ax                                 ; char *
    call    far ptr file_build_path
    add     sp, 0x8
    mov     ax, offset g_path_buf
    push    ax                                 ; char *
    mov     ax, 0x1
    push    ax                                 ; int
    call    far ptr file_load_resource
    add     sp, 0x4
    mov     word ptr [bp+var_4A], ax
    mov     word ptr [bp+var_4A+2], dx
    or      ax, dx
    jnz     LAB_1000_397f
    sub     ax, ax
    push    ax
    push    ax
    push    word ptr [dialogarg2]
    mov     ax, 0xffff
    push    ax
    push    ax
    mov     ax, offset aIhd
    push    ax
    push    word ptr [mainresptr+2]
    push    word ptr [mainresptr]
    call    far ptr locate_text_res
    add     sp, 0x6
    push    dx
    push    ax
    mov     ax, 0x1
    push    ax
    push    ax
    call    far ptr show_dialog
    add     sp, 0x12
    or      ax, ax
    jz      LAB_1000_397f
    mov     ax, offset g_path_buf
    push    ax                                 ; char *
    mov     ax, 0x1
    push    ax                                 ; int
    call    far ptr file_load_resource
    add     sp, 0x4
    mov     word ptr [bp+var_4A], ax
    mov     word ptr [bp+var_4A+2], dx
LAB_1000_397f:
    mov     ax, word ptr [bp+var_4A]
    or      ax, word ptr [bp+var_4A+2]
    jz      LAB_1000_39b6
    sub     di, di
    jmp     LAB_1000_398d
    db 0x90
LAB_1000_398c:
    inc     di
LAB_1000_398d:
    cmp     di, 0x385
    jge     LAB_1000_39a6
    les     bx, [td14_elem_map_main]
    mov     al, byte ptr es:[bx+di]
    les     bx, [bp+var_4A]
    cmp     byte ptr es:[bx+di], al
    jz      LAB_1000_398c
    mov     byte ptr [bp+var_6E], 0xff
LAB_1000_39a6:
    push    word ptr [bp+var_4A+2]
    push    word ptr [bp+var_4A]
    call    far ptr mmgr_release
    add     sp, 0x4
    jmp     LAB_1000_39ba
LAB_1000_39b6:
    mov     byte ptr [bp+var_6E], 0xff
LAB_1000_39ba:
    cmp     byte ptr [bp+var_6E], 0xff
    jz      LAB_1000_39e1
    sub     ax, ax
    push    ax
    push    cs
    call    near ptr highscore_write_a
    add     sp, 0x2
    or      al, al
    jz      LAB_1000_39e1
    mov     ax, 0x1
    push    ax
    push    cs
    call    near ptr highscore_write_a
    add     sp, 0x2
    or      al, al
    jz      LAB_1000_39e1
    mov     byte ptr [bp+var_6E], 0xff
LAB_1000_39e1:
    cmp     byte ptr [bp+var_6E], 0x0
    jnz     LAB_1000_3a0f
    cmp     word ptr [gState_total_finish_time], 0x0
    jz      LAB_1000_3a0f
    mov     ax, word ptr [gState_total_finish_time]
    mov     word ptr [bp+var_88], ax
    test    byte ptr [byte_43966], 0x6
    jnz     LAB_1000_3a0f
    or      ax, ax
    jz      LAB_1000_3a0f
    les     bx, [td11_highscores]
    cmp     word ptr es:[bx+0x16a], ax
    jbe     LAB_1000_3a0f
    mov     byte ptr [bp+var_6E], 0x1
LAB_1000_3a0f:
    mov     byte ptr [bp+var_8E], 0x0
    mov     word ptr [bp+var_42], 0x1e
    mov     byte ptr [bp+var_14], 0x1
LAB_1000_3a1d:
    cmp     byte ptr [bp+var_16], 0x0
    jz      LAB_1000_3a42
    cmp     byte ptr [bp+var_6E], 0x2
    jnz     LAB_1000_3a42
    mov     byte ptr [bp+var_6E], 0x0
    call    far ptr sprite_copy_wnd_to_1
    push    cs
    call    near ptr highscore_text_unk
    mov     byte ptr [bp+var_selectedmenu], 0x1
    mov     byte ptr [bp+var_14], 0x1
    jmp     near ptr LAB_1000_3fda
LAB_1000_3a42:
    cmp     byte ptr [bp+var_16], 0x0
    jnz     LAB_1000_3a4b
    jmp     near ptr LAB_1000_3f48
LAB_1000_3a4b:
    mov     byte ptr [aOp01_3], 0x31
    mov     ax, offset aOp01
    push    ax
    push    word ptr [bp+var_1A]
    push    word ptr [bp+var_1C]
    call    far ptr locate_shape_fatal
    add     sp, 0x6
    mov     word ptr [bp+var_56], ax
    mov     word ptr [bp+var_56+2], dx
    les     bx, [bp+var_56]
    mov     ax, word ptr es:[bx]
    imul    word ptr [video_flag1_is1]
    mov     word ptr [bp+var_70], ax
    mov     ax, 0x138
    sub     ax, word ptr [bp+var_70]
    mov     word ptr [bp+var_8C], ax
    mov     ax, 0x63
    sub     ax, word ptr es:[bx+0x2]
    sar     ax, 0x1
    mov     word ptr [bp+var_90], ax
    push    word ptr [word_407D2]
    sub     ax, ax
    push    ax
    push    word ptr [dialog_fnt_colour]
    mov     ax, word ptr es:[bx+0x2]
    add     ax, 0x5
    push    ax
    mov     ax, word ptr [bp+var_70]
    add     ax, 0x5
    push    ax
    mov     ax, word ptr [bp+var_90]
    sub     ax, 0x3
    push    ax
    mov     ax, word ptr [bp+var_8C]
    sub     ax, 0x3
    push    ax
    call    far ptr draw_border                ; border around opponent animation on eval screen
    add     sp, 0xe
    mov     al, byte ptr [bp+var_8E]
    cbw
    mov     bx, ax
    add     bx, word ptr [bp+var_5A]
    mov     es, word ptr [bp+var_58]
    mov     al, byte ptr es:[bx]
    add     al, 0x30
    mov     byte ptr [aOp01_3], al
    push    word ptr [bp+var_90]
    push    word ptr [bp+var_8C]
    mov     ax, offset aOp01
    push    ax
    push    word ptr [bp+var_1A]
    push    word ptr [bp+var_1C]
    call    far ptr locate_shape_fatal
    add     sp, 0x6
    push    dx
    push    ax
    call    far ptr shape2d_op_unk5
    add     sp, 0x8
    mov     al, byte ptr [bp+var_8E]
    mov     byte ptr [bp+var_6C], al
    sub     ax, ax
    push    ax
    push    ax
    call    far ptr font_set_colour
    add     sp, 0x4
    mov     word ptr [bp+var_70], 0x8
    mov     word ptr [bp+var_40], 0x0
    mov     word ptr [bp+var_50], 0x0
    mov     word ptr [bp+var_80], 0x0
    cmp     byte ptr [bp+var_18], 0x2
    jnz     LAB_1000_3b2c
    mov     word ptr [bp+var_7A], 0x1
    jmp     LAB_1000_3b31
    db 0x90
LAB_1000_3b2c:
    mov     word ptr [bp+var_7A], 0x3
LAB_1000_3b31:
    sub     di, di
    jmp     near ptr LAB_1000_3caf
LAB_1000_3b36:
    cmp     byte ptr [bp+var_18], 0x2
    jnz     LAB_1000_3b42
    mov     ax, offset aD4a
    jmp     LAB_1000_3b57
    db 0x90
LAB_1000_3b42:
    mov     al, byte ptr [bp+var_6A]
    mov     byte ptr [bp+var_12], al
    mov     byte ptr [bp+var_11], 0x31
    mov     al, byte ptr [word_40D40]
LAB_1000_3b4f:
    add     al, 0x61
    mov     byte ptr [bp+var_10], al
    lea     ax, [bp+var_12]
LAB_1000_3b57:
    push    ax
    push    word ptr [bp+var_66]
    push    word ptr [bp+var_68]
    call    far ptr locate_text_res
    add     sp, 0x6
    mov     word ptr [bp+var_86], ax
    mov     word ptr [bp+var_86+2], dx
LAB_1000_3b6e:
    push    word ptr [fontnptr+2]
    push    word ptr [fontnptr]
    call    far ptr font_set_fontdef2
    add     sp, 0x4
LAB_1000_3b7e:
    les     bx, [bp+var_86]
    inc     word ptr [bp+var_86]
    mov     al, byte ptr es:[bx]
    mov     byte ptr [bp+var_3E], al
    cmp     al, 0x20
    jz      LAB_1000_3b97
    or      al, al
    jz      LAB_1000_3b97
    jmp     near ptr LAB_1000_3c92
LAB_1000_3b97:
    mov     bx, word ptr [bp+var_80]
    add     bx, bp
    mov     byte ptr [bx-0x3c], 0x0
    lea     ax, [bp+var_3C]
    push    ax
    call    far ptr font_op2
    add     sp, 0x2
    mov     word ptr [bp+var_8A], ax
    add     ax, word ptr [bp+var_50]
    mov     cx, word ptr [bp+var_8C]
    sub     cx, 0x10
    cmp     ax, cx
    jge     LAB_1000_3c1a
    mov     ax, word ptr [bp+var_40]
    add     ax, word ptr [bp+var_80]
    cmp     ax, 0x50
    jge     LAB_1000_3c1a
    mov     word ptr [bp+var_5C], 0x0
    jmp     LAB_1000_3bf3
LAB_1000_3bd0:
    mov     al, byte ptr [bp+var_6A]
    mov     byte ptr [bp+var_12], al
    mov     byte ptr [bp+var_11], 0x32
    mov     al, byte ptr [end_hiscore_random]
    jmp     near ptr LAB_1000_3b4f
LAB_1000_3be0:
    mov     al, byte ptr [bp+var_6A]
    mov     byte ptr [bp+var_12], al
    mov     byte ptr [bp+var_11], 0x33
    mov     al, byte ptr [word_40D44]
    jmp     near ptr LAB_1000_3b4f
LAB_1000_3bf0:
    inc     word ptr [bp+var_5C]
LAB_1000_3bf3:
    mov     ax, word ptr [bp+var_80]
    cmp     word ptr [bp+var_5C], ax
    jge     LAB_1000_3c10
    mov     bx, word ptr [bp+var_5C]
    add     bx, bp
    mov     al, byte ptr [bx-0x3c]
    mov     bx, word ptr [bp+var_40]
    inc     word ptr [bp+var_40]
    mov     byte ptr [bx+g_res_id], al
    jmp     LAB_1000_3bf0
    db 0x90
LAB_1000_3c10:
    mov     ax, word ptr [bp+var_8A]
    add     word ptr [bp+var_50], ax
    jmp     LAB_1000_3c86
    db 0x90
LAB_1000_3c1a:
    mov     bx, word ptr [bp+var_40]
    mov     byte ptr [bx+g_res_id], 0x0
    push    word ptr [bp+var_70]
    mov     ax, 0x8
    push    ax
    mov     ax, offset g_res_id
    push    ax
    call    far ptr font_draw_text
    add     sp, 0x6
    add     word ptr [bp+var_70], 0x8
    cmp     byte ptr [bp+var_3C], 0x20
    jnz     LAB_1000_3c46
    mov     word ptr [bp+var_5C], 0x1
    jmp     LAB_1000_3c4b
LAB_1000_3c46:
    mov     word ptr [bp+var_5C], 0x0
LAB_1000_3c4b:
    mov     word ptr [bp+var_40], 0x0
    jmp     LAB_1000_3c67
LAB_1000_3c52:
    mov     bx, word ptr [bp+var_5C]
    add     bx, bp
    mov     al, byte ptr [bx-0x3c]
    mov     bx, word ptr [bp+var_40]
    inc     word ptr [bp+var_40]
    mov     byte ptr [bx+g_res_id], al
    inc     word ptr [bp+var_5C]
LAB_1000_3c67:
    mov     ax, word ptr [bp+var_80]
    cmp     word ptr [bp+var_5C], ax
    jl      LAB_1000_3c52
    mov     bx, word ptr [bp+var_40]
    mov     byte ptr [bx+g_res_id], 0x0
    mov     ax, offset g_res_id
    push    ax
    call    far ptr font_op2
    add     sp, 0x2
    mov     word ptr [bp+var_50], ax
LAB_1000_3c86:
    mov     word ptr [bp+var_80], 0x1
    mov     byte ptr [bp+var_3C], 0x20
    jmp     LAB_1000_3ca0
    db 0x90
LAB_1000_3c92:
    mov     bx, word ptr [bp+var_80]
    inc     word ptr [bp+var_80]
    add     bx, bp
    mov     al, byte ptr [bp+var_3E]
    mov     byte ptr [bx-0x3c], al
LAB_1000_3ca0:
    cmp     byte ptr [bp+var_3E], 0x0
    jz      LAB_1000_3ca9
    jmp     near ptr LAB_1000_3b7e
LAB_1000_3ca9:
    call    far ptr font_set_fontdef
    inc     di
LAB_1000_3caf:
    cmp     word ptr [bp+var_7A], di
    jle     LAB_1000_3cd0
    mov     ax, di
    or      ax, ax
    jnz     LAB_1000_3cbd
    jmp     near ptr LAB_1000_3b36
LAB_1000_3cbd:
    cmp     ax, 0x1
    jnz     LAB_1000_3cc5
    jmp     near ptr LAB_1000_3bd0
LAB_1000_3cc5:
    cmp     ax, 0x2
    jnz     LAB_1000_3ccd
    jmp     near ptr LAB_1000_3be0
LAB_1000_3ccd:
    jmp     near ptr LAB_1000_3b6e
LAB_1000_3cd0:
    cmp     word ptr [bp+var_40], 0x0
    jz      LAB_1000_3d06
    push    word ptr [fontnptr+2]
    push    word ptr [fontnptr]
    call    far ptr font_set_fontdef2
    add     sp, 0x4
    mov     bx, word ptr [bp+var_40]
    mov     byte ptr [bx+g_res_id], 0x0
    push    word ptr [bp+var_70]
    mov     ax, 0x8
    push    ax
    mov     ax, offset g_res_id
    push    ax
    call    far ptr font_draw_text
    add     sp, 0x6
    call    far ptr font_set_fontdef
LAB_1000_3d06:
    mov     byte ptr [bp+var_14], 0x0
    cmp     byte ptr [bp+var_6E], 0x0
    jg      LAB_1000_3d13
    jmp     near ptr LAB_1000_3fda
LAB_1000_3d13:
    mov     byte ptr [bp+var_6E], 0x0
    mov     byte ptr [bp+var_14], 0x1
    sub     ax, ax
    push    ax
    push    word ptr [word_407F8]
    push    word ptr [word_407F6]
    push    word ptr [word_407F4]
    mov     ax, 0x15
    push    ax
    mov     ax, 0x46
    push    ax
    mov     ax, 0xaf
    push    ax
    mov     ax, 0x81
    push    ax
    mov     ax, offset aBct
    push    ax
    push    word ptr [bp+var_4C]
    push    word ptr [bp+var_4E]
    call    far ptr locate_text_res
    add     sp, 0x6
    push    dx
    push    ax
    call    far ptr draw_button
    add     sp, 0x14
    mov     al, byte ptr [bp+var_52]
    cbw
    push    ax
    push    word ptr [wndsprite+2]
    push    word ptr [wndsprite]
    call    far ptr sprite_blit_to_video
    add     sp, 0x6
    mov     byte ptr [bp+var_52], 0xfe
    call    far ptr sub_29772
    call    far ptr check_input
    mov     word ptr [bp+var_70], 0x1
    call    far ptr sprite_copy_2_to_1_2
LAB_1000_3d83:
    push    word ptr [word_407D0]
    push    word ptr [word_407CE]
    mov     ax, offset hiscore_buttons_y2
    push    ax
    mov     ax, offset hiscore_buttons_y1
    push    ax
    mov     ax, offset word_3BCF6
    push    ax
    mov     ax, offset word_3BCEC
    push    ax
    mov     ax, 0x4
    push    ax
    call    far ptr mouse_timer_sprite_unk
    add     sp, 0xe
    mov     word ptr [bp+var_72], ax
    add     word ptr [bp+var_42], ax
    cmp     word ptr [bp+var_42], 0x1e
    jl      LAB_1000_3dd3
    sub     word ptr [bp+var_42], 0x1e
    inc     byte ptr [bp+var_8E]
    mov     al, byte ptr [bp+var_8E]
    cbw
    mov     bx, ax
    add     bx, word ptr [bp+var_5A]
    mov     es, word ptr [bp+var_58]
    cmp     byte ptr es:[bx], 0x0
    jnz     LAB_1000_3dd3
    mov     byte ptr [bp+var_8E], 0x0
LAB_1000_3dd3:
    mov     al, byte ptr [bp+var_6C]
    cmp     byte ptr [bp+var_8E], al
    jnz     LAB_1000_3ddf
    jmp     near ptr LAB_1000_3ea5
LAB_1000_3ddf:
    mov     al, byte ptr [bp+var_8E]
    mov     byte ptr [bp+var_6C], al
    cbw
    mov     bx, ax
    add     bx, word ptr [bp+var_5A]
    mov     es, word ptr [bp+var_58]
    mov     al, byte ptr es:[bx]
    add     al, 0x30
    mov     byte ptr [aOp01_3], al
    call    far ptr mouse_draw_opaque_check
    mov     ax, offset aOp01
    push    ax
    push    word ptr [bp+var_1A]
    push    word ptr [bp+var_1C]
    call    far ptr locate_shape_fatal
    add     sp, 0x6
    mov     word ptr [bp+var_56], ax
    mov     word ptr [bp+var_56+2], dx
    cmp     byte ptr [video_flag5_is0], 0x0
    jz      LAB_1000_3e8a
    push    word ptr [bp+var_46+2]
    push    word ptr [bp+var_46]
    call    far ptr sprite_set_1_from_argptr
    add     sp, 0x4
    sub     ax, ax
    push    ax
    push    ax
    push    word ptr [bp+var_56+2]
    push    word ptr [bp+var_56]
    call    far ptr shape2d_op_unk5
    add     sp, 0x8
    call    far ptr sprite_copy_2_to_1_2
    les     bx, [bp+var_56]
    mov     ax, word ptr es:[bx+0x2]
    add     ax, word ptr [bp+var_90]
    push    ax
    push    word ptr [bp+var_90]
    mov     ax, word ptr es:[bx]
    imul    word ptr [video_flag1_is1]
    add     ax, word ptr [bp+var_8C]
    push    ax
    push    word ptr [bp+var_8C]
    call    far ptr sprite_set_1_size
    add     sp, 0x8
    push    word ptr [bp+var_90]
    push    word ptr [bp+var_8C]
    les     bx, [bp+var_46]
    push    word ptr es:[bx+0x2]
    push    word ptr es:[bx]
    call    far ptr sprite_putimage_and_alt
    add     sp, 0x8
    call    far ptr sprite_copy_2_to_1_2
    jmp     LAB_1000_3ea0
    db 0x90
LAB_1000_3e8a:
    push    word ptr [bp+var_90]
    push    word ptr [bp+var_8C]
    push    word ptr [bp+var_56+2]
    push    word ptr [bp+var_56]
    call    far ptr shape2d_op_unk5
    add     sp, 0x8
LAB_1000_3ea0:
    call    far ptr mouse_draw_transparent_check
LAB_1000_3ea5:
    push    di
    call    far ptr input_checking
    add     sp, 0x2
    mov     si, ax
    cmp     si, 0xd
    jz      LAB_1000_3ebf
    cmp     si, 0x20
    jz      LAB_1000_3ebf
    cmp     si, 0x1b
    jnz     LAB_1000_3ec4
LAB_1000_3ebf:
    mov     word ptr [bp+var_70], 0x0
LAB_1000_3ec4:
    cmp     word ptr [bp+var_70], 0x0
    jz      LAB_1000_3ecd
    jmp     near ptr LAB_1000_3d83
LAB_1000_3ecd:
    call    far ptr sprite_copy_wnd_to_1
    sub     ax, ax
    push    ax
    push    word ptr [word_407F8]
    push    word ptr [word_407F6]
    push    word ptr [word_407F4]
    mov     ax, 0x64
    push    ax
    mov     ax, 0x140
    push    ax
    sub     ax, ax
    push    ax
    push    ax
    push    ax
    push    ax
    call    far ptr draw_button
    add     sp, 0x14
    mov     ax, word ptr [hiscore_buttons_y2]
    inc     ax
    push    ax
    push    word ptr [hiscore_buttons_y1]
    mov     ax, 0x138
    push    ax
    mov     ax, 0x8
    push    ax
    call    far ptr sprite_set_1_size
    add     sp, 0x8
    push    word ptr [word_407F8]
    call    far ptr sprite_clear_1_color
    add     sp, 0x2
    call    far ptr mouse_draw_opaque_check
    mov     al, byte ptr [bp+var_18]
    cbw
    push    ax
    mov     ax, offset aInh
    push    ax
    push    word ptr [bp+var_4C]
    push    word ptr [bp+var_4E]
    call    far ptr locate_text_res
    add     sp, 0x6
    push    dx
    push    ax
    push    word ptr [bp+var_88]
    push    cs
    call    near ptr enter_hiscore
    add     sp, 0x8
    jmp     near ptr LAB_1000_3fda
LAB_1000_3f48:
    cmp     byte ptr [bp+var_6E], 0x0
    jle     LAB_1000_3f84
    call    far ptr check_input
    call    far ptr mouse_draw_opaque_check
    sub     ax, ax
    push    ax
    mov     ax, offset aInh_0
    push    ax
    push    word ptr [bp+var_4C]
    push    word ptr [bp+var_4E]
    call    far ptr locate_text_res
    add     sp, 0x6
    push    dx
    push    ax
    push    word ptr [bp+var_88]
    push    cs
    call    near ptr enter_hiscore
    add     sp, 0x8
    mov     byte ptr [bp+var_6E], 0x0
    mov     byte ptr [bp+var_52], 0xfe
    jmp     LAB_1000_3fda
LAB_1000_3f84:
    call    far ptr mouse_draw_opaque_check
    cmp     byte ptr [bp+var_6E], 0xff
    jnz     LAB_1000_3fd6
    mov     ax, offset aHna
    push    ax
    push    word ptr [bp+var_4C]
    push    word ptr [bp+var_4E]
    call    far ptr locate_text_res
    add     sp, 0x6
    push    dx
    push    ax
    mov     ax, offset g_res_id
    push    ax
    call    far ptr copy_string
    add     sp, 0x6
    sub     ax, ax
    push    ax
    push    word ptr [dialog_fnt_colour]
    mov     ax, 0x32
    push    ax
    mov     ax, offset g_res_id
    push    ax
    call    far ptr font_op2_alt
    add     sp, 0x2
    push    ax
    mov     ax, offset g_res_id
    push    ax
    call    far ptr hiscore_draw_text
    add     sp, 0xa
    jmp     LAB_1000_3fda
    db 0x90
LAB_1000_3fd6:
    push    cs
    call    near ptr highscore_text_unk
LAB_1000_3fda:
    mov     byte ptr [bp+var_selectedmenu], 0x1
    mov     byte ptr [bp+var_78], 0x1
    call    far ptr sub_29772
    call    far ptr sprite_copy_wnd_to_1
    cmp     byte ptr [bp+var_16], 0x0
    jz      LAB_1000_3ff9
    cmp     byte ptr [bp+var_6E], 0xff
    jnz     LAB_1000_4002
LAB_1000_3ff9:
    mov     word ptr [bp+var_9C], 0xffdc
    jmp     LAB_1000_4058
    db 0x90
LAB_1000_4002:
    mov     word ptr [bp+var_9C], 0x0
    cmp     byte ptr [bp+var_14], 0x0
    jz      LAB_1000_4014
    mov     ax, offset aBev
    jmp     LAB_1000_4017
    db 0x90
LAB_1000_4014:
    mov     ax, offset aBhi
LAB_1000_4017:
    push    ax
    push    word ptr [bp+var_4C]
    push    word ptr [bp+var_4E]
    call    far ptr locate_text_res
    add     sp, 0x6
    mov     word ptr [bp+var_7E], ax
    mov     word ptr [bp+var_7C], dx
    sub     ax, ax
    push    ax
    push    word ptr [word_407F8]
    push    word ptr [word_407F6]
    push    word ptr [word_407F4]
    mov     ax, 0x15
    push    ax
    mov     ax, 0x46
    push    ax
    mov     ax, 0xaf
    push    ax
    mov     ax, word ptr [word_3BCEC]
    inc     ax
    push    ax
    push    dx
    push    word ptr [bp+var_7E]
    call    far ptr draw_button
    add     sp, 0x14
LAB_1000_4058:
    sub     ax, ax
    push    ax
    push    word ptr [word_407F8]
    push    word ptr [word_407F6]
    push    word ptr [word_407F4]
    mov     ax, 0x15
    push    ax
    mov     ax, 0x46
    push    ax
    mov     ax, 0xaf
    push    ax
    mov     ax, word ptr [bp+var_9C]
    add     ax, word ptr [word_3BCEE]
    inc     ax
    push    ax
    mov     ax, offset aBrp
    push    ax
    push    word ptr [bp+var_4C]
    push    word ptr [bp+var_4E]
    call    far ptr locate_text_res
    add     sp, 0x6
    push    dx
    push    ax
    call    far ptr draw_button
    add     sp, 0x14
    cmp     byte ptr [bp+var_16], 0x0
    jz      LAB_1000_40a4
    mov     ax, offset aBra
    jmp     LAB_1000_40a7
LAB_1000_40a4:
    mov     ax, offset aBdr
LAB_1000_40a7:
    push    ax
    push    word ptr [bp+var_4C]
    push    word ptr [bp+var_4E]
    call    far ptr locate_text_res
    add     sp, 0x6
    mov     word ptr [bp+var_7E], ax
    mov     word ptr [bp+var_7C], dx
    sub     ax, ax
    push    ax
    push    word ptr [word_407F8]
    push    word ptr [word_407F6]
    push    word ptr [word_407F4]
    mov     ax, 0x15
    push    ax
    mov     ax, 0x46
    push    ax
    mov     ax, 0xaf
    push    ax
    mov     ax, word ptr [bp+var_9C]
    add     ax, word ptr [word_3BCF0]
    inc     ax
    push    ax
    push    dx
    push    word ptr [bp+var_7E]
    call    far ptr draw_button
    add     sp, 0x14
    sub     ax, ax
    push    ax
    push    word ptr [word_407F8]
    push    word ptr [word_407F6]
    push    word ptr [word_407F4]
    mov     ax, 0x15
    push    ax
    mov     ax, 0x46
    push    ax
    mov     ax, 0xaf
    push    ax
    mov     ax, word ptr [bp+var_9C]
    add     ax, word ptr [word_3BCF2]
    inc     ax
    push    ax
    mov     ax, offset aBmm_0
    push    ax
    push    word ptr [bp+var_4C]
    push    word ptr [bp+var_4E]
    call    far ptr locate_text_res
    add     sp, 0x6
    push    dx
    push    ax
    call    far ptr draw_button
    add     sp, 0x14
    sub     di, di
LAB_1000_4130:
    mov     ax, di
    shl     ax, 0x1
    mov     word ptr [bp+var_9E], ax
    mov     bx, ax
    mov     ax, word ptr [bx+word_3BCEC]
    add     ax, word ptr [bp+var_9C]
    add     bx, bp
    mov     word ptr [bx-0x64], ax
    mov     ax, di
    shl     ax, 0x1
    mov     word ptr [bp+var_9E], ax
    mov     bx, ax
    mov     ax, word ptr [bx+word_3BCF6]
    add     ax, word ptr [bp+var_9C]
    add     bx, bp
    mov     word ptr [bx+0xff66], ax
    inc     di
    cmp     di, 0x4
    jl      LAB_1000_4130
    call    far ptr check_input
    mov     al, byte ptr [bp+var_52]
    cbw
    push    ax
    push    word ptr [wndsprite+2]
    push    word ptr [wndsprite]
    call    far ptr sprite_blit_to_video
    add     sp, 0x6
    mov     byte ptr [bp+var_52], 0xfe
    call    far ptr sprite_copy_2_to_1_2
LAB_1000_4188:
    mov     al, byte ptr [bp+var_78]
    cmp     byte ptr [bp+var_selectedmenu], al
    jz      LAB_1000_41dc
    mov     al, byte ptr [bp+var_selectedmenu]
    mov     byte ptr [bp+var_78], al
    call    far ptr sprite_copy_2_to_1_2
    mov     ax, word ptr [hiscore_buttons_y2]
    inc     ax
    push    ax
    push    word ptr [hiscore_buttons_y1]
    mov     ax, 0x140
    push    ax
    sub     ax, ax
    push    ax
    call    far ptr sprite_set_1_size
    add     sp, 0x8
    call    far ptr mouse_draw_opaque_check
    les     bx, [wndsprite]
    push    word ptr es:[bx+0x2]
    push    word ptr es:[bx]
    call    far ptr sprite_putimage
    add     sp, 0x4
    call    far ptr mouse_draw_transparent_check
    call    far ptr timer_get_delta_alt
    call    far ptr sub_29772
LAB_1000_41dc:
    push    word ptr [word_407D0]
    push    word ptr [word_407CE]
    mov     ax, offset hiscore_buttons_y2
    push    ax
    mov     ax, offset hiscore_buttons_y1
    push    ax
    lea     ax, [bp+var_9A]
    push    ax
    lea     ax, [bp+var_64]
    push    ax
    mov     al, byte ptr [bp+var_selectedmenu]
    cbw
    push    ax
    call    far ptr mouse_timer_sprite_unk
    add     sp, 0xe
    mov     word ptr [bp+var_72], ax
    cmp     byte ptr [bp+var_14], 0x0
    jz      LAB_1000_420f
    jmp     near ptr LAB_1000_4337
LAB_1000_420f:
    cmp     byte ptr [bp+var_18], 0x2
    jnz     LAB_1000_4218
    jmp     near ptr LAB_1000_4337
LAB_1000_4218:
    add     word ptr [bp+var_42], ax
    cmp     word ptr [bp+var_42], 0x1e
    jl      LAB_1000_4241
    sub     word ptr [bp+var_42], 0x1e
    inc     byte ptr [bp+var_8E]
    mov     al, byte ptr [bp+var_8E]
    cbw
    mov     bx, ax
    add     bx, word ptr [bp+var_5A]
    mov     es, word ptr [bp+var_58]
    cmp     byte ptr es:[bx], 0x0
    jnz     LAB_1000_4241
    mov     byte ptr [bp+var_8E], 0x0
LAB_1000_4241:
    mov     al, byte ptr [bp+var_6C]
    cmp     byte ptr [bp+var_8E], al
    jnz     LAB_1000_424d
    jmp     near ptr LAB_1000_4337
LAB_1000_424d:
    mov     al, byte ptr [bp+var_8E]
    mov     byte ptr [bp+var_6C], al
    cbw
    mov     bx, ax
    add     bx, word ptr [bp+var_5A]
    mov     es, word ptr [bp+var_58]
    mov     al, byte ptr es:[bx]
    add     al, 0x30
    mov     byte ptr [aOp01_3], al
    call    far ptr mouse_draw_opaque_check
    mov     ax, offset aOp01
    push    ax
    push    word ptr [bp+var_1A]
    push    word ptr [bp+var_1C]
    call    far ptr locate_shape_fatal
    add     sp, 0x6
    mov     word ptr [bp+var_56], ax
    mov     word ptr [bp+var_56+2], dx
    cmp     byte ptr [video_flag5_is0], 0x0
    jz      LAB_1000_42f8
    push    word ptr [bp+var_46+2]
    push    word ptr [bp+var_46]
    call    far ptr sprite_set_1_from_argptr
    add     sp, 0x4
    sub     ax, ax
    push    ax
    push    ax
    push    word ptr [bp+var_56+2]
    push    word ptr [bp+var_56]
    call    far ptr shape2d_op_unk5
    add     sp, 0x8
    call    far ptr sprite_copy_2_to_1_2
    les     bx, [bp+var_56]
    mov     ax, word ptr es:[bx+0x2]
    add     ax, word ptr [bp+var_90]
    push    ax
    push    word ptr [bp+var_90]
    mov     ax, word ptr es:[bx]
    imul    word ptr [video_flag1_is1]
    add     ax, word ptr [bp+var_8C]
    push    ax
    push    word ptr [bp+var_8C]
    call    far ptr sprite_set_1_size
    add     sp, 0x8
    push    word ptr [bp+var_90]
    push    word ptr [bp+var_8C]
    les     bx, [bp+var_46]
    push    word ptr es:[bx+0x2]
    push    word ptr es:[bx]
    call    far ptr sprite_putimage_and_alt
    add     sp, 0x8
    call    far ptr sprite_copy_2_to_1_2
    jmp     LAB_1000_430e
    db 0x90
LAB_1000_42f8:
    push    word ptr [bp+var_90]
    push    word ptr [bp+var_8C]
    push    word ptr [bp+var_56+2]
    push    word ptr [bp+var_56]
    call    far ptr shape2d_op_unk5
    add     sp, 0x8
LAB_1000_430e:
    push    word ptr [bp+var_90]
    push    word ptr [bp+var_8C]
    mov     ax, offset aOp01
    push    ax
    push    word ptr [bp+var_1A]
    push    word ptr [bp+var_1C]
    call    far ptr locate_shape_fatal
    add     sp, 0x6
    push    dx
    push    ax
    call    far ptr shape2d_op_unk5
    add     sp, 0x8
    call    far ptr mouse_draw_transparent_check
LAB_1000_4337:
    cmp     byte ptr [bp+var_16], 0x0
    jz      LAB_1000_4343
    cmp     byte ptr [bp+var_6E], 0xff
    jnz     LAB_1000_436c
LAB_1000_4343:
    mov     ax, offset (hiscore_buttons_y2+1*2) ; references the last three y pos in the array
    push    ax
    mov     ax, offset (hiscore_buttons_y1+1*2) ; ditto
    push    ax
    lea     ax, [bp+var_98]
    push    ax
    lea     ax, [bp+var_62]
    push    ax
    mov     ax, 0x3
    push    ax
    call    far ptr mouse_multi_hittest
    add     sp, 0xa
    mov     byte ptr [bp+var_menuhit], al
    cmp     al, 0xff
    jz      LAB_1000_4395
    inc     al
    jmp     LAB_1000_4391
LAB_1000_436c:
    mov     ax, offset hiscore_buttons_y2
    push    ax
    mov     ax, offset hiscore_buttons_y1
    push    ax
    lea     ax, [bp+var_9A]
    push    ax
    lea     ax, [bp+var_64]
    push    ax
    mov     ax, 0x4
    push    ax
    call    far ptr mouse_multi_hittest
    add     sp, 0xa
    mov     byte ptr [bp+var_menuhit], al
    cmp     al, 0xff
    jz      LAB_1000_4395
LAB_1000_4391:
    mov     byte ptr [bp+var_selectedmenu], al
LAB_1000_4395:
    push    word ptr [bp+var_72]
    call    far ptr input_checking
    add     sp, 0x2
    mov     si, ax
    or      si, si
    jnz     LAB_1000_43a9
    jmp     near ptr LAB_1000_4188
LAB_1000_43a9:
    cmp     ax, 0xd                            ; enter
    jz      LAB_1000_43c6
    cmp     ax, 0x20                           ; space
    jz      LAB_1000_43c6
    cmp     ax, 0x4b00
    jnz     LAB_1000_43bb
    jmp     near ptr LAB_1000_447a
LAB_1000_43bb:
    cmp     ax, 0x4d00
    jnz     LAB_1000_43c3
    jmp     near ptr LAB_1000_44a4
LAB_1000_43c3:
    jmp     near ptr LAB_1000_4188
LAB_1000_43c6:
    cmp     byte ptr [bp+var_selectedmenu], 0x0
    jnz     LAB_1000_440c
    call    far ptr sprite_copy_wnd_to_1
    sub     ax, ax
    push    ax
    push    word ptr [word_407F8]
    push    word ptr [word_407F6]
    push    word ptr [word_407F4]
    mov     ax, 0x64
    push    ax
    mov     ax, 0x140
    push    ax
    sub     ax, ax
    push    ax
    push    ax
    push    ax
    push    ax
    call    far ptr draw_button
    add     sp, 0x14
    cmp     byte ptr [bp+var_14], 0x0
    jz      LAB_1000_4404
    mov     byte ptr [bp+var_6E], 0x0
    jmp     near ptr LAB_1000_3a1d
LAB_1000_4404:
    mov     byte ptr [bp+var_6E], 0x2
    jmp     near ptr LAB_1000_3a1d
    db 0x90
LAB_1000_440c:
    call    far ptr audio_unload
    cmp     byte ptr [bp+var_16], 0x0
    jz      LAB_1000_4425
    push    word ptr [bp+var_1A]
    push    word ptr [bp+var_1C]
    call    far ptr mmgr_release
    add     sp, 0x4
LAB_1000_4425:
    cmp     byte ptr [video_flag5_is0], 0x0
    jz      LAB_1000_443a
    push    word ptr [bp+var_46+2]
    push    word ptr [bp+var_46]
    call    far ptr sprite_free_wnd
    add     sp, 0x4
LAB_1000_443a:
    push    word ptr [wndsprite+2]
    push    word ptr [wndsprite]
    call    far ptr sprite_free_wnd
    add     sp, 0x4
    cmp     byte ptr [gameconfig.game_opponenttype], 0x0
    jz      LAB_1000_445f
    push    word ptr [bp+var_66]
    push    word ptr [bp+var_68]
    call    far ptr unload_resource
    add     sp, 0x4
LAB_1000_445f:
    push    word ptr [bp+var_4C]
    push    word ptr [bp+var_4E]
    call    far ptr unload_resource
    add     sp, 0x4
    mov     al, byte ptr [bp+var_selectedmenu]
    cbw
    dec     ax
    pop     si
    pop     di
    mov     sp, bp
    pop     bp
    retf
    db 0x90
LAB_1000_447a:
    cmp     byte ptr [bp+var_16], 0x0
    jz      LAB_1000_4486
    cmp     byte ptr [bp+var_6E], 0xff
    jnz     LAB_1000_4496
LAB_1000_4486:
    cmp     byte ptr [bp+var_selectedmenu], 0x1
    jg      LAB_1000_449d
LAB_1000_448d:
    mov     byte ptr [bp+var_selectedmenu], 0x3
    jmp     near ptr LAB_1000_4188
    db 0x90
LAB_1000_4496:
    cmp     byte ptr [bp+var_selectedmenu], 0x0
    jz      LAB_1000_448d
LAB_1000_449d:
    dec     byte ptr [bp+var_selectedmenu]
    jmp     near ptr LAB_1000_4188
LAB_1000_44a4:
    cmp     byte ptr [bp+var_selectedmenu], 0x3
    jge     LAB_1000_44b2
    inc     byte ptr [bp+var_selectedmenu]
    jmp     near ptr LAB_1000_4188
LAB_1000_44b2:
    cmp     byte ptr [bp+var_16], 0x0
    jz      LAB_1000_44be
    cmp     byte ptr [bp+var_6E], 0xff
    jnz     LAB_1000_44c6
LAB_1000_44be:
    mov     byte ptr [bp+var_selectedmenu], 0x1
    jmp     near ptr LAB_1000_4188
LAB_1000_44c6:
    mov     byte ptr [bp+var_selectedmenu], 0x0
    jmp     near ptr LAB_1000_4188
end_hiscore_asm_ endp
    pop     si

; void __cdecl16far security_check(int param_1)
security_check_asm_ proc far
    var_440    = byte ptr  -1088
    var_43E    = byte ptr  -1086
    var_428    = word ptr  -1064
    var_426    = word ptr  -1062
    var_424    = word ptr  -1060
    var_422    = word ptr  -1058
    var_420    = word ptr  -1056
    var_41E    = word ptr  -1054
    var_41C    = word ptr  -1052
    var_41A    = word ptr  -1050
    var_40E    = word ptr  -1038
    var_40C    = word ptr  -1036
    var_40A    = word ptr  -1034
    var_408    = word ptr  -1032
    var_406    = byte ptr  -1030
    var_405    = byte ptr  -1029
    var_404    = byte ptr  -1028
    var_403    = byte ptr  -1027
    var_402    = byte ptr  -1026
    var_401    = byte ptr  -1025
    var_400    = byte ptr  -1024
    param_1    = word ptr    6

    push    bp
    mov     bp, sp
    sub     sp, 0x440
    push    si
    mov     bx, word ptr [bp+param_1]
    mov     al, byte ptr [bx+byte_3BD34]
    mov     byte ptr [aQ00_2], al
    mov     al, byte ptr [bx+byte_3BD34]
    mov     byte ptr [aA00_2], al
    mov     ax, offset aMisc_3
    push    ax
    call    far ptr file_load_resfile
    add     sp, 0x2
    mov     word ptr [bp+var_40C], ax
    mov     word ptr [bp+var_40A], dx
    mov     ax, offset aCop_0
    push    ax
    push    dx
    push    word ptr [bp+var_40C]
    call    far ptr locate_text_res
    add     sp, 0x6
    push    dx
    push    ax
    lea     ax, [bp+var_400]
    push    ax
    call    far ptr copy_string
    add     sp, 0x6
    mov     ax, offset aQ00
    push    ax
    push    word ptr [bp+var_40A]
    push    word ptr [bp+var_40C]
    call    far ptr locate_text_res
    add     sp, 0x6
    push    dx
    push    ax
    mov     ax, offset g_res_id
    push    ax
    call    far ptr copy_string
    add     sp, 0x6
    mov     ax, offset security_check_buf
    push    ax
    lea     ax, [bp+var_400]
    push    ax                                 ; char *
    call    far ptr _strcat
    add     sp, 0x4
    sub     si, si
LAB_1000_4551:
    mov     al, byte ptr [si+g_res_id]
    mov     byte ptr [bp+si+0xfbfa], al
    inc     si
    cmp     si, 0x6
    jl      LAB_1000_4551
    sub     ax, ax
    push    ax
    lea     ax, [bp+var_428]
    push    ax
    push    word ptr [performGraphColor]
    mov     ax, 0x78
    push    ax
    mov     ax, 0xffff
    push    ax
    lea     ax, [bp+var_400]
    push    ss
    push    ax
    mov     ax, 0x1
    push    ax
    mov     ax, 0x3
    push    ax
    call    far ptr show_dialog
    add     sp, 0x12
    mov     byte ptr [(g_res_id+2)], 0x0
    mov     al, byte ptr [bp+var_406]
    mov     byte ptr [g_res_id], al
    mov     al, byte ptr [bp+var_405]
    mov     byte ptr [(g_res_id+1)], al
    push    word ptr [bp+var_426]
    push    word ptr [bp+var_428]
    mov     ax, offset g_res_id
    push    ax
    call    far ptr font_draw_text
    add     sp, 0x6
    mov     al, byte ptr [bp+var_404]
    mov     byte ptr [g_res_id], al
    mov     al, byte ptr [bp+var_403]
    mov     byte ptr [(g_res_id+1)], al
    push    word ptr [bp+var_422]
    push    word ptr [bp+var_424]
    mov     ax, offset g_res_id
    push    ax
    call    far ptr font_draw_text
    add     sp, 0x6
    mov     al, byte ptr [bp+var_402]
    mov     byte ptr [g_res_id], al
    mov     al, byte ptr [bp+var_401]
    mov     byte ptr [(g_res_id+1)], al
    push    word ptr [bp+var_41E]
    push    word ptr [bp+var_420]
    mov     ax, offset g_res_id
    push    ax
    call    far ptr font_draw_text
    add     sp, 0x6
    mov     ax, offset aA00
    push    ax
    push    word ptr [bp+var_40A]
    push    word ptr [bp+var_40C]
    call    far ptr locate_text_res
    add     sp, 0x6
    push    dx
    push    ax
    mov     ax, offset g_res_id
    push    ax
    call    far ptr copy_string
    add     sp, 0x6
    mov     ax, word ptr [bp+var_41C]
    mov     dx, word ptr [bp+var_41A]
    mov     word ptr [bp+var_428], ax
    mov     word ptr [bp+var_426], dx
    mov     ax, offset g_res_id
    push    ax                                 ; char *
    call    far ptr _strlen
    add     sp, 0x2
    mov     word ptr [bp+var_408], ax
    mov     byte ptr [bp+var_43E], 0x0
    mov     word ptr [bp+var_40E], 0x0
LAB_1000_4641:
    mov     ax, offset (terraincenterpos+17*2)
    cwd
    push    dx                                 ; int
    push    ax                                 ; int
    push    word ptr [bp+var_426]              ; int
    push    word ptr [bp+var_428]              ; int
    push    word ptr [bp+var_408]
    lea     ax, [bp+var_43E]
    push    ax                                 ; char *
    call    far ptr call_read_line
    add     sp, 0xc
    sub     si, si
    jmp     LAB_1000_468d
LAB_1000_4664:
    mov     al, byte ptr [bp+si+0xfbc2]
    cbw
    mov     bx, ax
    mov     al, byte ptr [bx+g_ascii_props]
    and     al, 0x1
    mov     byte ptr [bp+var_440], al
    or      al, al
    jz      LAB_1000_468c
    jz      LAB_1000_4684
    mov     al, byte ptr [bp+si+0xfbc2]
    add     al, 0x20
    jmp     LAB_1000_4688
    db 0x90
LAB_1000_4684:
    mov     al, byte ptr [bp+si+0xfbc2]
LAB_1000_4688:
    mov     byte ptr [bp+si+0xfbc2], al
LAB_1000_468c:
    inc     si
LAB_1000_468d:
    cmp     byte ptr [bp+si+0xfbc2], 0x0
    jnz     LAB_1000_4664
    mov     ax, offset g_res_id
    push    ax
    lea     ax, [bp+var_43E]
    push    ax                                 ; char *
    call    far ptr _strcmp
    add     sp, 0x4
    or      ax, ax
    jnz     LAB_1000_46b0
    mov     byte ptr [passed_security], 0x1
    jmp     LAB_1000_46b4
LAB_1000_46b0:
    inc     word ptr [bp+var_40E]
LAB_1000_46b4:
    cmp     byte ptr [passed_security], 0x0
    jnz     LAB_1000_46c5
    cmp     word ptr [bp+var_40E], 0x3
    jz      LAB_1000_46c5
    jmp     near ptr LAB_1000_4641
LAB_1000_46c5:
    call    far ptr sub_275C6
    call    far ptr mouse_draw_transparent_check
    push    word ptr [bp+var_40A]
    push    word ptr [bp+var_40C]
    call    far ptr unload_resource
    add     sp, 0x4
    pop     si
    mov     sp, bp
    pop     bp
    retf
security_check_asm_ endp

; void __cdecl16far set_default_car(void)
set_default_car_asm_ proc far
    mov     byte ptr [gameconfig], 0x43
    mov     byte ptr [gameconfig.(game_playercarid+1)], 0x4f
    mov     byte ptr [gameconfig.(game_playercarid+2)], 0x55
    mov     byte ptr [gameconfig.(game_playercarid+3)], 0x4e
    mov     byte ptr [gameconfig.game_playermaterial], 0x0
    mov     byte ptr [gameconfig.game_opponenttype], 0x0
    mov     byte ptr [gameconfig.game_opponentmaterial], 0x0
    mov     byte ptr [gameconfig.game_playertransmission], 0x1
    mov     byte ptr [gameconfig.game_opponentcarid], 0xff
    retf
set_default_car_asm_ endp

seg000 ends
end

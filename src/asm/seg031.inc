; Generated by restunts-export.py (Ghidra)
include custom.inc
include structs.inc
include seg000.def
include seg001.def
include seg002.def
include seg003.def
include seg004.def
include seg005.def
include seg006.def
include seg007.def
include seg008.def
include seg009.def
include seg010.def
include seg011.def
include seg012.def
include seg013.def
include seg014.def
include seg015.def
include seg016.def
include seg017.def
include seg018.def
include seg019.def
include seg020.def
include seg021.def
include seg022.def
include seg023.def
include seg024.def
include seg025.def
include seg026.def
include seg027.def
include seg028.def
include seg029.def
include seg030.def
include seg032.def
include seg033.def
include seg034.def
include seg035.def
include seg036.def
include seg037.def
include seg038.def
include seg039.def
include dseg.def
include dsegu.def

seg031 segment byte public use16 'STUNTSC'
    public file_load_shape2d_nofatal2_asm_
    public file_combine_and_find_asm_
    public file_find_next_alt_asm_
    public nullsub_1_asm_
    public nullsub_2_asm_
    public init_main_asm_
    public random_wait_asm_
    public load_palandcursor_asm_
    public get_0_asm_
    public mmgr_alloc_resbytes_asm_
    public mmgr_get_res_ofs_diff_scaled_asm_
    public mmgr_get_chunk_size_bytes_asm_

    ifdef RESTUNTS_ORIGINAL
        ; Alias all functions to the original asm implementation.
        file_load_shape2d_nofatal2 = file_load_shape2d_nofatal2_asm_
        file_combine_and_find = file_combine_and_find_asm_
        file_find_next_alt = file_find_next_alt_asm_
        nullsub_1 = nullsub_1_asm_
        nullsub_2 = nullsub_2_asm_
        init_main = init_main_asm_
        random_wait = random_wait_asm_
        load_palandcursor = load_palandcursor_asm_
        get_0 = get_0_asm_
        mmgr_alloc_resbytes = mmgr_alloc_resbytes_asm_
        mmgr_get_res_ofs_diff_scaled = mmgr_get_res_ofs_diff_scaled_asm_
        mmgr_get_chunk_size_bytes = mmgr_get_chunk_size_bytes_asm_
    else
        ; Alias unported functions to the original asm implementation.
        file_load_shape2d_nofatal2 = file_load_shape2d_nofatal2_asm_
        file_combine_and_find = file_combine_and_find_asm_
        file_find_next_alt = file_find_next_alt_asm_
        nullsub_1 = nullsub_1_asm_
        nullsub_2 = nullsub_2_asm_
        init_main = init_main_asm_
        random_wait = random_wait_asm_
        load_palandcursor = load_palandcursor_asm_
        get_0 = get_0_asm_
        mmgr_alloc_resbytes = mmgr_alloc_resbytes_asm_
        mmgr_get_res_ofs_diff_scaled = mmgr_get_res_ofs_diff_scaled_asm_
        mmgr_get_chunk_size_bytes = mmgr_get_chunk_size_bytes_asm_
    endif
seg031 ends

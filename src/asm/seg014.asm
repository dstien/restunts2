; Generated by restunts-export.py (Ghidra)
.8086
.model medium

include seg014.inc

seg014 segment byte public use16 'STUNTSC'
    assume cs:seg014, es:nothing, ss:nothing, ds:dseg

    db 0x90

; void __cdecl16far preRender_wheel_helper3(int * param_1, POINT2D * vertlines)
preRender_wheel_helper3_asm_ proc far
    var_A      = word ptr  -10
    var_8      = word ptr   -8
    var_6      = word ptr   -6
    var_4      = word ptr   -4
    var_2      = word ptr   -2
    param_1    = word ptr    6
    vertlines  = word ptr    8

    push    bp
    mov     bp, sp
    sub     sp, 0xa
    push    di
    push    si
    mov     bx, word ptr [bp+param_1]
    mov     si, word ptr [bx]
    mov     ax, word ptr [bx+0x4]
    sub     ax, si
    mov     bx, word ptr [bp+vertlines]
    mov     word ptr [bx], ax
    mov     bx, word ptr [bp+param_1]
    mov     ax, word ptr [bx+0x6]
    sub     ax, word ptr [bx+0x2]
    mov     bx, word ptr [bp+vertlines]
    mov     word ptr [bx+0x2], ax
    mov     bx, word ptr [bp+param_1]
    mov     ax, word ptr [bx+0x8]
    sub     ax, si
    mov     bx, word ptr [bp+vertlines]
    mov     word ptr [bx+0x10], ax
    mov     bx, word ptr [bp+param_1]
    mov     ax, word ptr [bx+0xa]
    sub     ax, word ptr [bx+0x2]
    mov     bx, word ptr [bp+vertlines]
    mov     word ptr [bx+0x12], ax
    mov     ax, 0x2d41
    push    ax
    mov     ax, word ptr [bx+0x10]
    add     ax, word ptr [bx]
    push    ax
    call    far ptr multiply_and_scale
    add     sp, 0x4
    mov     bx, word ptr [bp+vertlines]
    mov     word ptr [bx+0x8], ax
    mov     ax, 0x2d41
    push    ax
    mov     ax, word ptr [bx+0x2]
    add     ax, word ptr [bx+0x12]
    push    ax
    call    far ptr multiply_and_scale
    add     sp, 0x4
    mov     bx, word ptr [bp+vertlines]
    mov     word ptr [bx+0xa], ax
    mov     si, word ptr [bx+0x10]
    sar     si, 0x1
    mov     ax, offset unk_3F0AE
    push    ax
    mov     ax, word ptr [bx]
    add     ax, si
    push    ax
    call    far ptr multiply_and_scale
    add     sp, 0x4
    mov     bx, word ptr [bp+vertlines]
    mov     word ptr [bx+0x4], ax
    mov     di, word ptr [bx+0x12]
    sar     di, 0x1
    mov     ax, 0x393e
    push    ax
    mov     ax, word ptr [bx+0x2]
    add     ax, di
    push    ax
    call    far ptr multiply_and_scale
    add     sp, 0x4
    mov     bx, word ptr [bp+vertlines]
    mov     word ptr [bx+0x6], ax
    mov     ax, word ptr [bx]
    sar     ax, 0x1
    mov     word ptr [bp+var_4], ax
    mov     ax, 0x393e
    push    ax
    mov     ax, word ptr [bx+0x10]
    add     ax, word ptr [bp+var_4]
    push    ax
    call    far ptr multiply_and_scale
    add     sp, 0x4
    mov     bx, word ptr [bp+vertlines]
    mov     word ptr [bx+0xc], ax
    mov     ax, word ptr [bx+0x2]
    sar     ax, 0x1
    mov     word ptr [bp+var_6], ax
    mov     ax, 0x393e
    push    ax
    mov     ax, word ptr [bx+0x12]
    add     ax, word ptr [bp+var_6]
    push    ax
    call    far ptr multiply_and_scale
    add     sp, 0x4
    mov     bx, word ptr [bp+vertlines]
    mov     word ptr [bx+0xe], ax
    mov     ax, word ptr [bx]
    neg     ax
    mov     word ptr [bp+var_8], ax
    mov     ax, 0x2d41
    push    ax
    mov     ax, word ptr [bx+0x10]
    add     ax, word ptr [bp+var_8]
    push    ax
    call    far ptr multiply_and_scale
    add     sp, 0x4
    mov     bx, word ptr [bp+vertlines]
    mov     word ptr [bx+0x18], ax
    mov     ax, word ptr [bx+0x2]
    neg     ax
    mov     word ptr [bp+var_A], ax
    mov     ax, 0x2d41
    push    ax
    mov     ax, word ptr [bx+0x12]
    add     ax, word ptr [bp+var_A]
    push    ax
    call    far ptr multiply_and_scale
    add     sp, 0x4
    mov     bx, word ptr [bp+vertlines]
    mov     word ptr [bx+0x1a], ax
    mov     ax, 0x393e
    push    ax
    mov     ax, word ptr [bp+var_8]
    add     ax, si
    push    ax
    call    far ptr multiply_and_scale
    add     sp, 0x4
    mov     bx, word ptr [bp+vertlines]
    mov     word ptr [bx+0x1c], ax
    mov     ax, 0x393e
    push    ax
    mov     ax, word ptr [bp+var_A]
    add     ax, di
    push    ax
    call    far ptr multiply_and_scale
    add     sp, 0x4
    mov     bx, word ptr [bp+vertlines]
    mov     word ptr [bx+0x1e], ax
    mov     ax, 0x393e
    push    ax
    mov     ax, word ptr [bx+0x10]
    sub     ax, word ptr [bp+var_4]
    push    ax
    call    far ptr multiply_and_scale
    add     sp, 0x4
    mov     bx, word ptr [bp+vertlines]
    mov     word ptr [bx+0x14], ax
    mov     ax, 0x393e
    push    ax
    mov     ax, word ptr [bx+0x12]
    sub     ax, word ptr [bp+var_6]
    push    ax
    call    far ptr multiply_and_scale
    add     sp, 0x4
    mov     bx, word ptr [bp+vertlines]
    mov     word ptr [bx+0x16], ax
    mov     word ptr [bp+var_2], 0x0
LAB_3624_019c:
    mov     si, word ptr [bp+var_2]
    mov     cl, 0x2
    shl     si, cl
    add     si, word ptr [bp+vertlines]
    mov     bx, word ptr [bp+param_1]
    mov     di, word ptr [bx]
    mov     ax, di
    sub     ax, word ptr [si]
    mov     word ptr [si+0x20], ax
    mov     ax, word ptr [bx+0x2]
    sub     ax, word ptr [si+0x2]
    mov     word ptr [si+0x22], ax
    add     word ptr [si], di
    mov     ax, word ptr [bx+0x2]
    add     word ptr [si+0x2], ax
    inc     word ptr [bp+var_2]
    cmp     word ptr [bp+var_2], 0x8
    jl      LAB_3624_019c
    pop     si
    pop     di
    mov     sp, bp
    pop     bp
    retf
preRender_wheel_helper3_asm_ endp

seg014 ends
end

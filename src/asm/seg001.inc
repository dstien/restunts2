; Generated by restunts-export.py (Ghidra)
include custom.inc
include structs.inc
include seg000.def
include seg002.def
include seg003.def
include seg004.def
include seg005.def
include seg006.def
include seg007.def
include seg008.def
include seg009.def
include seg010.def
include seg011.def
include seg012.def
include seg013.def
include seg014.def
include seg015.def
include seg016.def
include seg017.def
include seg018.def
include seg019.def
include seg020.def
include seg021.def
include seg022.def
include seg023.def
include seg024.def
include seg025.def
include seg026.def
include seg027.def
include seg028.def
include seg029.def
include seg030.def
include seg031.def
include seg032.def
include seg033.def
include seg034.def
include seg035.def
include seg036.def
include seg037.def
include seg038.def
include seg039.def
include dseg.def
include dsegu.def

seg001 segment byte public use16 'STUNTSC'
    public opponent_op_asm_
    public mat_mul_vector2_asm_
    public update_player_state_asm_
    public init_carstate_from_simd_asm_
    public init_game_state_asm_
    public restore_gamestate_asm_
    public update_gamestate_asm_
    public player_op_asm_
    public detect_penalty_asm_
    public update_car_speed_asm_
    public update_grip_asm_
    public car_car_speed_adjust_maybe_asm_
    public carState_rc_op_asm_
    public upd_statef20_from_steer_input_asm_
    public audio_carstate_asm_
    public audio_unk3_asm_
    public sub_18D06_asm_
    public sub_18D60_asm_
    public car_car_coll_detect_maybe_asm_
    public init_plantrak_asm_
    public do_opponent_op_asm_
    public update_crash_state_asm_
    public plane_rotate_op_asm_
    public plane_origin_op_asm_
    public vec_normalInnerProduct_asm_
    public state_op_unk_asm_
    public sub_19BA0_asm_
    public setup_aero_trackdata_asm_

    ifdef RESTUNTS_ORIGINAL
        ; Alias all functions to the original asm implementation.
        opponent_op = opponent_op_asm_
        mat_mul_vector2 = mat_mul_vector2_asm_
        update_player_state = update_player_state_asm_
        init_carstate_from_simd = init_carstate_from_simd_asm_
        init_game_state = init_game_state_asm_
        restore_gamestate = restore_gamestate_asm_
        update_gamestate = update_gamestate_asm_
        player_op = player_op_asm_
        detect_penalty = detect_penalty_asm_
        update_car_speed = update_car_speed_asm_
        update_grip = update_grip_asm_
        car_car_speed_adjust_maybe = car_car_speed_adjust_maybe_asm_
        carState_rc_op = carState_rc_op_asm_
        upd_statef20_from_steer_input = upd_statef20_from_steer_input_asm_
        audio_carstate = audio_carstate_asm_
        audio_unk3 = audio_unk3_asm_
        sub_18D06 = sub_18D06_asm_
        sub_18D60 = sub_18D60_asm_
        car_car_coll_detect_maybe = car_car_coll_detect_maybe_asm_
        init_plantrak = init_plantrak_asm_
        do_opponent_op = do_opponent_op_asm_
        update_crash_state = update_crash_state_asm_
        plane_rotate_op = plane_rotate_op_asm_
        plane_origin_op = plane_origin_op_asm_
        vec_normalInnerProduct = vec_normalInnerProduct_asm_
        state_op_unk = state_op_unk_asm_
        sub_19BA0 = sub_19BA0_asm_
        setup_aero_trackdata = setup_aero_trackdata_asm_
    else
        ; Alias unported functions to the original asm implementation.
        opponent_op = opponent_op_asm_
        mat_mul_vector2 = mat_mul_vector2_asm_
        update_player_state = update_player_state_asm_
        init_carstate_from_simd = init_carstate_from_simd_asm_
        init_game_state = init_game_state_asm_
        restore_gamestate = restore_gamestate_asm_
        update_gamestate = update_gamestate_asm_
        player_op = player_op_asm_
        detect_penalty = detect_penalty_asm_
        update_car_speed = update_car_speed_asm_
        update_grip = update_grip_asm_
        car_car_speed_adjust_maybe = car_car_speed_adjust_maybe_asm_
        carState_rc_op = carState_rc_op_asm_
        upd_statef20_from_steer_input = upd_statef20_from_steer_input_asm_
        audio_carstate = audio_carstate_asm_
        audio_unk3 = audio_unk3_asm_
        sub_18D06 = sub_18D06_asm_
        sub_18D60 = sub_18D60_asm_
        car_car_coll_detect_maybe = car_car_coll_detect_maybe_asm_
        init_plantrak = init_plantrak_asm_
        do_opponent_op = do_opponent_op_asm_
        update_crash_state = update_crash_state_asm_
        plane_rotate_op = plane_rotate_op_asm_
        plane_origin_op = plane_origin_op_asm_
        vec_normalInnerProduct = vec_normalInnerProduct_asm_
        state_op_unk = state_op_unk_asm_
        sub_19BA0 = sub_19BA0_asm_
        setup_aero_trackdata = setup_aero_trackdata_asm_
    endif
seg001 ends

; Generated by restunts-export.py (Ghidra)
.8086
.model medium

include seg015.inc

seg015 segment byte public use16 'STUNTSC'
    assume cs:seg015, es:nothing, ss:nothing, ds:dseg

; void __cdecl16far preRender_sphere_helper2(int * param_1, POINT2D * vertlines_out)
preRender_sphere_helper2_asm_ proc far
    var_1A     = word ptr  -26
    var_18     = word ptr  -24
    var_16     = word ptr  -22
    var_14     = word ptr  -20
    var_12     = word ptr  -18
    var_10     = word ptr  -16
    var_E      = word ptr  -14
    var_C      = word ptr  -12
    var_A      = word ptr  -10
    var_8      = word ptr   -8
    var_6      = word ptr   -6
    var_4      = word ptr   -4
    var_2      = word ptr   -2
    param_1    = word ptr    6
    vertlines_out = word ptr    8

    push    bp
    mov     bp, sp
    sub     sp, 0x1a
    push    di
    push    si
    mov     bx, word ptr [bp+param_1]
    mov     si, word ptr [bx]
    mov     ax, word ptr [bx+0x4]
    sub     ax, si
    mov     bx, word ptr [bp+vertlines_out]
    mov     word ptr [bx], ax
    mov     bx, word ptr [bp+param_1]
    mov     ax, word ptr [bx+0x6]
    sub     ax, word ptr [bx+0x2]
    mov     bx, word ptr [bp+vertlines_out]
    mov     word ptr [bx+0x2], ax
    mov     bx, word ptr [bp+param_1]
    mov     ax, word ptr [bx+0x8]
    sub     ax, si
    mov     bx, word ptr [bp+vertlines_out]
    mov     word ptr [bx+0x20], ax
    mov     bx, word ptr [bp+param_1]
    mov     ax, word ptr [bx+0xa]
    sub     ax, word ptr [bx+0x2]
    mov     bx, word ptr [bp+vertlines_out]
    mov     word ptr [bx+0x22], ax
    mov     ax, word ptr [bx]
    sar     ax, 0x1
    mov     word ptr [bp+var_2], ax
    sar     ax, 0x1
    mov     word ptr [bp+var_A], ax
    mov     ax, word ptr [bp+var_2]
    add     ax, word ptr [bp+var_A]
    mov     word ptr [bp+var_6], ax
    mov     ax, word ptr [bx+0x2]
    sar     ax, 0x1
    mov     word ptr [bp+var_4], ax
    sar     ax, 0x1
    mov     word ptr [bp+var_C], ax
    mov     ax, word ptr [bp+var_4]
    add     ax, word ptr [bp+var_C]
    mov     word ptr [bp+var_8], ax
    mov     ax, word ptr [bx+0x20]
    sar     ax, 0x1
    mov     word ptr [bp+var_10], ax
    sar     ax, 0x1
    mov     word ptr [bp+var_18], ax
    mov     ax, word ptr [bp+var_10]
    add     ax, word ptr [bp+var_18]
    mov     word ptr [bp+var_14], ax
    mov     ax, word ptr [bx+0x22]
    sar     ax, 0x1
    mov     word ptr [bp+var_12], ax
    sar     ax, 0x1
    mov     word ptr [bp+var_1A], ax
    mov     ax, word ptr [bp+var_12]
    add     ax, word ptr [bp+var_1A]
    mov     word ptr [bp+var_16], ax
    mov     ax, 0x2d41
    push    ax
    mov     ax, word ptr [bx+0x20]
    add     ax, word ptr [bx]
    push    ax
    call    far ptr multiply_and_scale
    add     sp, 0x4
    mov     bx, word ptr [bp+vertlines_out]
    mov     word ptr [bx+0x10], ax
    mov     ax, 0x2d41
    push    ax
    mov     ax, word ptr [bx+0x2]
    add     ax, word ptr [bx+0x22]
    push    ax
    call    far ptr multiply_and_scale
    add     sp, 0x4
    mov     bx, word ptr [bp+vertlines_out]
    mov     word ptr [bx+0x12], ax
    mov     ax, 0x393e
    push    ax
    mov     ax, word ptr [bx]
    add     ax, word ptr [bp+var_10]
    push    ax
    call    far ptr multiply_and_scale
    add     sp, 0x4
    mov     bx, word ptr [bp+vertlines_out]
    mov     word ptr [bx+0x8], ax
    mov     ax, 0x393e
    push    ax
    mov     ax, word ptr [bx+0x2]
    add     ax, word ptr [bp+var_12]
    push    ax
    call    far ptr multiply_and_scale
    add     sp, 0x4
    mov     bx, word ptr [bp+vertlines_out]
    mov     word ptr [bx+0xa], ax
    mov     ax, 0x393e
    push    ax
    mov     ax, word ptr [bx+0x20]
    add     ax, word ptr [bp+var_2]
    push    ax
    call    far ptr multiply_and_scale
    add     sp, 0x4
    mov     bx, word ptr [bp+vertlines_out]
    mov     word ptr [bx+0x18], ax
    mov     ax, 0x393e
    push    ax
    mov     ax, word ptr [bx+0x22]
    add     ax, word ptr [bp+var_4]
    push    ax
    call    far ptr multiply_and_scale
    add     sp, 0x4
    mov     bx, word ptr [bp+vertlines_out]
    mov     word ptr [bx+0x1a], ax
    mov     ax, 0x3e17
    push    ax
    mov     ax, word ptr [bx]
    add     ax, word ptr [bp+var_18]
    push    ax
    call    far ptr multiply_and_scale
    add     sp, 0x4
    mov     bx, word ptr [bp+vertlines_out]
    mov     word ptr [bx+0x4], ax
    mov     ax, 0x3e17
    push    ax
    mov     ax, word ptr [bx+0x2]
    add     ax, word ptr [bp+var_1A]
    push    ax
    call    far ptr multiply_and_scale
    add     sp, 0x4
    mov     bx, word ptr [bp+vertlines_out]
    mov     word ptr [bx+0x6], ax
    mov     ax, 0x3e17
    push    ax
    mov     ax, word ptr [bx+0x20]
    add     ax, word ptr [bp+var_A]
    push    ax
    call    far ptr multiply_and_scale
    add     sp, 0x4
    mov     bx, word ptr [bp+vertlines_out]
    mov     word ptr [bx+0x1c], ax
    mov     ax, 0x3e17
    push    ax
    mov     ax, word ptr [bx+0x22]
    add     ax, word ptr [bp+var_C]
    push    ax
    call    far ptr multiply_and_scale
    add     sp, 0x4
    mov     bx, word ptr [bp+vertlines_out]
    mov     word ptr [bx+0x1e], ax
    mov     ax, 0x3333
    push    ax
    mov     ax, word ptr [bx]
    add     ax, word ptr [bp+var_14]
    push    ax
    call    far ptr multiply_and_scale
    add     sp, 0x4
    mov     bx, word ptr [bp+vertlines_out]
    mov     word ptr [bx+0xc], ax
    mov     ax, 0x3333
    push    ax
    mov     ax, word ptr [bx+0x2]
    add     ax, word ptr [bp+var_16]
    push    ax
    call    far ptr multiply_and_scale
    add     sp, 0x4
    mov     bx, word ptr [bp+vertlines_out]
    mov     word ptr [bx+0xe], ax
    mov     ax, 0x3333
    push    ax
    mov     ax, word ptr [bx+0x20]
    add     ax, word ptr [bp+var_6]
    push    ax
    call    far ptr multiply_and_scale
    add     sp, 0x4
    mov     bx, word ptr [bp+vertlines_out]
    mov     word ptr [bx+0x14], ax
    mov     ax, 0x3333
    push    ax
    mov     ax, word ptr [bx+0x22]
    add     ax, word ptr [bp+var_8]
    push    ax
    call    far ptr multiply_and_scale
    add     sp, 0x4
    mov     bx, word ptr [bp+vertlines_out]
    mov     word ptr [bx+0x16], ax
    mov     ax, word ptr [bx]
    neg     ax
    mov     si, ax
    mov     ax, 0x2d41
    push    ax
    mov     ax, word ptr [bx+0x20]
    add     ax, si
    push    ax
    call    far ptr multiply_and_scale
    add     sp, 0x4
    mov     bx, word ptr [bp+vertlines_out]
    mov     word ptr [bx+0x30], ax
    mov     ax, word ptr [bx+0x2]
    neg     ax
    mov     di, ax
    mov     ax, 0x2d41
    push    ax
    mov     ax, word ptr [bx+0x22]
    add     ax, di
    push    ax
    call    far ptr multiply_and_scale
    add     sp, 0x4
    mov     bx, word ptr [bp+vertlines_out]
    mov     word ptr [bx+0x32], ax
    mov     ax, 0x393e
    push    ax
    mov     ax, word ptr [bp+var_10]
    add     ax, si
    push    ax
    call    far ptr multiply_and_scale
    add     sp, 0x4
    mov     bx, word ptr [bp+vertlines_out]
    mov     word ptr [bx+0x38], ax
    mov     ax, 0x393e
    push    ax
    mov     ax, word ptr [bp+var_12]
    add     ax, di
    push    ax
    call    far ptr multiply_and_scale
    add     sp, 0x4
    mov     bx, word ptr [bp+vertlines_out]
    mov     word ptr [bx+0x3a], ax
    mov     ax, 0x393e
    push    ax
    mov     ax, word ptr [bx+0x20]
    sub     ax, word ptr [bp+var_2]
    push    ax
    call    far ptr multiply_and_scale
    add     sp, 0x4
    mov     bx, word ptr [bp+vertlines_out]
    mov     word ptr [bx+0x28], ax
    mov     ax, 0x393e
    push    ax
    mov     ax, word ptr [bx+0x22]
    sub     ax, word ptr [bp+var_4]
    push    ax
    call    far ptr multiply_and_scale
    add     sp, 0x4
    mov     bx, word ptr [bp+vertlines_out]
    mov     word ptr [bx+0x2a], ax
    mov     ax, word ptr [bx]
    neg     ax
    mov     si, ax
    mov     ax, 0x3e17
    push    ax
    mov     ax, word ptr [bp+var_18]
    add     ax, si
    push    ax
    call    far ptr multiply_and_scale
    add     sp, 0x4
    mov     bx, word ptr [bp+vertlines_out]
    mov     word ptr [bx+0x3c], ax
    mov     ax, word ptr [bx+0x2]
    neg     ax
    mov     di, ax
    mov     ax, 0x3e17
    push    ax
    mov     ax, word ptr [bp+var_1A]
    add     ax, di
    push    ax
    call    far ptr multiply_and_scale
    add     sp, 0x4
    mov     bx, word ptr [bp+vertlines_out]
    mov     word ptr [bx+0x3e], ax
    mov     ax, 0x3e17
    push    ax
    mov     ax, word ptr [bx+0x20]
    sub     ax, word ptr [bp+var_A]
    push    ax
    call    far ptr multiply_and_scale
    add     sp, 0x4
    mov     bx, word ptr [bp+vertlines_out]
    mov     word ptr [bx+0x24], ax
    mov     ax, 0x3e17
    push    ax
    mov     ax, word ptr [bx+0x22]
    sub     ax, word ptr [bp+var_C]
    push    ax
    call    far ptr multiply_and_scale
    add     sp, 0x4
    mov     bx, word ptr [bp+vertlines_out]
    mov     word ptr [bx+0x26], ax
    mov     ax, 0x3333
    push    ax
    mov     ax, word ptr [bp+var_14]
    add     ax, si
    push    ax
    call    far ptr multiply_and_scale
    add     sp, 0x4
    mov     bx, word ptr [bp+vertlines_out]
    mov     word ptr [bx+0x34], ax
    mov     ax, 0x3333
    push    ax
    mov     ax, word ptr [bp+var_16]
    add     ax, di
    push    ax
    call    far ptr multiply_and_scale
    add     sp, 0x4
    mov     bx, word ptr [bp+vertlines_out]
    mov     word ptr [bx+0x36], ax
    mov     ax, 0x3333
    push    ax
    mov     ax, word ptr [bx+0x20]
    sub     ax, word ptr [bp+var_6]
    push    ax
    call    far ptr multiply_and_scale
    add     sp, 0x4
    mov     bx, word ptr [bp+vertlines_out]
    mov     word ptr [bx+0x2c], ax
    mov     ax, 0x3333
    push    ax
    mov     ax, word ptr [bx+0x22]
    sub     ax, word ptr [bp+var_8]
    push    ax
    call    far ptr multiply_and_scale
    add     sp, 0x4
    mov     bx, word ptr [bp+vertlines_out]
    mov     word ptr [bx+0x2e], ax
    mov     word ptr [bp+var_E], 0x0
LAB_3641_036b:
    mov     si, word ptr [bp+var_E]
    mov     cl, 0x2
    shl     si, cl
    add     si, word ptr [bp+vertlines_out]
    mov     bx, word ptr [bp+param_1]
    mov     di, word ptr [bx]
    mov     ax, di
    sub     ax, word ptr [si]
    mov     word ptr [si+0x40], ax
    mov     ax, word ptr [bx+0x2]
    sub     ax, word ptr [si+0x2]
    mov     word ptr [si+0x42], ax
    add     word ptr [si], di
    mov     ax, word ptr [bx+0x2]
    add     word ptr [si+0x2], ax
    inc     word ptr [bp+var_E]
    cmp     word ptr [bp+var_E], 0x10
    jl      LAB_3641_036b
    pop     si
    pop     di
    mov     sp, bp
    pop     bp
    retf
preRender_sphere_helper2_asm_ endp

seg015 ends
end
